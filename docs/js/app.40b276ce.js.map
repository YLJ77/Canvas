{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?563c","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?700b","webpack:///./src/util/appFunc.js","webpack:///./src/util/shape.js","webpack:///./src/util/Protractor.js","webpack:///./src/util/Eraser.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/views/Home.vue?5fdc","webpack:///./src/assets/img/test.jpg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_8402a5c6_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","Homevue_type_template_id_649c7d62_scoped_true_render","width","height","on","mousedown","onMouseDown","mousemove","onMouseMove","mouseup","onMouseUp","_v","for","directives","rawName","expression","change","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","color","multiple","shape","type","domProps","input","composing","sides","startRadians","checked","_q","_e","isArray","guidewires","_i","$$a","$$el","$$c","$$v","$$i","concat","isFillColor","click","erase","eraserWidth","eraserType","Homevue_type_template_id_649c7d62_scoped_true_staticRenderFns","copyObj","_ref","obj","exclusiveKey","assign_default","create_default","get_prototype_of_default","keys_default","forEach","includes","esm_typeof","JSON","parse","stringify_default","drawPoint","_ref2","x","y","_ref2$radius","radius","ctx","_ref2$color","save","beginPath","fillStyle","arc","Math","PI","fill","restore","restoreDrawingSurface","_ref4","imgData","putImageData","saveDrawingSurface","_ref5","canvas","getImageData","windowToCanvas","_ref6","bbox","getBoundingClientRect","left","top","drawHorizontalLine","_ref7","moveTo","lineTo","stroke","drawVerticalLine","_ref8","drawGuidewires","_ref9","strokeStyle","lineWidth","drawGrid","_ref10","stepx","stepy","Point","classCallCheck","Shape","filled","constructor","offsets","loc","offsetX","offsetY","_this","offset","createPath","_debugger","drawDebuggerPoint","radians","tx","ty","sin","cos","currentTransform","a","e","b","f","transform","arguments","undefined","setShapeTransform","draw","_ref3","_ctx$currentTransform","BezierCurve","_Shape","_this2","_ref4$pointRadius","pointRadius","endPoints","controlPoints","possibleConstructorReturn","getPrototypeOf","draggingPoint","isEditing","setCenter","inherits","createClass","_this$getRectInfo","getRectInfo","minX","minY","sqrt","pow","tEndPonts","tControlPoints","point","_this3","centerX","centerY","tPoint","getTransformPointToScreenPoint","_ref5$filled","_this4","_ref6$isDraw","isDraw","closePath","bezierCurveTo","_this5","index","_this$getRectInfo2","rect","maxX","maxY","min","max","createPointPath","createRectPath","drawCurve","points","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","next","done","isPointInPath","err","return","Line","_Shape2","_this6","beginX","beginY","endX","endY","abs","Circle","_Shape3","_this7","RoundRect","_Shape4","_this8","_ref9$cornerRadius","cornerRadius","cornerX","cornerY","isRotated","setControlPoint","basePointX","controlPointX","controlPointY","controlPoint","cx1","cy1","cx2","cy2","tCornerX","tCornerY","_this9","tBasePointX","tControlPointX","tControlPointY","tPoints","entry","basePoint","controlPoint1","controlPoint2","_this10","updatePointAfterRotated","_controlPoint","toArray","cPoint","arcTo","_controlPoint2","Polygon","_Shape5","_ref11","_this11","getPoints","Protractor","rotatingLockRadians","RADIUS","STROKE_STYLE","FILL_STYLE","SHADOW_COLOR","DEGREE_RING_MARGIN","TRACKING_RING_MARGIN","DEGREE_ANNOTATIONS_FILL_STYLE","DEGREE_ANNOTATIONS_TEXT_SIZE","DEGREE_OUTER_RING_MARGIN","TICK_WIDTH","TICK_LONG_STROKE_STYLE","TICK_SHORT_STROKE_STYLE","TRACKING_RING_STROKING_STYLE","_this$shape","shadowColor","endpt","atan","font","textAlign","textBaseline","fillText","toFixed","ANGLE_MAX","ANGLE_DELTA","cnt","shadowOffsetX","shadowOffsetY","shadowBlur","drawCentroid","drawCentroidGuidewire","drawOutMostDial","drawDegreeOuterDial","drawDegreeDialTicks","drawDegreeInnerDial","drawDegreeAnnotations","Eraser","ERASER_LINE_WIDTH","ERASER_SHADOW_COLOR","ERASER_SHADOW_STYLE","ERASER_STROKE_STYLE","ERASER_SHADOW_OFFSET","ERASER_SHADOW_BLUR","parse_float_default","clip","GRID_HORIZONTAL_SPACING","GRID_VERTICAL_SPACING","GRID_LINE_COLOR","setErasePath","setEraserAttributes","setDrawPath","Homevue_type_script_lang_js_","shapes","rubberbandLine","drawingSurfaceImageData","rubberbandRect","dragging","selectedShape","rotatingLockEngaged","rotatingShape","protractor","eraser","mounted","getContext","setCanvasSize","drawRubberbandLines","watch","style","cursor","inactiveEditing","redraw","methods","test","_this$canvas","image","Image","src","test_default","onload","drawImage","innerWidth","innerHeight","stopRotatingShape","saveCanvasInfo","drawShapes","drawBezierCurve","_this$getEndAndContro","getEndAndControlPoints","curve","shape_BezierCurve","drawPolygon","_this$rubberbandLine","_this$rubberbandLine$","polygon","shape_Polygon","document","getElementById","clearRect","updateRubberbandRect","_this$rubberbandLine2","drawRubberbandShape","drawRoundedRect","_ref3$cornerRadius","_this$rubberbandLine3","_this$rubberbandLine4","_this$rubberbandLine5","roundRect","shape_RoundRect","drawCircle","_this$rubberbandLine6","_this$rubberbandLine7","_this$rubberbandLine8","circle","shape_Circle","drawLine","_this$rubberbandLine9","_this$rubberbandLine10","line","shape_Line","updateRubberband","activeEditing","getSelectedShape","createEditPath","getDraggingPoint","savePointOffset","initProtractor","Protractor_Protractor","rotateShape","rotate","clientX","clientY","preventDefault","Eraser_Eraser","_this$rubberbandLine11","updatePointsOnMoving","updatePointOnEditing","eraseLast","drawEraser","pos","_this$rubberbandLine12","views_Homevue_type_script_lang_js_","Home_component","Home","Vue","use","Router","router","routes","path","Vuex","store","Store","state","mutations","actions","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_649c7d62_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_649c7d62_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.40b276ce.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=8402a5c6&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":\"canvas\",\"width\":\"600\",\"height\":\"600\"},on:{\"mousedown\":_vm.onMouseDown,\"mousemove\":_vm.onMouseMove,\"mouseup\":_vm.onMouseUp}},[_vm._v(\"Canvas not supported\")]),_c('ul',{attrs:{\"id\":\"controls\"}},[_c('li',[_c('label',{attrs:{\"for\":\"color\"}},[_vm._v(\"颜色\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"id\":\"color\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.color=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"red\"}},[_vm._v(\"red\")]),_c('option',{attrs:{\"value\":\"green\"}},[_vm._v(\"green\")]),_c('option',{attrs:{\"value\":\"blue\"}},[_vm._v(\"blue\")]),_c('option',{attrs:{\"value\":\"orange\"}},[_vm._v(\"orange\")]),_c('option',{attrs:{\"value\":\"cornflowerblue\",\"selected\":\"\"}},[_vm._v(\"cornflowerblue\")]),_c('option',{attrs:{\"value\":\"goldenrod\"}},[_vm._v(\"goldenrod\")]),_c('option',{attrs:{\"value\":\"navy\"}},[_vm._v(\"navy\")]),_c('option',{attrs:{\"value\":\"purple\"}},[_vm._v(\"purple\")])])]),_c('li',[_c('label',{attrs:{\"for\":\"shape\"}},[_vm._v(\"形状\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.shape),expression:\"shape\"}],attrs:{\"id\":\"shape\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.shape=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.mode='normal'}]}},[_c('option',{attrs:{\"value\":\"Circle\"}},[_vm._v(\"circle\")]),_c('option',{attrs:{\"value\":\"Line\"}},[_vm._v(\"line\")]),_c('option',{attrs:{\"value\":\"RoundedRect\"}},[_vm._v(\"RoundedRect\")]),_c('option',{attrs:{\"value\":\"Polygon\"}},[_vm._v(\"Polygon\")]),_c('option',{attrs:{\"value\":\"BezierCurve\"}},[_vm._v(\"BezierCurve\")])])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.shape === 'Polygon'),expression:\"shape === 'Polygon'\"}]},[_c('label',{attrs:{\"for\":\"sides\"}},[_vm._v(\"边数\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sides),expression:\"sides\"}],attrs:{\"type\":\"text\",\"id\":\"sides\"},domProps:{\"value\":(_vm.sides)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.sides=$event.target.value}}}),_c('label',{attrs:{\"for\":\"startRadians\"}},[_vm._v(\"开始角度\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.startRadians),expression:\"startRadians\"}],attrs:{\"type\":\"text\",\"id\":\"startRadians\"},domProps:{\"value\":(_vm.startRadians)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.startRadians=$event.target.value}}})]),_c('li',[_c('label',{attrs:{\"for\":\"normal-radio\"}},[_vm._v(\"画图\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"normal-radio\",\"value\":\"normal\"},domProps:{\"checked\":_vm._q(_vm.mode,\"normal\")},on:{\"change\":function($event){_vm.mode=\"normal\"}}}),_c('label',{attrs:{\"for\":\"drag-radio\"}},[_vm._v(\"拖拽\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"drag-radio\",\"value\":\"drag\"},domProps:{\"checked\":_vm._q(_vm.mode,\"drag\")},on:{\"change\":function($event){_vm.mode=\"drag\"}}}),(_vm.shape === 'BezierCurve')?[_c('label',{attrs:{\"for\":\"edit-radio\"}},[_vm._v(\"编辑\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"edit-radio\",\"value\":\"edit\"},domProps:{\"checked\":_vm._q(_vm.mode,\"edit\")},on:{\"change\":function($event){_vm.mode=\"edit\"}}})]:_vm._e(),_c('label',{attrs:{\"for\":\"rotate-radio\"}},[_vm._v(\"旋转\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"rotate-radio\",\"value\":\"rotate\"},domProps:{\"checked\":_vm._q(_vm.mode,\"rotate\")},on:{\"change\":function($event){_vm.mode=\"rotate\"}}}),_c('label',{attrs:{\"for\":\"eraser-radio\"}},[_vm._v(\"橡皮擦\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"eraser-radio\",\"value\":\"erase\"},domProps:{\"checked\":_vm._q(_vm.mode,\"erase\")},on:{\"change\":function($event){_vm.mode=\"erase\"}}}),_c('label',{attrs:{\"for\":\"guidewireCheckbox\"}},[_vm._v(\"导线\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.guidewires),expression:\"guidewires\"}],attrs:{\"id\":\"guidewireCheckbox\",\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(_vm.guidewires)?_vm._i(_vm.guidewires,null)>-1:(_vm.guidewires)},on:{\"change\":function($event){var $$a=_vm.guidewires,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.guidewires=$$a.concat([$$v]))}else{$$i>-1&&(_vm.guidewires=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.guidewires=$$c}}}}),_c('label',{attrs:{\"for\":\"checkbox\"}},[_vm._v(\"填充:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isFillColor),expression:\"isFillColor\"}],attrs:{\"type\":\"checkbox\",\"id\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isFillColor)?_vm._i(_vm.isFillColor,null)>-1:(_vm.isFillColor)},on:{\"change\":function($event){var $$a=_vm.isFillColor,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isFillColor=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isFillColor=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isFillColor=$$c}}}}),_c('input',{attrs:{\"id\":\"eraseAllButton\",\"type\":\"button\",\"value\":\"擦除所有\"},on:{\"click\":_vm.erase}})],2),_c('li',[_c('label',{attrs:{\"for\":\"eraserWidth\"}},[_vm._v(\"橡皮擦宽度\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.eraserWidth),expression:\"eraserWidth\"}],attrs:{\"type\":\"text\",\"id\":\"eraserWidth\"},domProps:{\"value\":(_vm.eraserWidth)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.eraserWidth=$event.target.value}}}),_c('label',{attrs:{\"for\":\"eraser\"}},[_vm._v(\"橡皮擦类型\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.eraserType),expression:\"eraserType\"}],attrs:{\"id\":\"eraser\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.eraserType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"circle\"}},[_vm._v(\"circle\")]),_c('option',{attrs:{\"value\":\"square\"}},[_vm._v(\"square\")])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function copyObj({ obj, exclusiveKey }) {\n    obj = Object.assign( Object.create( Object.getPrototypeOf(obj)), obj);\n    Object.keys(obj).forEach(key => {\n        if (!exclusiveKey.includes(key) && typeof obj[key] === 'object') {\n            obj[key] = JSON.parse(JSON.stringify(obj[key]));\n        }\n    });\n    return obj;\n}\nexport function drawPoint({ x, y, radius = 5, ctx, color = 'red' }) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.restore();\n}\nexport function drawBatchPoint({ points, ctx }) {\n    points.forEach((x, index) => {\n        if ((index < points.length - 1) && (index + 1) % 2 !== 0) {\n            let y = points[index + 1];\n            drawPoint({ x, y, ctx });\n        }\n    });\n}\nexport function restoreDrawingSurface({ ctx, imgData }) {\n    ctx.putImageData(imgData, 0, 0);\n}\n\nexport function saveDrawingSurface({ ctx, canvas }) {\n    return ctx.getImageData(0, 0,\n        canvas.width,\n        canvas.height);\n}\n\nexport function windowToCanvas({x, y, canvas}) {\n    var bbox = canvas.getBoundingClientRect();\n    return { x: x - bbox.left * (canvas.width / bbox.width),\n        y: y - bbox.top * (canvas.height / bbox.height) };\n}\n\nfunction drawHorizontalLine ({ y, ctx }) {\n    ctx.beginPath();\n    ctx.moveTo(0,y+0.5);\n    ctx.lineTo(ctx.canvas.width, y+0.5);\n    ctx.stroke();\n}\nfunction drawVerticalLine ({ x, ctx }) {\n    ctx.beginPath();\n    ctx.moveTo(x+0.5,0);\n    ctx.lineTo(x+0.5, ctx.canvas.height);\n    ctx.stroke();\n}\nexport function drawGuidewires({ x, y, ctx }) {\n    ctx.save();\n    ctx.strokeStyle = 'rgba(0,0,230,0.4)';\n    ctx.lineWidth = 0.5;\n    drawVerticalLine({ x, ctx });\n    drawHorizontalLine({ y, ctx });\n    ctx.restore();\n}\nexport function drawGrid({ ctx, color, stepx, stepy }) {\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 0.5;\n    for (let i = stepx + 0.5; i < ctx.canvas.width; i += stepx) {\n        ctx.beginPath();\n        ctx.moveTo(i, 0);\n        ctx.lineTo(i, ctx.canvas.height);\n        ctx.stroke();\n    }\n    for (let i = stepy + 0.5; i < ctx.canvas.height; i += stepy) {\n        ctx.beginPath();\n        ctx.moveTo(0, i);\n        ctx.lineTo(ctx.canvas.width, i);\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n\nexport function drawAxes({ctx, canvas}) {\n    var AXIS_MARGIN = 40,\n        AXIS_ORIGIN = { x: AXIS_MARGIN, y: canvas.height-AXIS_MARGIN },\n        AXIS_TOP = AXIS_MARGIN,\n        AXIS_RIGHT = canvas.width-AXIS_MARGIN,\n        HORIZONTAL_TICK_SPACING = 10,\n        VERTICAL_TICK_SPACING = 10,\n        AXIS_WIDTH = AXIS_RIGHT - AXIS_ORIGIN.x,\n        AXIS_HEIGHT = AXIS_ORIGIN.y - AXIS_TOP,\n        NUM_VERTICAL_TICKS = AXIS_HEIGHT / VERTICAL_TICK_SPACING,\n        NUM_HORIZONTAL_TICKS = AXIS_WIDTH / HORIZONTAL_TICK_SPACING,\n        TICK_WIDTH = 10,\n        TICKS_LINEWIDTH = 0.5,\n        TICKS_COLOR = 'navy',\n        AXIS_LINEWIDTH = 1.0,\n        AXIS_COLOR = 'blue';\n\n    function drawHorizontalAxis() {\n        ctx.beginPath();\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\n        ctx.lineTo(AXIS_RIGHT, AXIS_ORIGIN.y);\n        ctx.stroke();\n    }\n    function drawVerticalAxis() {\n        ctx.beginPath();\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\n        ctx.lineTo(AXIS_ORIGIN.x, AXIS_TOP);\n        ctx.stroke();\n    }\n    function drawVerticalAxisTicks() {\n        var deltaX;\n        for (var i=1; i < NUM_VERTICAL_TICKS; ++i) {\n            ctx.beginPath();\n            if (i % 5 === 0) deltaX = TICK_WIDTH;\n            else deltaX = TICK_WIDTH/2;\n            ctx.moveTo(AXIS_ORIGIN.x - deltaX,\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\n            ctx.lineTo(AXIS_ORIGIN.x + deltaX,\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\n            ctx.stroke();\n        }\n    }\n    function drawHorizontalAxisTicks() {\n        var deltaY;\n        for (var i=1; i < NUM_HORIZONTAL_TICKS; ++i) {\n            ctx.beginPath();\n            if (i % 5 === 0) deltaY = TICK_WIDTH;\n            else deltaY = TICK_WIDTH/2;\n            ctx.moveTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\n                AXIS_ORIGIN.y - deltaY);\n            ctx.lineTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\n                AXIS_ORIGIN.y + deltaY);\n            ctx.stroke();\n        }\n    }\n    ctx.save();\n    ctx.strokeStyle = AXIS_COLOR;\n    ctx.lineWidth = AXIS_LINEWIDTH;\n    drawHorizontalAxis();\n    drawVerticalAxis();\n    ctx.lineWidth = 0.5;\n    ctx.lineWidth = TICKS_LINEWIDTH;\n    ctx.strokeStyle = TICKS_COLOR;\n    drawVerticalAxisTicks();\n    drawHorizontalAxisTicks();\n    ctx.restore();\n}\n","import { drawPoint } from \"./appFunc\";\n\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nclass Shape {\n    constructor({ ctx, strokeStyle, fillStyle, filled, startRadians }) {\n        this.ctx = ctx;\n        this.strokeStyle = strokeStyle;\n        this.fillStyle = fillStyle;\n        this.filled = filled;\n        this.type = new.target.name;\n        this.offsets = null;\n        this.startRadians = startRadians || 0;\n    }\n    savePointOffset(loc) {\n        let { x, y } = this;\n        this.offsets = [];\n        let offsetX = loc.x -x;\n        let offsetY = loc.y - y;\n        this.offsets.push({ offsetX, offsetY });\n    }\n    updatePointsOnMoving(loc) {\n        this.offsets.forEach(offset => {\n            this.x = loc.x - offset.offsetX;\n            this.y = loc.y - offset.offsetY;\n        })\n    }\n    createPath() {}\n    createEditPath() {\n        this.createPath();\n    }\n    draw() {\n        let { ctx, filled, _debugger, drawDebuggerPoint } = this;\n        ctx.save();\n        this.createPath(ctx);\n        ctx.strokeStyle = this.strokeStyle;\n        ctx.stroke();\n        if (filled) {\n            ctx.fillStyle = this.fillStyle;\n            ctx.fill();\n        }\n        ctx.restore();\n        if (drawDebuggerPoint && _debugger) {\n            this.drawDebuggerPoint();\n        }\n    }\n    setShapeTransform({ radians, tx, ty }) {\n        let { ctx } = this;\n        /*        ctx.translate(tx, ty);\n                ctx.rotate(radians);*/\n        let sin = Math.sin(radians),\n            cos = Math.cos(radians);\n        let currentTransform = {\n            a: cos,  c: -sin, e: tx,\n            b: sin, d: cos, f: ty\n        };\n        let { a, b, c, d, e, f } = currentTransform;\n        ctx.transform(a,b,c,d,e,f);\n        ctx.currentTransform = currentTransform;\n    }\n    rotate(radians = 0) {\n        let { ctx, x, y } = this;\n\n        ctx.save();\n        this.startRadians = radians;\n        this.setShapeTransform({ radians, tx: x, ty: y });\n        this.x = 0;\n        this.y = 0;\n\n        this.draw();\n        ctx.restore();\n\n        this.x = x;\n        this.y = y;\n    }\n    getTransformPointToScreenPoint({ x, y, tx, ty }) {\n        let { ctx } = this;\n        let { currentTransform: { a, b, c, d, e, f } } = ctx;\n        if (tx !== undefined) e = tx;\n        if (ty !== undefined) f = ty;\n        return {\n            x: x * a + y * c + e,\n            y: x * b + y * d + f\n        };\n    }\n    updatePointAfterRotated() {}\n}\nexport class BezierCurve extends Shape {\n    constructor({ ctx, pointRadius = 5, startRadians, fillStyle, strokeStyle, endPoints, controlPoints }) {\n        super({ ctx, strokeStyle, fillStyle, startRadians, filled: false });\n        this.endPoints = endPoints;\n        this.controlPoints = controlPoints;\n        this.draggingPoint = null;\n        this.pointRadius = pointRadius;\n        this.isEditing = false;\n        this.setCenter();\n    }\n    setCenter() {\n        let { width, height, x: minX, y: minY } = this.getRectInfo();\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.x = width / 2 + minX;\n        this.y = height / 2 + minY;\n    }\n    rotate(radians = 0) {\n        let { ctx, x, y, endPoints, controlPoints } = this;\n        let tEndPonts = JSON.parse(JSON.stringify(endPoints));\n        let tControlPoints = JSON.parse(JSON.stringify(controlPoints));\n        ctx.save();\n        this.startRadians = radians;\n        this.setShapeTransform({ radians, tx: x, ty: y });\n        this.x = 0;\n        this.y = 0;\n        endPoints.concat(controlPoints).forEach(point => {\n           point.x -= x;\n           point.y -= y;\n        });\n        this.draw();\n        ctx.restore();\n\n        this.x = x;\n        this.y = y;\n        this.endPoints = tEndPonts;\n        this.controlPoints = tControlPoints;\n    }\n    updatePointAfterRotated() {\n        let { endPoints, controlPoints, x: centerX, y: centerY } = this;\n        endPoints.concat(controlPoints).forEach(point => {\n            let { x, y } = point;\n            x -= centerX;\n            y -= centerY;\n            let tPoint = this.getTransformPointToScreenPoint({ x, y });\n            point.x = tPoint.x;\n            point.y = tPoint.y;\n        });\n    }\n    stroke({ filled = false } = {}) {\n        let { ctx, strokeStyle, fillStyle } = this;\n        ctx.save();\n        ctx.strokeStyle = strokeStyle;\n        ctx.stroke();\n        if (filled) {\n            ctx.fillStyle = fillStyle;\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n    createPointPath({ isDraw = false } = {}) {\n        let { endPoints, controlPoints, ctx, pointRadius } = this;\n        !isDraw && ctx.beginPath();\n        endPoints.concat(controlPoints)\n            .forEach(point => {\n                let { x, y } = point;\n                if (isDraw) {\n                    ctx.beginPath();\n                    ctx.arc(x, y, pointRadius, 0, 2 * Math.PI, false);\n                    ctx.closePath();\n                    this.stroke({ filled: true });\n                } else {\n                    ctx.arc(x, y, pointRadius, 0, 2 * Math.PI, false);\n                }\n            });\n        !isDraw && ctx.closePath();\n    }\n    drawCurve() {\n        let { endPoints, controlPoints, ctx } = this;\n        ctx.beginPath();\n        ctx.moveTo(endPoints[0].x, endPoints[0].y);\n        ctx.bezierCurveTo(controlPoints[0].x, controlPoints[0].y,\n            controlPoints[1].x, controlPoints[1].y,\n            endPoints[1].x, endPoints[1].y);\n        this.stroke();\n        ctx.closePath();\n    }\n    savePointOffset(loc) {\n        let { endPoints, controlPoints } = this;\n        this.offsets = [];\n        endPoints.concat(controlPoints).forEach(point => {\n            let offsetX = loc.x -point.x;\n            let offsetY = loc.y - point.y;\n            this.offsets.push({ offsetX, offsetY });\n        });\n    }\n    updatePointsOnMoving(loc) {\n        let { endPoints, controlPoints, offsets } = this;\n        endPoints.concat(controlPoints).forEach((point, index) => {\n            point.x = loc.x - offsets[index].offsetX;\n            point.y = loc.y - offsets[index].offsetY;\n        });\n    }\n    createRectPath() {\n        let { x, y, width, height } = this.getRectInfo();\n        let { ctx } = this;\n        ctx.beginPath();\n        ctx.rect(x, y, width, height);\n        ctx.closePath();\n    }\n    getRectInfo() {\n        let minX, minY, maxX, maxY;\n        let { endPoints, controlPoints } = this;\n        minX = minY = 100000;\n        maxX = maxY = 0;\n        endPoints.concat(controlPoints).forEach( point => {\n            let { x, y } = point;\n            minX = Math.min(minX, x);\n            minY = Math.min(minY, y);\n            maxX = Math.max(maxX, x);\n            maxY = Math.max(maxY, y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        }\n    }\n    createEditPath() {\n        this.createPointPath();\n    }\n    createPath() {\n        this.createRectPath();\n    }\n    draw() {\n        this.isEditing && this.createPointPath({ isDraw: true });\n        this.drawCurve();\n    }\n    getDraggingPoint(loc) {\n        let { endPoints, controlPoints, ctx } = this;\n        let radius = 5;\n        let points = controlPoints.concat(endPoints);\n        for (let point of points) {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y,\n                radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            if (ctx.isPointInPath(loc.x, loc.y)) {\n                this.draggingPoint = point;\n                break;\n            }\n        }\n    }\n    updatePointOnEditing(loc) {\n        let { draggingPoint } = this;\n        draggingPoint.x = loc.x;\n        draggingPoint.y = loc.y;\n    }\n}\nexport class Line extends Shape {\n    constructor({ ctx, filled, strokeStyle, beginX, beginY, endX, endY, startRadians }) {\n        super({ ctx, strokeStyle, filled, startRadians });\n        this.x = beginX;\n        this.y = beginY;\n        this.endX = endX;\n        this.endY = endY;\n        this.radius = Math.sqrt(Math.pow(Math.abs(beginX - endX), 2) + Math.pow(Math.abs(beginY-endY), 2));\n    }\n    updatePointAfterRotated() {\n        let { endX, endY, x, y } = this;\n        endX -= x;\n        endY -= y;\n        let point = this.getTransformPointToScreenPoint({ x: endX, y: endY });\n        this.endX = point.x;\n        this.endY = point.y;\n    }\n    rotate(radians = 0) {\n        let { ctx, endX, endY, x, y } = this;\n        ctx.save();\n\n        this.setShapeTransform({ radians, tx: x, ty: y });\n\n        this.x = 0;\n        this.y = 0;\n        this.endX -= x;\n        this.endY -= y;\n\n        this.draw();\n        ctx.restore();\n\n        this.x = x;\n        this.y = y;\n        this.endX = endX;\n        this.endY = endY;\n    }\n    createPath() {\n        let { x, y, endX, endY, ctx } = this;\n        ctx.beginPath();\n        ctx.rect(Math.min(x, endX), Math.min(y, endY), Math.abs(x - endX), Math.abs(y - endY));\n        ctx.closePath();\n    }\n    savePointOffset(loc) {\n        let { x, y, endX, endY } = this;\n        this.offsets = [];\n        this.offsets.push({ offsetX: loc.x - x, offsetY: loc.y - y });\n        this.offsets.push({ offsetX: loc.x - endX, offsetY: loc.y - endY });\n    }\n    updatePointsOnMoving(loc) {\n        let { offsets } = this;\n        this.x = loc.x - offsets[0].offsetX;\n        this.y = loc.y - offsets[0].offsetY;\n        this.endX = loc.x - offsets[1].offsetX;\n        this.endY = loc.y - offsets[1].offsetY;\n    }\n    draw() {\n        let { x, y, endX, endY, ctx, strokeStyle } = this;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(endX, endY);\n        ctx.closePath();\n        ctx.strokeStyle = strokeStyle;\n        ctx.stroke();\n        ctx.restore();\n\n    }\n}\nexport class Circle extends Shape{\n    constructor({ centerX, centerY, radius, ctx, filled, strokeStyle, fillStyle }) {\n        super({ ctx, strokeStyle, fillStyle, filled });\n        this.x = centerX;\n        this.y = centerY;\n        this.radius = radius;\n    }\n    createPath() {\n        let { ctx, x, y, radius } = this;\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, Math.PI*2, false);\n        ctx.closePath();\n    }\n}\nexport class RoundRect extends Shape {\n    constructor({ ctx, width, height, startRadians, cornerRadius = 10, cornerX, cornerY, fillStyle, strokeStyle, filled }) {\n        super({ fillStyle, filled, strokeStyle, startRadians, ctx });\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\n        this.y = height / 2 + cornerY;  // rotate center y\n        this.cornerX = cornerX;\n        this.cornerY = cornerY;\n        this.cornerRadius = cornerRadius;\n        this.width = width;\n        this.height = height;\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.isRotated = false;\n        this._debugger = false;\n        this.setControlPoint();\n    }\n    setControlPoint() {\n        let { cornerX, cornerY, cornerRadius, width, height } = this;\n        let basePointX = cornerX + cornerRadius;\n        let controlPointX = cornerX + width;\n        let controlPointY = cornerY + height;\n        this.controlPoint = [\n            {\n                x: basePointX,\n                y: cornerY\n            },\n            {\n                cx1: controlPointX,\n                cy1: cornerY,\n                cx2: controlPointX,\n                cy2: controlPointY,\n                radius: cornerRadius\n            },\n            {\n                cx1: controlPointX,\n                cy1: controlPointY,\n                cx2: cornerX,\n                cy2: controlPointY,\n                radius: cornerRadius\n            },\n            {\n                cx1: cornerX,\n                cy1: controlPointY,\n                cx2: cornerX,\n                cy2: cornerY,\n                radius: cornerRadius\n            },\n            {\n                cx1: cornerX,\n                cy1: cornerY,\n                cx2: basePointX,\n                cy2: cornerY,\n                radius: cornerRadius\n            },\n        ];\n    }\n    rotate(radians = 0) {\n        let { ctx, width, height, cornerX, cornerY, x, y } = this;\n        let tCornerX = -width / 2,\n            tCornerY = -height / 2;\n        this.isRotated = true;\n        this.startRadians = radians;\n        ctx.save();\n\n        this.setShapeTransform({ radians, tx: x, ty: y });\n\n        this.x = 0;\n        this.y = 0;\n        this.cornerX = tCornerX;\n        this.cornerY = tCornerY;\n        this.setControlPoint();\n\n        this.draw();\n        ctx.restore();\n\n        this.x = x;\n        this.y = y;\n        this.cornerX = cornerX;\n        this.cornerY = cornerY;\n    }\n    updatePointAfterRotated({ tx, ty } = {}) {\n        let { cornerRadius, width, height, controlPoint } = this;\n        let tCornerX = -width / 2,\n            tCornerY = -height / 2;\n        let tBasePointX = tCornerX + cornerRadius;\n        let tControlPointX = tCornerX + width;\n        let tControlPointY = tCornerY + height;\n        let tPoints = [];\n        controlPoint.forEach((entry, index) => {\n            let basePoint, controlPoint1, controlPoint2;\n            switch (index) {\n                case 0:\n                    basePoint = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\n                    break;\n                case 1:\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tCornerY, tx, ty });\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\n                    break;\n                case 2:\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\n                    break;\n                case 3:\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\n                    break;\n                case 4:\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\n                    break;\n            }\n            if (index === 0) {\n                tPoints.push({ x: basePoint.x, y: basePoint.y });\n            } else {\n                tPoints.push({\n                    cx1: controlPoint1.x,\n                    cy1: controlPoint1.y,\n                    cx2: controlPoint2.x,\n                    cy2: controlPoint2.y,\n                    radius: cornerRadius\n                });\n            }\n            this.controlPoint = tPoints;\n        });\n    }\n    savePointOffset(loc) {\n        let { cornerX, cornerY } = this;\n        let offsetX = loc.x -cornerX;\n        let offsetY = loc.y - cornerY;\n        this.offsets = [{ offsetX, offsetY }];\n    }\n    updatePointsOnMoving(loc) {\n        this.offsets.forEach(offset => {\n            this.cornerX = loc.x - offset.offsetX;\n            this.cornerY = loc.y - offset.offsetY;\n        });\n        let { width, height, cornerX, cornerY, isRotated } = this;\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\n        this.y = height / 2 + cornerY;  // rotate center y\n        if (isRotated) {\n            this.updatePointAfterRotated({ tx: this.x, ty: this.y });\n        } else {\n            this.setControlPoint({ cornerX, cornerY });\n        }\n    }\n    createPath() {\n        let { ctx, controlPoint } = this;\n        let [ basePoint, ...cPoint ] = controlPoint;\n        ctx.beginPath();\n        ctx.moveTo(basePoint.x, basePoint.y);\n        cPoint.forEach(point => {\n            let { cx1, cy1, cx2, cy2, radius } = point;\n            ctx.arcTo(cx1, cy1, cx2, cy2, radius);\n        });\n        ctx.closePath();\n    }\n    drawDebuggerPoint() {\n        let { ctx, controlPoint } = this;\n        let [ basePoint, ...cPoint ] = controlPoint;\n        let radius = 4;\n        drawPoint({ x: basePoint.x, y: basePoint.y, ctx, radius });\n        cPoint.forEach(point => {\n            let { cx1, cy1, cx2, cy2 } = point;\n            drawPoint({ x: cx1, y: cy1, ctx, color: 'green', radius });\n            drawPoint({ x: cx2, y: cy2, ctx, color: 'yellow', radius });\n        });\n    }\n\n}\nexport class Polygon extends Shape {\n    constructor({ centerX, centerY, radius,\n                    sides, startRadians, strokeStyle, fillStyle, filled, ctx }) {\n        super({ ctx, filled, fillStyle, strokeStyle, startRadians });\n        this.x = centerX;\n        this.y = centerY;\n        this.radius = radius;\n        this.sides = sides;\n    }\n    getPoints() {\n        let points = [],\n            radians = this.startRadians || 0;\n        for (let i=0; i < this.sides; ++i) {\n            points.push(new Point(this.x + this.radius * Math.sin(radians),\n                this.y - this.radius * Math.cos(radians)));\n            radians += 2*Math.PI/this.sides;\n        }\n        return points;\n    }\n    createPath() {\n        let points = this.getPoints();\n        let { ctx } = this;\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        for (let i=1; i < this.sides; ++i) {\n            ctx.lineTo(points[i].x, points[i].y);\n        }\n        ctx.closePath();\n    }\n}\n","export class Protractor {\n    constructor({ ctx, shape, loc, rotatingLockRadians }) {\n        this.ctx = ctx;\n        this.shape = shape;\n        this.loc = loc;\n        this.rotatingLockRadians = rotatingLockRadians;\n\n        this.RADIUS = 10;\n        this.STROKE_STYLE = 'rgba(0, 0, 0, 0.8)';\n        this.FILL_STYLE ='rgba(255, 255, 255, 0.2)';\n        this.SHADOW_COLOR = 'rgba(255, 255, 255, 0.4)';\n\n        this.DEGREE_RING_MARGIN = 35;\n        this.TRACKING_RING_MARGIN = 55;\n        this.DEGREE_ANNOTATIONS_FILL_STYLE = 'rgba(0, 0, 230, 0.8)';\n        this.DEGREE_ANNOTATIONS_TEXT_SIZE = 11;\n        this.DEGREE_OUTER_RING_MARGIN = this.DEGREE_RING_MARGIN;\n        this.TICK_WIDTH = 10;\n        this.TICK_LONG_STROKE_STYLE = 'rgba(100, 140, 230, 0.9)';\n        this.TICK_SHORT_STROKE_STYLE = 'rgba(100, 140, 230, 0.7)';\n\n        this.TRACKING_RING_STROKING_STYLE = 'rgba(100, 140, 230, 0.3)';\n    }\n    drawCentroid() {  // 量角器圆心\n        let { ctx, shape: { x, y }, STROKE_STYLE, FILL_STYLE, SHADOW_COLOR, RADIUS } = this;\n        ctx.beginPath();\n        ctx.save();\n        ctx.strokeStyle = STROKE_STYLE;\n        ctx.fillStyle = FILL_STYLE;\n        ctx.shadowColor = SHADOW_COLOR;\n        ctx.arc(x, y, RADIUS, 0, Math.PI*2, false);\n        ctx.stroke();\n        ctx.fill();\n        ctx.restore();\n    }\n    drawCentroidGuidewire() {  //  导线\n        let { loc, shape, ctx, FILL_STYLE, TRACKING_RING_MARGIN, rotatingLockRadians } = this;\n        let radians = Math.atan( (loc.y - shape.y) / (loc.x - shape.x) ),\n            radius, endpt;\n\n        radius = shape.radius + TRACKING_RING_MARGIN;\n        radians = radians - rotatingLockRadians;\n\n        if (loc.x >= shape.x) {\n            endpt = {\n                x: shape.x + radius * Math.cos(radians),\n                y: shape.y + radius * Math.sin(radians)\n            };\n        }\n        else {\n            endpt = {\n                x: shape.x - radius * Math.cos(radians),\n                y: shape.y - radius * Math.sin(radians)\n            };\n        }\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(endpt.x, endpt.y);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.arc(endpt.x, endpt.y, 5, 0, Math.PI*2, false);\n        ctx.stroke();\n        ctx.fillStyle = FILL_STYLE;\n        ctx.fill();\n\n        ctx.restore();\n    }\n    drawDegreeOuterDial() { // 刻度盘外层圆环\n        let { ctx, shape, DEGREE_OUTER_RING_MARGIN } = this;\n        ctx.save();\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n        // ctx.beginPath();\n        ctx.arc(shape.x, shape.y,\n            shape.radius + DEGREE_OUTER_RING_MARGIN,\n            0, Math.PI*2, true);\n        ctx.stroke();\n        ctx.restore();\n    }\n    drawDegreeAnnotations() {   // 度数数字\n        let { shape, TICK_WIDTH, DEGREE_RING_MARGIN, ctx, DEGREE_ANNOTATIONS_FILL_STYLE, DEGREE_ANNOTATIONS_TEXT_SIZE } = this;\n        let radius = shape.radius + DEGREE_RING_MARGIN;\n        ctx.save();\n        ctx.fillStyle = DEGREE_ANNOTATIONS_FILL_STYLE;\n        ctx.font = DEGREE_ANNOTATIONS_TEXT_SIZE + 'px Helvetica';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        for (let radians=0; radians < 2*Math.PI; radians += Math.PI/8) {\n            ctx.beginPath();\n            ctx.fillText((radians * 180 / Math.PI).toFixed(0),\n                shape.x + Math.cos(radians) * (radius - TICK_WIDTH*2),\n                shape.y + Math.sin(radians) * (radius - TICK_WIDTH*2));\n\n        }\n        ctx.restore();\n    }\n    drawDegreeDialTicks() { // 刻度线\n        let { shape, DEGREE_RING_MARGIN, ctx, TICK_WIDTH, TICK_LONG_STROKE_STYLE, TICK_SHORT_STROKE_STYLE } = this;\n        let radius = shape.radius + DEGREE_RING_MARGIN,\n            ANGLE_MAX = 2*Math.PI,\n            ANGLE_DELTA = Math.PI/64;\n\n        ctx.save();\n\n        for (let radians = 0, cnt = 0; radians < ANGLE_MAX; radians += ANGLE_DELTA, ++cnt) {\n            ctx.beginPath();\n\n            if (cnt % 4 === 0) {\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH),\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH));\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\n                    shape.y + Math.sin(radians) * (radius));\n                ctx.strokeStyle = TICK_LONG_STROKE_STYLE;\n                ctx.stroke();\n            }\n            else {\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH/2),\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH/2));\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\n                    shape.y + Math.sin(radians) * (radius));\n                ctx.strokeStyle = TICK_SHORT_STROKE_STYLE;\n                ctx.stroke();\n            }\n\n            ctx.restore();\n        }\n    }\n    drawDegreeInnerDial() { //  刻度盘内层圆环\n        let { shape, ctx, DEGREE_RING_MARGIN, TICK_WIDTH } = this;\n        ctx.save();\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n        ctx.beginPath();\n        ctx.arc(shape.x, shape.y, shape.radius + DEGREE_RING_MARGIN - TICK_WIDTH, 0, Math.PI*2, false);\n        ctx.stroke();\n        ctx.restore();\n    }\n    drawOutMostDial() {    //  最外层圆环\n        let { shape, ctx, TRACKING_RING_STROKING_STYLE, TRACKING_RING_MARGIN } = this;\n        ctx.save();\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\n        ctx.shadowOffsetX = 3,\n            ctx.shadowOffsetY = 3,\n            ctx.shadowBlur = 6,\n            ctx.strokeStyle = TRACKING_RING_STROKING_STYLE;\n        // ctx.beginPath();\n        ctx.arc(shape.x, shape.y, shape.radius +\n            TRACKING_RING_MARGIN, 0, Math.PI*2, false);\n        ctx.stroke();\n        ctx.restore();\n    }\n    draw() {\n        let { ctx } = this;\n        this.drawCentroid();\n        this.drawCentroidGuidewire();\n        ctx.beginPath();\n        this.drawOutMostDial();\n        this.drawDegreeOuterDial();\n        ctx.fillStyle = 'rgba(100, 140, 230, 0.1)';\n        ctx.fill();\n\n        ctx.beginPath();\n        this.drawDegreeOuterDial();\n        ctx.stroke();\n\n        this.drawDegreeDialTicks();\n        this.drawDegreeInnerDial();\n        this.drawDegreeAnnotations();\n    }\n}","import { drawGrid } from './appFunc'\nexport class Eraser {\n    constructor({ type, width, ctx }) {\n        this.ctx = ctx;\n        this.type = type;\n        this.width = width;\n        this.ERASER_LINE_WIDTH = 1;\n\n        this.ERASER_SHADOW_COLOR = 'rgb(0,0,0)';\n        this.ERASER_SHADOW_STYLE = 'blue';\n        this.ERASER_STROKE_STYLE = 'rgb(0,0,255)';\n        this.ERASER_SHADOW_OFFSET = -5;\n        this.ERASER_SHADOW_BLUR = 20;\n    }\n    setDrawPath(loc) {\n        let { width, ctx, type } = this;\n        let eraserWidth = parseFloat(width);\n\n        ctx.beginPath();\n\n        if (type === 'circle') {\n            ctx.arc(loc.x, loc.y, eraserWidth/2, 0, Math.PI*2, false);\n        }\n        else {\n            ctx.rect(loc.x - eraserWidth/2,\n                loc.y - eraserWidth/2,\n                eraserWidth, eraserWidth);\n        }\n        ctx.clip();\n    }\n    setErasePath(loc) {\n        let { width, ctx, type, ERASER_LINE_WIDTH } = this;\n\n        ctx.beginPath();\n        if (type === 'circle') {\n            ctx.arc(loc.x, loc.y, width/2 + ERASER_LINE_WIDTH, 0, Math.PI*2, false);\n        }\n        else {\n            ctx.rect(loc.x - width/2 - ERASER_LINE_WIDTH,\n                loc.y - width/2 - ERASER_LINE_WIDTH,\n                width + ERASER_LINE_WIDTH*2,\n                width + ERASER_LINE_WIDTH*2);\n        }\n        ctx.clip();\n    }\n    setEraserAttributes() {\n        let { ctx, ERASER_LINE_WIDTH, ERASER_SHADOW_BLUR, ERASER_SHADOW_OFFSET, ERASER_SHADOW_STYLE, ERASER_STROKE_STYLE } = this;\n        ctx.lineWidth     = ERASER_LINE_WIDTH;\n        ctx.shadowColor   = ERASER_SHADOW_STYLE;\n        ctx.shadowOffsetX = ERASER_SHADOW_OFFSET;\n        ctx.shadowOffsetY = ERASER_SHADOW_OFFSET;\n        ctx.shadowBlur    = ERASER_SHADOW_BLUR;\n        ctx.strokeStyle   = ERASER_STROKE_STYLE;\n    }\n    eraseLast(loc) {\n        let { ctx } = this;\n        let GRID_HORIZONTAL_SPACING = 10,\n            GRID_VERTICAL_SPACING = 10,\n            GRID_LINE_COLOR = 'lightblue';\n        ctx.save();\n\n        this.setErasePath(loc);\n        ctx.fillStyle = 'white';\n        ctx.fill();\n        drawGrid({ctx, color: GRID_LINE_COLOR, stepx: GRID_HORIZONTAL_SPACING, stepy: GRID_VERTICAL_SPACING});\n\n        ctx.restore();\n    }\n    drawEraser(loc) {\n        let { ctx } = this;\n        ctx.save();\n\n        this.setEraserAttributes();\n        this.setDrawPath(loc);\n        ctx.stroke();\n\n        ctx.restore();\n    }\n}","<template>\n    <div>\n        <canvas\n                @mousedown=\"onMouseDown\"\n                @mousemove=\"onMouseMove\"\n                @mouseup=\"onMouseUp\"\n                id=\"canvas\" width='600' height='600'>Canvas not supported</canvas>\n        <ul id='controls'>\n            <li>\n                <label for=\"color\">颜色</label>\n                <select id=\"color\" v-model=\"color\">\n                    <option value='red'>red</option>\n                    <option value='green'>green</option>\n                    <option value='blue'>blue</option>\n                    <option value='orange'>orange</option>\n                    <option value='cornflowerblue' selected>cornflowerblue</option>\n                    <option value='goldenrod'>goldenrod</option>\n                    <option value='navy'>navy</option>\n                    <option value='purple'>purple</option>\n                </select>\n            </li>\n            <li>\n                <label for=\"shape\">形状</label>\n                <select id=\"shape\" v-model=\"shape\" @change=\"mode='normal'\">\n                    <option value='Circle'>circle</option>\n                    <option value='Line'>line</option>\n                    <option value='RoundedRect'>RoundedRect</option>\n                    <option value='Polygon'>Polygon</option>\n                    <option value='BezierCurve'>BezierCurve</option>\n                </select>\n            </li>\n            <li v-show=\"shape === 'Polygon'\">\n                <label for=\"sides\">边数</label>\n                <input type=\"text\" id=\"sides\" v-model=\"sides\">\n                <label for=\"startRadians\">开始角度</label>\n                <input type=\"text\" id=\"startRadians\" v-model=\"startRadians\">\n            </li>\n            <li>\n                <label for=\"normal-radio\">画图</label>\n                <input type=\"radio\" id=\"normal-radio\" v-model=\"mode\" value=\"normal\">\n                <label for=\"drag-radio\">拖拽</label>\n                <input type=\"radio\" id=\"drag-radio\" v-model=\"mode\" value=\"drag\">\n                <template v-if=\"shape === 'BezierCurve'\">\n                    <label for=\"edit-radio\">编辑</label>\n                    <input type=\"radio\" id=\"edit-radio\" v-model=\"mode\" value=\"edit\">\n                </template>\n                <label for=\"rotate-radio\">旋转</label>\n                <input type=\"radio\" id=\"rotate-radio\" v-model=\"mode\" value=\"rotate\">\n                <label for=\"eraser-radio\">橡皮擦</label>\n                <input type=\"radio\" id=\"eraser-radio\" v-model=\"mode\" value=\"erase\">\n                <label for=\"guidewireCheckbox\">导线</label>\n                <input id='guidewireCheckbox' v-model=\"guidewires\" type='checkbox' checked/>\n                <label for=\"checkbox\">填充:</label>\n                <input type=\"checkbox\" id=\"checkbox\" v-model=\"isFillColor\">\n                <input @click=\"erase\" id='eraseAllButton' type='button' value='擦除所有'/>\n\n            </li>\n            <li>\n                <label for=\"eraserWidth\">橡皮擦宽度</label>\n                <input type=\"text\" id=\"eraserWidth\" v-model=\"eraserWidth\">\n                <label for=\"eraser\">橡皮擦类型</label>\n                <select id='eraser' v-model=\"eraserType\">\n                    <option value='circle'>circle</option>\n                    <option value='square'>square</option>\n                </select>\n            </li>\n        </ul>\n    </div>\n</template>\n\n<style scoped lang=\"scss\">\n    body {\n        background: #eeeeee;\n    }\n    #controls {\n        position: absolute;\n        left: -25px;\n        top: 0;\n        display: flex;\n        flex-wrap: wrap;\n        list-style: none;\n        align-items: center;\n        li {\n            display: flex;\n            align-items: center;\n            margin-right: 10px;\n        }\n    }\n    #canvas {\n        background: #ffffff;\n        cursor: pointer;\n        margin-left: 10px;\n        margin-top: 10px;\n        -webkit-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\n        -moz-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\n    }\n</style>\n\n<script>\n    import { copyObj, drawGuidewires, drawGrid, windowToCanvas, saveDrawingSurface, restoreDrawingSurface } from \"../util/appFunc\";\n    import { Circle, RoundRect, Polygon, Line, BezierCurve } from \"../util/shape\";\n    import { Protractor } from '../util/Protractor'\n    import { Eraser } from '../util/Eraser'\n    import testImg from '../assets/img/test.jpg'\n\n    export default {\n        data() {\n            return {\n                eraserWidth: 25,\n                eraserType: 'circle',\n                shapes: [],\n                sides: 3,\n                startRadians: 0,\n                shape: 'Line',\n                isFillColor: false,\n                ctx: null,\n                canvas: null,\n                guidewires: true,\n                color: 'cornflowerblue',\n                rubberbandLine: {\n                    drawingSurfaceImageData: null,\n                    mousedown: {},  // x,y\n                    rubberbandRect: {}, // width, height, left, top\n                    dragging: false,\n                },\n                mode: 'normal',\n                selectedShape: null,\n                draggingPoint: false, // End- or control point user is dragging\n                rotatingLockEngaged: false,\n                rotatingLockRadians: 0,\n                rotatingShape: null,\n                protractor: null,\n                eraser: null\n            }\n        },\n        mounted() {\n            this.getContext();\n            this.setCanvasSize();\n            this.drawRubberbandLines();\n        },\n        watch: {\n            mode() {\n                let { canvas, mode } = this;\n                switch (mode) {\n                    case 'drag':\n                    case 'edit':\n                    case 'rotate':\n                    case 'erase':\n                        canvas.style.cursor = 'pointer';\n                        break;\n                    case 'normal':\n                        canvas.style.cursor = 'crosshair';\n                        break;\n                }\n                this.inactiveEditing();\n                this.redraw();\n            }\n        },\n        methods: {\n            test() {\n                let { ctx, canvas: { width, height } } = this;\n                let image = new Image();\n                image.src = testImg;\n                image.onload = () => {\n/*                    ctx.save();\n                    ctx.beginPath();\n                    ctx.arc(300, 100, 100, 0, Math.PI * 2, false);\n                    ctx.clip();\n                    ctx.drawImage(image, 0, 0, 100, 100);\n                    ctx.restore();*/\n                    // ctx.drawImage(image, 0, 0, 500, 400, 100, 100, 400, 300);\n                    ctx.drawImage(image, 0, 0, width, height);\n                };\n            },\n            setCanvasSize() {\n                let { canvas } = this;\n                canvas.width = window.innerWidth;\n                canvas.height = window.innerHeight;\n            },\n            stopRotatingShape(loc) {\n                let { selectedShape, rotatingLockRadians } = this;\n                let radians = Math.atan((loc.y - selectedShape.y) /\n                    (loc.x - selectedShape.x))\n                    - rotatingLockRadians;\n                selectedShape.startRadians += radians;\n                selectedShape.isRotated = true;\n                selectedShape.updatePointAfterRotated();\n                this.rotatingShape = undefined;\n                this.rotatingLockEngaged = false;\n                this.rotatingLockRadians = 0;\n                this.redraw();\n            },\n            saveCanvasInfo(loc) {\n                let { rubberbandLine: { mousedown }, rubberbandLine, ctx, canvas } = this;\n                rubberbandLine.drawingSurfaceImageData = saveDrawingSurface({ ctx, canvas });\n                mousedown.x = loc.x;\n                mousedown.y = loc.y;\n                rubberbandLine.dragging = true;\n            },\n            drawShapes() {\n                let { shapes } = this;\n                shapes.forEach( shape => {\n                    shape.draw();\n                });\n            },\n            drawBezierCurve() {\n                let { endPoints, controlPoints } = this.getEndAndControlPoints();\n                let { ctx, shapes, rubberbandLine: { dragging }, color } = this;\n                let curve = new BezierCurve({ ctx, strokeStyle: color, fillStyle: color, endPoints, controlPoints });\n                curve.draw();\n                if (!dragging) shapes.push(curve);\n            },\n            getEndAndControlPoints() {\n                let endPoints = [ {}, {} ], // Endpoint locations (x, y)\n                    controlPoints =  [ {}, {} ]; // Control point locations (x, y)\n                let { rubberbandLine: { rubberbandRect } } = this;\n                let { left, top, width, height } = rubberbandRect;\n                endPoints[0].x = left;\n                endPoints[0].y = top;\n                endPoints[1].x = left + width;\n                endPoints[1].y = top + height;\n                controlPoints[0].x = left;\n                controlPoints[0].y = top + height;\n                controlPoints[1].x = left + width;\n                controlPoints[1].y = top;\n                return {\n                    endPoints,\n                    controlPoints\n                }\n            },\n            drawPolygon() {\n                let {\n                    rubberbandLine: {\n                        dragging,\n                        rubberbandRect: {\n                            width\n                        },\n                        mousedown: {\n                            x,\n                            y\n                        }\n                    },\n                    ctx,\n                    sides,\n                    startRadians,\n                    isFillColor,\n                    color,\n                    shapes\n                } = this;\n                let polygon = new Polygon({\n                    centerX: x,\n                    centerY: y,\n                    radius: width,\n                    sides,\n                    startRadians,\n                    strokeStyle: color,\n                    fillStyle: color,\n                    filled: isFillColor,\n                    ctx\n                });\n                polygon.draw();\n                if (!dragging) shapes.push(polygon);\n            },\n            getContext() {\n                this.canvas = document.getElementById('canvas');\n                this.ctx = this.canvas.getContext('2d');\n            },\n            erase() {\n                let { ctx, canvas } = this;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\n                saveDrawingSurface({ ctx, canvas });\n            },\n            drawRubberbandLines() {\n                let { ctx, color } = this;\n                ctx.strokeStyle = color;\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\n            },\n            updateRubberbandRect({ loc }) {\n                let {\n                    rubberbandLine: {\n                        rubberbandRect,\n                        mousedown\n                    },\n                } = this;\n                rubberbandRect.width = Math.abs(loc.x - mousedown.x);\n                rubberbandRect.height = Math.abs(loc.y - mousedown.y);\n                if (loc.x > mousedown.x) rubberbandRect.left = mousedown.x;\n                else rubberbandRect.left = loc.x;\n                if (loc.y > mousedown.y) rubberbandRect.top = mousedown.y;\n                else rubberbandRect.top = loc.y;\n            },\n            drawRubberbandShape({ loc }) {\n                let { shape } = this;\n                this[`draw${ shape }`]({ loc });\n            },\n            drawRoundedRect({ cornerRadius = 10 } = {}) {\n                let {\n                    ctx,\n                    color,\n                    isFillColor,\n                    shapes,\n                    rubberbandLine: {\n                        dragging,\n                        rubberbandRect: { width, height },\n                        mousedown: { x: cornerX, y: cornerY }\n                    },\n                } = this;\n                let roundRect = new RoundRect({\n                    ctx,\n                    filled: isFillColor,\n                    strokeStyle: color,\n                    fillStyle: color,\n                    width,\n                    height,\n                    cornerX,\n                    cornerY,\n                    cornerRadius\n                });\n                roundRect.draw();\n                if (!dragging) shapes.push(roundRect);\n            },\n            drawCircle({ loc }) {\n                let {\n                    ctx,\n                    rubberbandLine: {\n                        dragging,\n                        rubberbandRect: { width, height },\n                        mousedown: {\n                            x,\n                            y\n                        }\n                    },\n                    color,\n                    isFillColor,\n                    shapes\n                } = this;\n                let radius;\n                if (y === loc.y) {\n                    radius = Math.abs(loc.x - x);\n                } else {\n                    radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n                }\n                let circle = new Circle({ centerX: x, centerY: y, radius, ctx, filled: isFillColor, strokeStyle: color, fillStyle: color });\n                circle.draw();\n                if (!dragging) shapes.push(circle);\n            },\n            drawLine({ loc }) {\n                let {\n                    ctx,\n                    rubberbandLine: {\n                        mousedown: {\n                            x: beginX,\n                            y: beginY\n                        },\n                        dragging\n                    },\n                    color,\n                    shapes\n                } = this;\n                let { x: endX, y: endY } = loc;\n                let line = new Line({ ctx, strokeStyle: color, beginX, beginY, endX, endY, filled: false });\n                line.draw();\n                if (!dragging) shapes.push(line);\n            },\n            updateRubberband({ loc }) {\n                this.updateRubberbandRect({ loc });\n                this.drawRubberbandShape({ loc });\n            },\n            inactiveEditing() {\n                let { shapes } = this;\n                shapes.forEach( shape => {\n                    shape.isEditing = false;\n                });\n            },\n            activeEditing({ shape }) {\n                shape.isEditing = true;\n                this.redraw();\n            },\n            getSelectedShape({ loc }) {\n                let { shapes, ctx, mode } = this;\n                for (let shape of shapes) {\n                    switch (mode) {\n                        case 'drag':\n                        case 'rotate':\n                            shape.createPath();\n                            break;\n                        case 'edit':\n                            shape.createEditPath();\n                    }\n                    if (ctx.isPointInPath(loc.x, loc.y)) {\n                        this.selectedShape = shape;\n                        switch (mode) {\n                            case 'edit':\n                                shape.getDraggingPoint(loc);\n                                shape.savePointOffset(loc);\n                                this.activeEditing({ shape });\n                                break;\n                            case 'drag':\n                                shape.savePointOffset(loc);\n                                break;\n                            case 'rotate':\n                                this.rotatingShape = copyObj({ obj: shape, exclusiveKey: ['ctx'] });\n                                break;\n                        }\n                        break;\n                    } else {\n                        this.selectedShape = null;\n                    }\n                }\n            },\n            initProtractor(loc) {\n                let { ctx, rotatingLockRadians, rotatingLockEngaged } = this;\n                let { rotatingShape } = this;\n                if (this.rotatingShape) {\n                    let protractor = new Protractor({ ctx, shape: rotatingShape, loc, rotatingLockRadians });\n                    protractor.draw();\n\n                    if (!rotatingLockEngaged) {\n                        this.rotatingLockEngaged = true;\n                        this.rotatingLockRadians = Math.atan((loc.y - rotatingShape.y) /\n                            (loc.x - rotatingShape.x));\n                    }\n                    this.protractor = protractor;\n                }\n            },\n            rotateShape(loc) {\n                let { rotatingLockEngaged, rotatingLockRadians, protractor } = this;\n                let {rotatingShape } = this;\n                if (rotatingLockEngaged) {\n                    let y = loc.y - rotatingShape.y;\n                    let x = loc.x - rotatingShape.x;\n                    let radians = Math.atan( y / x) - rotatingLockRadians;\n                    if (x < 0 && y > 0 || x < 0 && y <= 0) {\n                        radians = Math.PI + radians;\n                    }\n                    this.redraw();\n                    rotatingShape.rotate(radians);\n                    protractor.loc = loc;\n                    protractor.draw();\n\n                }\n            },\n            onMouseDown(e) {\n                let {\n                    canvas,\n                    mode,\n                    rotatingShape,\n                    ctx,\n                    eraser\n                } = this;\n                let { clientX: x, clientY: y } = e;\n                let loc = windowToCanvas({ x, y, canvas });\n                e.preventDefault(); // Prevent cursor change\n                this.saveCanvasInfo(loc);\n                switch (mode) {\n                    case 'drag':\n                        this.getSelectedShape({ loc });\n                        break;\n                    case 'edit':\n                        this.getSelectedShape({ loc });\n                        break;\n                    case 'rotate':\n                        if (rotatingShape) {\n                            this.stopRotatingShape(loc);\n                        } else {\n                            this.getSelectedShape({ loc });\n                            this.initProtractor(loc);\n                        }\n                        break;\n                    case 'erase':\n                        if (!eraser) {\n                            let { eraserType, eraserWidth } = this;\n                            this.eraser = new Eraser({ ctx, type: eraserType, width: eraserWidth });\n                        }\n                        break;\n                }\n                if (mode !== 'edit') {\n                    this.inactiveEditing();\n                }\n            },\n            onMouseMove(e) {\n                let {\n                    canvas,\n                    ctx,\n                    guidewires,\n                    shape,\n                    rubberbandLine: {\n                        mousedown,\n                        dragging,\n                        drawingSurfaceImageData\n                    },\n                    mode,\n                    selectedShape,\n                    rotatingShape,\n                    eraser\n                } = this;\n                let { clientX: x, clientY: y } = e;\n                e.preventDefault(); // Prevent selections\n                let loc = windowToCanvas({ x, y, canvas });\n                if (dragging) {\n                    switch (mode) {\n                        case 'drag':\n                            selectedShape && selectedShape.updatePointsOnMoving(loc);\n                            break;\n                        case 'edit':\n                            selectedShape && selectedShape.draggingPoint && selectedShape.updatePointOnEditing(loc);\n                            break;\n                        case 'erase':\n                            eraser.eraseLast({ x: mousedown.x, y: mousedown.y });\n                            eraser.drawEraser(loc);\n                            this.rubberbandLine.mousedown = loc;\n                            break;\n                        case 'normal':\n                            restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\n                            this.updateRubberband({ loc });\n                            if(guidewires) {\n                                let pos = shape === 'Line' ? loc : mousedown;\n                                drawGuidewires({ ctx, x: pos.x, y: pos.y });\n                            }\n                            break;\n                    }\n                    if (mode === 'drag' || mode === 'edit') {\n                        this.redraw();\n                    }\n                }\n                if (mode === 'rotate') {\n                    rotatingShape && this.rotateShape(loc);\n                }\n            },\n            onMouseUp(e) {\n                let {\n                    ctx,\n                    canvas,\n                    rubberbandLine,\n                    rubberbandLine: {\n                        drawingSurfaceImageData,\n                        mousedown\n                    },\n                    mode,\n                    eraser,\n                    selectedShape\n                } = this;\n                let { clientX: x, clientY: y } = e;\n                let loc = windowToCanvas({ x, y, canvas });\n                rubberbandLine.dragging = false;\n                switch (mode) {\n                    case 'normal':\n                        restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\n                        this.updateRubberband({ loc });\n                        break;\n                    case 'erase':\n                        eraser.eraseLast(mousedown);\n                        break;\n                    case 'edit':\n                    case 'drag':\n                        if (selectedShape) {\n                            let { type } = selectedShape;\n                            switch (type) {\n                                case 'BezierCurve':\n                                    selectedShape.setCenter();\n                                    break;\n                            }\n                        }\n                        break;\n                }\n            },\n            redraw() {\n                let { ctx, canvas } = this;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\n                this.drawShapes();\n            }\n        },\n    }\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=649c7d62&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=649c7d62&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"649c7d62\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    },\n    //{\n      //path: '/about',\n      //name: 'about',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      // component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue')\n    //}\n  ]\n})\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n\n  },\n  mutations: {\n\n  },\n  actions: {\n\n  }\n})\n","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport './assets/scss/style.scss'\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=649c7d62&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=649c7d62&scoped=true&lang=scss&\"","module.exports = __webpack_public_path__ + \"img/test.6dc34951.jpg\";"],"sourceRoot":""}