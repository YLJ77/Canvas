{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/drawingBoard/index.vue?0842","webpack:///./src/App.vue?6853","webpack:///./src/App.vue","webpack:///./src/views/drawingBoard/index.vue?e29f","webpack:///./src/views/drawingBoard/appFunc.js","webpack:///./src/views/drawingBoard/shape.js","webpack:///./src/views/drawingBoard/Protractor.js","webpack:///./src/views/drawingBoard/Eraser.js","webpack:///src/views/drawingBoard/index.vue","webpack:///./src/views/drawingBoard/index.vue?76b4","webpack:///./src/views/drawingBoard/index.vue","webpack:///./src/views/superMario/index.vue?7979","webpack:///./src/views/superMario/Class/Compositor.js","webpack:///./src/views/superMario/Class/math.js","webpack:///./src/views/superMario/Class/TileResolver.js","webpack:///./src/views/superMario/Class/Entity.js","webpack:///./src/views/superMario/Class/TileCollider.js","webpack:///./src/views/superMario/Class/Level.js","webpack:///./src/views/superMario/layers.js","webpack:///./src/views/superMario/Class/SpriteSheet.js","webpack:///./src/views/superMario/anim.js","webpack:///./src/views/superMario/loaders.js","webpack:///./src/views/superMario/Timer.js","webpack:///./src/views/superMario/traits/Jump.js","webpack:///./src/views/superMario/traits/Go.js","webpack:///./src/views/superMario/Class/entities.js","webpack:///./src/views/superMario/Class/KeyBoardState.js","webpack:///./src/views/superMario/input.js","webpack:///./src/views/superMario/Class/Camera.js","webpack:///./src/views/superMario/debugger.js","webpack:///src/views/superMario/index.vue","webpack:///./src/views/superMario/index.vue?9e7a","webpack:///./src/views/superMario/index.vue","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/views/superMario/index.vue?e27e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_fcb2d3bc_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_fcb2d3bc_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_0a449b12_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","drawingBoardvue_type_template_id_fcb2d3bc_scoped_true_render","width","height","on","mousedown","onMouseDown","mousemove","onMouseMove","mouseup","onMouseUp","_v","for","directives","rawName","expression","change","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","color","multiple","shape","type","domProps","input","composing","sides","checked","_q","isArray","guidewires","_i","$$a","$$el","$$c","$$v","$$i","concat","isFillColor","click","erase","drawingBoardvue_type_template_id_fcb2d3bc_scoped_true_staticRenderFns","copyObj","_ref","obj","exclusiveKey","assign_default","create_default","get_prototype_of_default","keys_default","forEach","includes","esm_typeof","JSON","parse","stringify_default","drawPoint","_ref2","x","y","_ref2$radius","radius","ctx","_ref2$color","save","beginPath","fillStyle","arc","Math","PI","fill","restore","restoreDrawingSurface","_ref4","imgData","putImageData","saveDrawingSurface","_ref5","canvas","getImageData","windowToCanvas","_ref6","bbox","getBoundingClientRect","left","top","drawHorizontalLine","_ref7","moveTo","lineTo","stroke","drawVerticalLine","_ref8","drawGuidewires","_ref9","strokeStyle","lineWidth","drawGrid","_ref10","stepx","stepy","Point","classCallCheck","Shape","filled","startRadians","constructor","offsets","pointRadius","isEditing","draggingPoint","points","isRotated","loc","_this","point","offsetX","offsetY","index","setCenter","minX","minY","maxX","maxY","Number","MAX_VALUE","MIN_VALUE","min","max","center","_this2","drawPath","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","isPointInPath","err","return","_debugger","drawDebuggerPoint","drawControlPoint","createPath","radians","tx","ty","sin","cos","currentTransform","a","e","b","f","transform","_ref3","_ctx$currentTransform","arguments","_ref4$filled","BezierCurve","_Shape","_this3","endPoints","controlPoints","possibleConstructorReturn","getPrototypeOf","toConsumableArray","inherits","createClass","_this$getRectInfo","getRectInfo","sqrt","pow","tPoint","setShapeTransform","draw","_this4","centerX","centerY","getTransformPointToScreenPoint","createCurvePath","_this$points","slicedToArray","e1","e2","c1","c2","bezierCurveTo","_this$getRectInfo2","rect","closePath","createRectPath","drawCurve","Line","_Shape2","_this5","beginX","beginY","endX","endY","abs","_this$points2","beginPoint","_this$points3","endPoint","_this$points4","tPoints","_this$points5","_this$points6","createLinePath","drawLine","Circle","_Shape3","_this6","setPoints","isCenter","_this$draggingPoint","_this$points7","_this$points7$","_this$points8","_this$points8$","createCirclePath","RoundRect","_Shape4","_this7","_ref8$cornerRadius","cornerRadius","cornerX","cornerY","setControlPoint","basePointX","controlPointX","controlPointY","controlPoint","cx1","cy1","cx2","cy2","tCornerX","tCornerY","_this8","tBasePointX","tControlPointX","tControlPointY","entry","basePoint","controlPoint1","controlPoint2","_this9","offset","updatePointAfterRotated","_controlPoint","toArray","cPoint","arcTo","_controlPoint2","Polygon","_Shape5","_this10","getPoints","_this$getRectInfo3","_this$getRectInfo3$ce","createPolygonPath","drawPolygon","_this11","Protractor","rotatingLockRadians","RADIUS","STROKE_STYLE","FILL_STYLE","SHADOW_COLOR","DEGREE_RING_MARGIN","TRACKING_RING_MARGIN","DEGREE_ANNOTATIONS_FILL_STYLE","DEGREE_ANNOTATIONS_TEXT_SIZE","DEGREE_OUTER_RING_MARGIN","TICK_WIDTH","TICK_LONG_STROKE_STYLE","TICK_SHORT_STROKE_STYLE","TRACKING_RING_STROKING_STYLE","_this$shape","shadowColor","endpt","atan","font","textAlign","textBaseline","fillText","toFixed","ANGLE_MAX","ANGLE_DELTA","cnt","shadowOffsetX","shadowOffsetY","shadowBlur","drawCentroid","drawCentroidGuidewire","drawOutMostDial","drawDegreeOuterDial","drawDegreeDialTicks","drawDegreeInnerDial","drawDegreeAnnotations","Eraser","ERASER_LINE_WIDTH","ERASER_SHADOW_COLOR","ERASER_SHADOW_STYLE","ERASER_STROKE_STYLE","ERASER_SHADOW_OFFSET","ERASER_SHADOW_BLUR","eraserWidth","parse_float_default","clip","GRID_HORIZONTAL_SPACING","GRID_VERTICAL_SPACING","GRID_LINE_COLOR","setErasePath","setEraserAttributes","setDrawPath","drawingBoardvue_type_script_lang_js_","eraserType","shapes","rubberbandLine","drawingSurfaceImageData","rubberbandRect","dragging","selectedShape","rotatingLockEngaged","rotatingShape","protractor","eraser","mounted","getContext","setCanvasSize","drawRubberbandLines","watch","style","cursor","inactiveEditing","redraw","methods","innerWidth","innerHeight","stopRotatingShape","saveCanvasInfo","drawShapes","drawBezierCurve","_this$getEndAndContro","getEndAndControlPoints","curve","shape_BezierCurve","_this$rubberbandLine","_this$rubberbandLine$","polygon","shape_Polygon","document","getElementById","clearRect","updateRubberbandRect","_this$rubberbandLine2","drawRubberbandShape","drawRoundedRect","_ref3$cornerRadius","_this$rubberbandLine3","_this$rubberbandLine4","_this$rubberbandLine5","roundRect","shape_RoundRect","drawCircle","_this$rubberbandLine6","_this$rubberbandLine7","_this$rubberbandLine8","circle","shape_Circle","_this$rubberbandLine9","_this$rubberbandLine10","line","shape_Line","updateRubberband","activeEditing","getSelectedShape","getDraggingPoint","savePointOffset","initProtractor","Protractor_Protractor","rotateShape","rotate","clientX","clientY","preventDefault","Eraser_Eraser","existEditingShap","some","_this$rubberbandLine11","updatePointsOnMoving","updatePointOnEditing","eraseLast","drawEraser","pos","_this$rubberbandLine12","views_drawingBoardvue_type_script_lang_js_","drawingBoard_component","drawingBoard","superMariovue_type_template_id_9945e8ba_scoped_true_render","_m","superMariovue_type_template_id_9945e8ba_scoped_true_staticRenderFns","Compositor","layers","camera","layer","Matrix","grid","callback","column","col","Vec2","set","TileResolver","matrix","tileSize","floor","pos1","pos2","pMax","ceil","range","toIndex","indexX","indexY","tile","x1","x2","y1","y2","posX","posY","getByIndex","matches","toIndexRange","match","Sides","TOP","symbol_default","BOTTOM","Trait","NAME","console","warn","Entity","vel","size","traits","side","trait","obstruct","deltaTime","update","TileCollider","tileMatrix","tiles","entity","dir","searchByRange","check","Level","comp","entities","set_default","gravity","totalTime","tileCollider","createBackgroundLayer","level","sprites","startIndex","endIndex","resolver","buffer","createElement","drawFrom","drawTo","_loop","animations","has","drawAnim","drawTile","drawWidth","drawImage","createSpriteLayer","spriteBuffer","spriteBufferContext","createCameraLayer","cameraToDraw","fromCamera","SpriteSheet","image","map_default","animation","buffers","flip","scale","translate","define","distance","createAnim","frames","frameLen","frameIndex","frameName","loadImage","src","promise_default","resolve","Image","onload","createTiles","backgrounds","applyRange","background","xStart","xLen","yStart","yLen","xEnd","yEnd","ranges","_range","_range2","_range3","loadJson","_callee","url","regeneratorRuntime","wrap","_context","prev","abrupt","fetch","then","json","stop","loadSpriteSheet","_x2","_loadSpriteSheet","_callee2","sheetSpec","_context2","sent","imageUrl","tileW","tileH","tileSpec","defineTile","frameSpec","animSpec","defineAnim","loadLevel","_x3","_x4","_loadLevel","_callee3","levelSpec","backgroundSprite","backgroundLayer","spriteLayer","_context3","spriteSheet","Timer","accumulatedTime","lastTime","updateProxy","time","enqueue","requestAnimationFrame","Jump","ready","duration","velocity","engageTime","speedBoost","requestTime","gracePeriod","cancel","Go","acceleration","deceleration","dragFactor","heading","absX","jump","falling","decel","drag","createMario","_createMario","marioSprite","mario","SLOW_DRAG","FAST_DRAG","runAnim","routeFrame","go","addTrait","turbo","turboOn","PRESSED","RELEASED","KeyBoardState","keyStates","keyMap","code","event","keyState","eventName","addEventListener","handleEvent","setupKeyboard","SPACE","RIGHT","LEFT","UP","Keyboard","addMapping","start","Camera","setupMouseControl","lastEvent","buttons","superMariovue_type_script_lang_js_","_draw","asyncToGenerator","mark","timer","Camera_Camera","add","listenTo","Timer_Timer","init","views_superMariovue_type_script_lang_js_","superMario_component","superMario","Vue","use","Router","router","routes","path","Home","SuperMario","Vuex","store","Store","state","mutations","actions","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_9945e8ba_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_9945e8ba_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.d806d3f0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=fcb2d3bc&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=fcb2d3bc&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0a449b12&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":\"canvas\",\"width\":\"600\",\"height\":\"600\"},on:{\"mousedown\":_vm.onMouseDown,\"mousemove\":_vm.onMouseMove,\"mouseup\":_vm.onMouseUp}},[_vm._v(\"Canvas not supported\")]),_c('ul',{attrs:{\"id\":\"controls\"}},[_c('li',[_c('label',{attrs:{\"for\":\"color\"}},[_vm._v(\"颜色\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"id\":\"color\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.color=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"red\"}},[_vm._v(\"red\")]),_c('option',{attrs:{\"value\":\"green\"}},[_vm._v(\"green\")]),_c('option',{attrs:{\"value\":\"blue\"}},[_vm._v(\"blue\")]),_c('option',{attrs:{\"value\":\"orange\"}},[_vm._v(\"orange\")]),_c('option',{attrs:{\"value\":\"cornflowerblue\",\"selected\":\"\"}},[_vm._v(\"cornflowerblue\")]),_c('option',{attrs:{\"value\":\"goldenrod\"}},[_vm._v(\"goldenrod\")]),_c('option',{attrs:{\"value\":\"navy\"}},[_vm._v(\"navy\")]),_c('option',{attrs:{\"value\":\"purple\"}},[_vm._v(\"purple\")])])]),_c('li',[_c('label',{attrs:{\"for\":\"shape\"}},[_vm._v(\"形状\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.shape),expression:\"shape\"}],attrs:{\"id\":\"shape\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.shape=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.mode='normal'}]}},[_c('option',{attrs:{\"value\":\"Circle\"}},[_vm._v(\"circle\")]),_c('option',{attrs:{\"value\":\"Line\"}},[_vm._v(\"line\")]),_c('option',{attrs:{\"value\":\"RoundedRect\"}},[_vm._v(\"RoundedRect\")]),_c('option',{attrs:{\"value\":\"Polygon\"}},[_vm._v(\"Polygon\")]),_c('option',{attrs:{\"value\":\"BezierCurve\"}},[_vm._v(\"BezierCurve\")])])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.shape === 'Polygon'),expression:\"shape === 'Polygon'\"}]},[_c('label',{attrs:{\"for\":\"sides\"}},[_vm._v(\"边数\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sides),expression:\"sides\"}],attrs:{\"type\":\"text\",\"id\":\"sides\"},domProps:{\"value\":(_vm.sides)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.sides=$event.target.value}}})]),_c('li',[_c('label',{attrs:{\"for\":\"normal-radio\"}},[_vm._v(\"画图\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"normal-radio\",\"value\":\"normal\"},domProps:{\"checked\":_vm._q(_vm.mode,\"normal\")},on:{\"change\":function($event){_vm.mode=\"normal\"}}}),_c('label',{attrs:{\"for\":\"drag-radio\"}},[_vm._v(\"拖拽\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"drag-radio\",\"value\":\"drag\"},domProps:{\"checked\":_vm._q(_vm.mode,\"drag\")},on:{\"change\":function($event){_vm.mode=\"drag\"}}}),_c('label',{attrs:{\"for\":\"edit-radio\"}},[_vm._v(\"编辑\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"edit-radio\",\"value\":\"edit\"},domProps:{\"checked\":_vm._q(_vm.mode,\"edit\")},on:{\"change\":function($event){_vm.mode=\"edit\"}}}),_c('label',{attrs:{\"for\":\"rotate-radio\"}},[_vm._v(\"旋转\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"rotate-radio\",\"value\":\"rotate\"},domProps:{\"checked\":_vm._q(_vm.mode,\"rotate\")},on:{\"change\":function($event){_vm.mode=\"rotate\"}}}),_c('label',{attrs:{\"for\":\"eraser-radio\"}},[_vm._v(\"橡皮擦\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"eraser-radio\",\"value\":\"erase\"},domProps:{\"checked\":_vm._q(_vm.mode,\"erase\")},on:{\"change\":function($event){_vm.mode=\"erase\"}}}),_c('label',{attrs:{\"for\":\"guidewireCheckbox\"}},[_vm._v(\"导线\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.guidewires),expression:\"guidewires\"}],attrs:{\"id\":\"guidewireCheckbox\",\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(_vm.guidewires)?_vm._i(_vm.guidewires,null)>-1:(_vm.guidewires)},on:{\"change\":function($event){var $$a=_vm.guidewires,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.guidewires=$$a.concat([$$v]))}else{$$i>-1&&(_vm.guidewires=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.guidewires=$$c}}}}),_c('label',{attrs:{\"for\":\"checkbox\"}},[_vm._v(\"填充:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isFillColor),expression:\"isFillColor\"}],attrs:{\"type\":\"checkbox\",\"id\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isFillColor)?_vm._i(_vm.isFillColor,null)>-1:(_vm.isFillColor)},on:{\"change\":function($event){var $$a=_vm.isFillColor,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isFillColor=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isFillColor=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isFillColor=$$c}}}}),_c('input',{attrs:{\"id\":\"eraseAllButton\",\"type\":\"button\",\"value\":\"擦除所有\"},on:{\"click\":_vm.erase}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function copyObj({ obj, exclusiveKey }) {\r\n    obj = Object.assign( Object.create( Object.getPrototypeOf(obj)), obj);\r\n    Object.keys(obj).forEach(key => {\r\n        if (!exclusiveKey.includes(key) && typeof obj[key] === 'object') {\r\n            obj[key] = JSON.parse(JSON.stringify(obj[key]));\r\n        }\r\n    });\r\n    return obj;\r\n}\r\nexport function drawPoint({ x, y, radius = 5, ctx, color = 'red' }) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = color;\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.restore();\r\n}\r\nexport function drawBatchPoint({ points, ctx }) {\r\n    points.forEach((x, index) => {\r\n        if ((index < points.length - 1) && (index + 1) % 2 !== 0) {\r\n            let y = points[index + 1];\r\n            drawPoint({ x, y, ctx });\r\n        }\r\n    });\r\n}\r\nexport function restoreDrawingSurface({ ctx, imgData }) {\r\n    ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\nexport function saveDrawingSurface({ ctx, canvas }) {\r\n    return ctx.getImageData(0, 0,\r\n        canvas.width,\r\n        canvas.height);\r\n}\r\n\r\nexport function windowToCanvas({x, y, canvas}) {\r\n    var bbox = canvas.getBoundingClientRect();\r\n    return { x: x - bbox.left * (canvas.width / bbox.width),\r\n        y: y - bbox.top * (canvas.height / bbox.height) };\r\n}\r\n\r\nfunction drawHorizontalLine ({ y, ctx }) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(0,y+0.5);\r\n    ctx.lineTo(ctx.canvas.width, y+0.5);\r\n    ctx.stroke();\r\n}\r\nfunction drawVerticalLine ({ x, ctx }) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(x+0.5,0);\r\n    ctx.lineTo(x+0.5, ctx.canvas.height);\r\n    ctx.stroke();\r\n}\r\nexport function drawGuidewires({ x, y, ctx }) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'rgba(0,0,230,0.4)';\r\n    ctx.lineWidth = 0.5;\r\n    drawVerticalLine({ x, ctx });\r\n    drawHorizontalLine({ y, ctx });\r\n    ctx.restore();\r\n}\r\nexport function drawGrid({ ctx, color, stepx, stepy }) {\r\n    ctx.save();\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = 0.5;\r\n    for (let i = stepx + 0.5; i < ctx.canvas.width; i += stepx) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(i, 0);\r\n        ctx.lineTo(i, ctx.canvas.height);\r\n        ctx.stroke();\r\n    }\r\n    for (let i = stepy + 0.5; i < ctx.canvas.height; i += stepy) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, i);\r\n        ctx.lineTo(ctx.canvas.width, i);\r\n        ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n}\r\n\r\nexport function drawAxes({ctx, canvas}) {\r\n    var AXIS_MARGIN = 40,\r\n        AXIS_ORIGIN = { x: AXIS_MARGIN, y: canvas.height-AXIS_MARGIN },\r\n        AXIS_TOP = AXIS_MARGIN,\r\n        AXIS_RIGHT = canvas.width-AXIS_MARGIN,\r\n        HORIZONTAL_TICK_SPACING = 10,\r\n        VERTICAL_TICK_SPACING = 10,\r\n        AXIS_WIDTH = AXIS_RIGHT - AXIS_ORIGIN.x,\r\n        AXIS_HEIGHT = AXIS_ORIGIN.y - AXIS_TOP,\r\n        NUM_VERTICAL_TICKS = AXIS_HEIGHT / VERTICAL_TICK_SPACING,\r\n        NUM_HORIZONTAL_TICKS = AXIS_WIDTH / HORIZONTAL_TICK_SPACING,\r\n        TICK_WIDTH = 10,\r\n        TICKS_LINEWIDTH = 0.5,\r\n        TICKS_COLOR = 'navy',\r\n        AXIS_LINEWIDTH = 1.0,\r\n        AXIS_COLOR = 'blue';\r\n\r\n    function drawHorizontalAxis() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\r\n        ctx.lineTo(AXIS_RIGHT, AXIS_ORIGIN.y);\r\n        ctx.stroke();\r\n    }\r\n    function drawVerticalAxis() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\r\n        ctx.lineTo(AXIS_ORIGIN.x, AXIS_TOP);\r\n        ctx.stroke();\r\n    }\r\n    function drawVerticalAxisTicks() {\r\n        var deltaX;\r\n        for (var i=1; i < NUM_VERTICAL_TICKS; ++i) {\r\n            ctx.beginPath();\r\n            if (i % 5 === 0) deltaX = TICK_WIDTH;\r\n            else deltaX = TICK_WIDTH/2;\r\n            ctx.moveTo(AXIS_ORIGIN.x - deltaX,\r\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\r\n            ctx.lineTo(AXIS_ORIGIN.x + deltaX,\r\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    function drawHorizontalAxisTicks() {\r\n        var deltaY;\r\n        for (var i=1; i < NUM_HORIZONTAL_TICKS; ++i) {\r\n            ctx.beginPath();\r\n            if (i % 5 === 0) deltaY = TICK_WIDTH;\r\n            else deltaY = TICK_WIDTH/2;\r\n            ctx.moveTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\r\n                AXIS_ORIGIN.y - deltaY);\r\n            ctx.lineTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\r\n                AXIS_ORIGIN.y + deltaY);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    ctx.save();\r\n    ctx.strokeStyle = AXIS_COLOR;\r\n    ctx.lineWidth = AXIS_LINEWIDTH;\r\n    drawHorizontalAxis();\r\n    drawVerticalAxis();\r\n    ctx.lineWidth = 0.5;\r\n    ctx.lineWidth = TICKS_LINEWIDTH;\r\n    ctx.strokeStyle = TICKS_COLOR;\r\n    drawVerticalAxisTicks();\r\n    drawHorizontalAxisTicks();\r\n    ctx.restore();\r\n}\r\n\r\n","import { drawPoint } from \"./appFunc\";\r\n\r\nexport class Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nclass Shape {\r\n    constructor({ ctx, strokeStyle, fillStyle, filled, startRadians }) {\r\n        this.ctx = ctx;\r\n        this.strokeStyle = strokeStyle;\r\n        this.fillStyle = fillStyle;\r\n        this.filled = filled;\r\n        this.type = new.target.name;\r\n        this.offsets = null;\r\n        this.startRadians = startRadians || 0;\r\n        this.pointRadius = 5;\r\n        this.isEditing = false;\r\n        this.draggingPoint = null;\r\n        this.points = [];\r\n        this.isRotated = false;\r\n    }\r\n    savePointOffset(loc) {\r\n        let { points } = this;\r\n        this.offsets = [];\r\n        points.forEach(point => {\r\n            let offsetX = loc.x -point.x;\r\n            let offsetY = loc.y - point.y;\r\n            this.offsets.push({ offsetX, offsetY });\r\n        });\r\n    }\r\n    updatePointsOnMoving(loc) {\r\n        let { points, offsets } = this;\r\n        points.forEach((point, index) => {\r\n            point.x = loc.x - offsets[index].offsetX;\r\n            point.y = loc.y - offsets[index].offsetY;\r\n        });\r\n        this.setCenter(loc);\r\n    }\r\n    getRectInfo() {\r\n        let minX, minY, maxX, maxY, width, height;\r\n        let { points } = this;\r\n        minX = minY = Number.MAX_VALUE;\r\n        maxX = maxY = Number.MIN_VALUE;\r\n        points.forEach( point => {\r\n            let { x, y } = point;\r\n            minX = Math.min(minX, x);\r\n            minY = Math.min(minY, y);\r\n            maxX = Math.max(maxX, x);\r\n            maxY = Math.max(maxY, y);\r\n        });\r\n        width = maxX - minX;\r\n        height = maxY - minY;\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width,\r\n            height,\r\n            radius: Math.max(width, height) / 2,\r\n            center: {\r\n                x: minX + width / 2,\r\n                y: minY + height / 2\r\n            }\r\n        }\r\n    }\r\n    drawControlPoint() {\r\n        let { ctx, pointRadius, points } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, pointRadius, 0, 2 * Math.PI, false);\r\n            this.drawPath({ filled: true });\r\n        });\r\n    }\r\n    getDraggingPoint(loc) {\r\n        let { points, ctx, pointRadius } = this;\r\n        this.draggingPoint = null;\r\n        for (let point of points) {\r\n            ctx.beginPath();\r\n            ctx.arc(point.x, point.y,\r\n                pointRadius, 0, Math.PI * 2, false);\r\n            if (ctx.isPointInPath(loc.x, loc.y)) {\r\n                this.draggingPoint = point;\r\n                break;\r\n            }\r\n        }\r\n        return this.draggingPoint;\r\n    }\r\n    updatePointOnEditing(loc) {\r\n        let { draggingPoint } = this;\r\n        draggingPoint.x = loc.x;\r\n        draggingPoint.y = loc.y;\r\n        this.setCenter(loc);\r\n    }\r\n    draw() {\r\n        let { ctx, filled, _debugger, drawDebuggerPoint } = this;\r\n        this.isEditing && this.drawControlPoint();\r\n        this.createPath(ctx);\r\n        this.drawPath({ filled });\r\n        if (drawDebuggerPoint && _debugger) {\r\n            this.drawDebuggerPoint();\r\n        }\r\n    }\r\n    setShapeTransform({ radians, tx, ty }) {\r\n        let { ctx } = this;\r\n        /*        ctx.translate(tx, ty);\r\n                ctx.rotate(radians);*/\r\n        let sin = Math.sin(radians),\r\n            cos = Math.cos(radians);\r\n        let currentTransform = {\r\n            a: cos,  c: -sin, e: tx,\r\n            b: sin, d: cos, f: ty\r\n        };\r\n        let { a, b, c, d, e, f } = currentTransform;\r\n        ctx.transform(a,b,c,d,e,f);\r\n        ctx.currentTransform = currentTransform;\r\n    }\r\n    getTransformPointToScreenPoint({ x, y, tx, ty }) {\r\n        let { ctx } = this;\r\n        let { currentTransform: { a, b, c, d, e, f } } = ctx;\r\n        if (tx !== undefined) e = tx;\r\n        if (ty !== undefined) f = ty;\r\n        return {\r\n            x: x * a + y * c + e,\r\n            y: x * b + y * d + f\r\n        };\r\n    }\r\n    drawPath({ filled = false } = {}) {\r\n        let { ctx, strokeStyle, fillStyle } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.stroke();\r\n        if (filled) {\r\n            ctx.fillStyle = fillStyle;\r\n            ctx.fill();\r\n        }\r\n        ctx.restore();\r\n    }\r\n    updatePointAfterRotated() {}\r\n    createPath() {}\r\n    setCenter() {}\r\n    rotate() {}\r\n}\r\nexport class BezierCurve extends Shape {\r\n    constructor({ ctx, startRadians, fillStyle, strokeStyle, endPoints, controlPoints }) {\r\n        super({ ctx, strokeStyle, fillStyle, startRadians, filled: false });\r\n        this.endPoints = endPoints;\r\n        this.controlPoints = controlPoints;\r\n        this.points = [...this.endPoints, ...this.controlPoints];\r\n        this.setCenter();\r\n    }\r\n    setCenter() {\r\n        let { width, height, x: minX, y: minY } = this.getRectInfo();\r\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this.x = width / 2 + minX;\r\n        this.y = height / 2 + minY;\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, x, y, points } = this;\r\n        let tPoint = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n        this.startRadians = radians;\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n        this.x = 0;\r\n        this.y = 0;\r\n        points.forEach(point => {\r\n           point.x -= x;\r\n           point.y -= y;\r\n        });\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.points = tPoint;\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points, x: centerX, y: centerY } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            x -= centerX;\r\n            y -= centerY;\r\n            let tPoint = this.getTransformPointToScreenPoint({ x, y });\r\n            point.x = tPoint.x;\r\n            point.y = tPoint.y;\r\n        });\r\n    }\r\n    drawCurve() {\r\n        this.createCurvePath();\r\n        this.drawPath();\r\n    }\r\n    createCurvePath() {\r\n        let { points: [ e1, e2, c1, c2 ], ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(e1.x, e1.y);\r\n        ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, e2.x, e2.y);\r\n    }\r\n    createRectPath() {\r\n        let { x, y, width, height } = this.getRectInfo();\r\n        let { ctx, pointRadius } = this;\r\n        ctx.beginPath();\r\n        ctx.rect(x - pointRadius, y - pointRadius, width + pointRadius * 2, height + pointRadius * 2);\r\n        ctx.closePath();\r\n    }\r\n    createPath() {\r\n        this.createRectPath();\r\n    }\r\n    draw() {\r\n        this.isEditing && this.drawControlPoint();\r\n        this.drawCurve();\r\n    }\r\n}\r\nexport class Line extends Shape {\r\n    constructor({ ctx, filled, fillStyle, strokeStyle, beginX, beginY, endX, endY, startRadians }) {\r\n        super({ ctx, strokeStyle, filled, fillStyle, startRadians });\r\n        this.radius = Math.sqrt(Math.pow(Math.abs(beginX - endX), 2) + Math.pow(Math.abs(beginY-endY), 2));\r\n        this.points = [{ x: beginX, y: beginY }, { x: endX, y: endY } ];\r\n        this.setCenter();\r\n    }\r\n    setCenter() {\r\n        let { points: [ beginPoint ] } = this;\r\n        this.x = beginPoint.x;\r\n        this.y = beginPoint.y;\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points: [ beginPoint, endPoint ] } = this;\r\n        endPoint.x -= beginPoint.x;\r\n        endPoint.y -= beginPoint.y;\r\n        let point = this.getTransformPointToScreenPoint({ x: endPoint.x, y: endPoint.y });\r\n        endPoint.x = point.x;\r\n        endPoint.y = point.y;\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, points: [ beginPoint, endPoint ], points } = this;\r\n        let { x, y } = beginPoint;\r\n        let tPoints = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n\r\n        beginPoint.x = 0;\r\n        beginPoint.y = 0;\r\n        endPoint.x -= x;\r\n        endPoint.y -= y;\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.points = tPoints;\r\n    }\r\n    createRectPath() {\r\n        let { points: [ beginPoint, endPoint ], ctx, pointRadius } = this;\r\n        ctx.beginPath();\r\n        let minX = Math.min(beginPoint.x, endPoint.x) - pointRadius,\r\n            minY = Math.min(beginPoint.y, endPoint.y) - pointRadius,\r\n            width = Math.abs(beginPoint.x - endPoint.x) + 2 * pointRadius,\r\n            height = Math.abs(beginPoint.y - endPoint.y) + 2 * pointRadius;\r\n        ctx.rect(minX, minY, width, height);\r\n    }\r\n    createPath() {\r\n        this.createRectPath();\r\n    }\r\n    createLinePath() {\r\n        let { points: [ beginPoint, endPoint ], ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(beginPoint.x, beginPoint.y);\r\n        ctx.lineTo(endPoint.x, endPoint.y);\r\n    }\r\n    drawLine() {\r\n        this.createLinePath();\r\n        this.drawPath();\r\n    }\r\n    draw() {\r\n        let { isEditing } = this;\r\n        isEditing && this.drawControlPoint();\r\n        this.drawLine();\r\n    }\r\n}\r\nexport class Circle extends Shape{\r\n    constructor({ centerX, centerY, radius, ctx, filled, strokeStyle, fillStyle }) {\r\n        super({ ctx, strokeStyle, fillStyle, filled });\r\n        this.x = centerX;\r\n        this.y = centerY;\r\n        this.radius = radius;\r\n        this.setPoints();\r\n    }\r\n    setPoints() {\r\n        let { x, y, radius } = this;\r\n        this.points = [\r\n            {\r\n                x,\r\n                y,\r\n                isCenter: true\r\n            },\r\n            {\r\n                x,\r\n                y: y - radius\r\n            },\r\n            {\r\n                x: x + radius,\r\n                y\r\n            },\r\n            {\r\n                x: x,\r\n                y: y + radius\r\n            },\r\n            {\r\n                x: x - radius,\r\n                y: y\r\n            }\r\n        ];\r\n    }\r\n    setCenter(loc) {\r\n        let { draggingPoint } = this;\r\n        if (draggingPoint) {\r\n            let { draggingPoint: { isCenter } } = this;\r\n            if (!isCenter) {\r\n                let { x, y } = this;\r\n                let offsetX = loc.x - x;\r\n                let offsetY = loc.y - y;\r\n                this.radius = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2));\r\n            } else {\r\n                let { draggingPoint: { x, y } } = this;\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n            this.setPoints();\r\n        } else {\r\n            let { points: [ { x, y } ] } = this;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n    createCirclePath() {\r\n        let { ctx, points: [ { x, y } ], radius } = this;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, Math.PI*2, false);\r\n    }\r\n    createPath() {\r\n        this.createCirclePath();\r\n    }\r\n}\r\nexport class RoundRect extends Shape {\r\n    constructor({ ctx, width, height, startRadians, cornerRadius = 10, cornerX, cornerY, fillStyle, strokeStyle, filled }) {\r\n        super({ fillStyle, filled, strokeStyle, startRadians, ctx });\r\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\r\n        this.y = height / 2 + cornerY;  // rotate center y\r\n        this.cornerX = cornerX;\r\n        this.cornerY = cornerY;\r\n        this.cornerRadius = cornerRadius;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this._debugger = false;\r\n        this.setControlPoint();\r\n    }\r\n    setControlPoint() {\r\n        let { cornerX, cornerY, cornerRadius, width, height } = this;\r\n        let basePointX = cornerX + cornerRadius;\r\n        let controlPointX = cornerX + width;\r\n        let controlPointY = cornerY + height;\r\n        this.controlPoint = [\r\n            {\r\n                x: basePointX,\r\n                y: cornerY\r\n            },\r\n            {\r\n                cx1: controlPointX,\r\n                cy1: cornerY,\r\n                cx2: controlPointX,\r\n                cy2: controlPointY,\r\n            },\r\n            {\r\n                cx1: controlPointX,\r\n                cy1: controlPointY,\r\n                cx2: cornerX,\r\n                cy2: controlPointY,\r\n            },\r\n            {\r\n                cx1: cornerX,\r\n                cy1: controlPointY,\r\n                cx2: cornerX,\r\n                cy2: cornerY,\r\n            },\r\n            {\r\n                cx1: cornerX,\r\n                cy1: cornerY,\r\n                cx2: basePointX,\r\n                cy2: cornerY,\r\n            },\r\n        ];\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, width, height, cornerX, cornerY, x, y } = this;\r\n        let tCornerX = -width / 2,\r\n            tCornerY = -height / 2;\r\n        this.isRotated = true;\r\n        this.startRadians = radians;\r\n        ctx.save();\r\n\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.cornerX = tCornerX;\r\n        this.cornerY = tCornerY;\r\n        this.setControlPoint();\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.cornerX = cornerX;\r\n        this.cornerY = cornerY;\r\n    }\r\n    updatePointAfterRotated({ tx, ty } = {}) {\r\n        let { cornerRadius, width, height, controlPoint } = this;\r\n        let tCornerX = -width / 2,\r\n            tCornerY = -height / 2;\r\n        let tBasePointX = tCornerX + cornerRadius;\r\n        let tControlPointX = tCornerX + width;\r\n        let tControlPointY = tCornerY + height;\r\n        let tPoints = [];\r\n        controlPoint.forEach((entry, index) => {\r\n            let basePoint, controlPoint1, controlPoint2;\r\n            switch (index) {\r\n                case 0:\r\n                    basePoint = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\r\n                    break;\r\n                case 1:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tCornerY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\r\n                    break;\r\n                case 2:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\r\n                    break;\r\n                case 3:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\r\n                    break;\r\n                case 4:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\r\n                    break;\r\n            }\r\n            if (index === 0) {\r\n                tPoints.push({ x: basePoint.x, y: basePoint.y });\r\n            } else {\r\n                tPoints.push({\r\n                    cx1: controlPoint1.x,\r\n                    cy1: controlPoint1.y,\r\n                    cx2: controlPoint2.x,\r\n                    cy2: controlPoint2.y,\r\n                });\r\n            }\r\n            this.controlPoint = tPoints;\r\n        });\r\n    }\r\n    savePointOffset(loc) {\r\n        let { cornerX, cornerY } = this;\r\n        let offsetX = loc.x -cornerX;\r\n        let offsetY = loc.y - cornerY;\r\n        this.offsets = [{ offsetX, offsetY }];\r\n    }\r\n    updatePointsOnMoving(loc) {\r\n        this.offsets.forEach(offset => {\r\n            this.cornerX = loc.x - offset.offsetX;\r\n            this.cornerY = loc.y - offset.offsetY;\r\n        });\r\n        let { width, height, cornerX, cornerY, isRotated } = this;\r\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\r\n        this.y = height / 2 + cornerY;  // rotate center y\r\n        if (isRotated) {\r\n            this.updatePointAfterRotated({ tx: this.x, ty: this.y });\r\n        } else {\r\n            this.setControlPoint({ cornerX, cornerY });\r\n        }\r\n    }\r\n    updatePointOnEditing() {\r\n\r\n    }\r\n    createPath() {\r\n        let { ctx, controlPoint, cornerRadius } = this;\r\n        let [ basePoint, ...cPoint ] = controlPoint;\r\n        ctx.beginPath();\r\n        ctx.moveTo(basePoint.x, basePoint.y);\r\n        cPoint.forEach(point => {\r\n            let { cx1, cy1, cx2, cy2 } = point;\r\n            ctx.arcTo(cx1, cy1, cx2, cy2, cornerRadius);\r\n        });\r\n        ctx.closePath();\r\n    }\r\n    drawDebuggerPoint() {\r\n        let { ctx, controlPoint } = this;\r\n        let [ basePoint, ...cPoint ] = controlPoint;\r\n        let radius = 4;\r\n        drawPoint({ x: basePoint.x, y: basePoint.y, ctx, radius });\r\n        cPoint.forEach(point => {\r\n            let { cx1, cy1, cx2, cy2 } = point;\r\n            drawPoint({ x: cx1, y: cy1, ctx, color: 'green', radius });\r\n            drawPoint({ x: cx2, y: cy2, ctx, color: 'yellow', radius });\r\n        });\r\n    }\r\n\r\n}\r\nexport class Polygon extends Shape {\r\n    constructor({ centerX, centerY, radius,\r\n                    sides, startRadians, strokeStyle, fillStyle, filled, ctx }) {\r\n        super({ ctx, filled, fillStyle, strokeStyle, startRadians });\r\n        this.x = centerX;\r\n        this.y = centerY;\r\n        this.radius = radius;\r\n        this.sides = sides;\r\n        this.points = this.getPoints();\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, x, y, points } = this;\r\n        let tPoints = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n        this.x = 0;\r\n        this.y = 0;\r\n        points.forEach(point => {\r\n            point.x -= x;\r\n            point.y -= y;\r\n        });\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.points = tPoints;\r\n    }\r\n    setCenter() {\r\n        let { center: { x, y }, radius } = this.getRectInfo();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    getPoints() {\r\n        let points = [],\r\n            radians = this.startRadians || 0;\r\n        for (let i=0; i < this.sides; ++i) {\r\n            points.push(new Point(this.x + this.radius * Math.sin(radians),\r\n                this.y - this.radius * Math.cos(radians)));\r\n            radians += 2*Math.PI/this.sides;\r\n        }\r\n        return points;\r\n    }\r\n    createPolygonPath() {\r\n        let { ctx, points } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[0].x, points[0].y);\r\n        for (let i=1; i < this.sides; ++i) {\r\n            ctx.lineTo(points[i].x, points[i].y);\r\n        }\r\n        ctx.closePath();\r\n    }\r\n    createPath() {\r\n        this.createPolygonPath();\r\n    }\r\n    drawPolygon() {\r\n        let { filled } = this;\r\n        this.createPolygonPath();\r\n        this.drawPath({ filled });\r\n    }\r\n    draw() {\r\n        this.isEditing && this.drawControlPoint();\r\n        this.drawPolygon();\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points, x: centerX, y: centerY } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            x -= centerX;\r\n            y -= centerY;\r\n            let tPoint = this.getTransformPointToScreenPoint({ x, y });\r\n            point.x = tPoint.x;\r\n            point.y = tPoint.y;\r\n        });\r\n    }\r\n}\r\n","export class Protractor {\r\n    constructor({ ctx, shape, loc, rotatingLockRadians }) {\r\n        this.ctx = ctx;\r\n        this.shape = shape;\r\n        this.loc = loc;\r\n        this.rotatingLockRadians = rotatingLockRadians;\r\n\r\n        this.RADIUS = 10;\r\n        this.STROKE_STYLE = 'rgba(0, 0, 0, 0.8)';\r\n        this.FILL_STYLE ='rgba(255, 255, 255, 0.2)';\r\n        this.SHADOW_COLOR = 'rgba(255, 255, 255, 0.4)';\r\n\r\n        this.DEGREE_RING_MARGIN = 35;\r\n        this.TRACKING_RING_MARGIN = 55;\r\n        this.DEGREE_ANNOTATIONS_FILL_STYLE = 'rgba(0, 0, 230, 0.8)';\r\n        this.DEGREE_ANNOTATIONS_TEXT_SIZE = 11;\r\n        this.DEGREE_OUTER_RING_MARGIN = this.DEGREE_RING_MARGIN;\r\n        this.TICK_WIDTH = 10;\r\n        this.TICK_LONG_STROKE_STYLE = 'rgba(100, 140, 230, 0.9)';\r\n        this.TICK_SHORT_STROKE_STYLE = 'rgba(100, 140, 230, 0.7)';\r\n\r\n        this.TRACKING_RING_STROKING_STYLE = 'rgba(100, 140, 230, 0.3)';\r\n    }\r\n    drawCentroid() {  // 量角器圆心\r\n        let { ctx, shape: { x, y }, STROKE_STYLE, FILL_STYLE, SHADOW_COLOR, RADIUS } = this;\r\n        ctx.beginPath();\r\n        ctx.save();\r\n        ctx.strokeStyle = STROKE_STYLE;\r\n        ctx.fillStyle = FILL_STYLE;\r\n        ctx.shadowColor = SHADOW_COLOR;\r\n        ctx.arc(x, y, RADIUS, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n    drawCentroidGuidewire() {  //  导线\r\n        let { loc, shape, ctx, FILL_STYLE, TRACKING_RING_MARGIN, rotatingLockRadians } = this;\r\n        let radians = Math.atan( (loc.y - shape.y) / (loc.x - shape.x) ),\r\n            radius, endpt;\r\n\r\n        radius = shape.radius + TRACKING_RING_MARGIN;\r\n        radians = radians - rotatingLockRadians;\r\n\r\n        if (loc.x >= shape.x) {\r\n            endpt = {\r\n                x: shape.x + radius * Math.cos(radians),\r\n                y: shape.y + radius * Math.sin(radians)\r\n            };\r\n        }\r\n        else {\r\n            endpt = {\r\n                x: shape.x - radius * Math.cos(radians),\r\n                y: shape.y - radius * Math.sin(radians)\r\n            };\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y);\r\n        ctx.lineTo(endpt.x, endpt.y);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(endpt.x, endpt.y, 5, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.fillStyle = FILL_STYLE;\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n    }\r\n    drawDegreeOuterDial() { // 刻度盘外层圆环\r\n        let { ctx, shape, DEGREE_OUTER_RING_MARGIN } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\r\n        // ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y,\r\n            shape.radius + DEGREE_OUTER_RING_MARGIN,\r\n            0, Math.PI*2, true);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    drawDegreeAnnotations() {   // 度数数字\r\n        let { shape, TICK_WIDTH, DEGREE_RING_MARGIN, ctx, DEGREE_ANNOTATIONS_FILL_STYLE, DEGREE_ANNOTATIONS_TEXT_SIZE } = this;\r\n        let radius = shape.radius + DEGREE_RING_MARGIN;\r\n        ctx.save();\r\n        ctx.fillStyle = DEGREE_ANNOTATIONS_FILL_STYLE;\r\n        ctx.font = DEGREE_ANNOTATIONS_TEXT_SIZE + 'px Helvetica';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n\r\n        for (let radians=0; radians < 2*Math.PI; radians += Math.PI/8) {\r\n            ctx.beginPath();\r\n            ctx.fillText((radians * 180 / Math.PI).toFixed(0),\r\n                shape.x + Math.cos(radians) * (radius - TICK_WIDTH*2),\r\n                shape.y + Math.sin(radians) * (radius - TICK_WIDTH*2));\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n    drawDegreeDialTicks() { // 刻度线\r\n        let { shape, DEGREE_RING_MARGIN, ctx, TICK_WIDTH, TICK_LONG_STROKE_STYLE, TICK_SHORT_STROKE_STYLE } = this;\r\n        let radius = shape.radius + DEGREE_RING_MARGIN,\r\n            ANGLE_MAX = 2*Math.PI,\r\n            ANGLE_DELTA = Math.PI/64;\r\n\r\n        ctx.save();\r\n\r\n        for (let radians = 0, cnt = 0; radians < ANGLE_MAX; radians += ANGLE_DELTA, ++cnt) {\r\n            ctx.beginPath();\r\n\r\n            if (cnt % 4 === 0) {\r\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH),\r\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH));\r\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\r\n                    shape.y + Math.sin(radians) * (radius));\r\n                ctx.strokeStyle = TICK_LONG_STROKE_STYLE;\r\n                ctx.stroke();\r\n            }\r\n            else {\r\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH/2),\r\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH/2));\r\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\r\n                    shape.y + Math.sin(radians) * (radius));\r\n                ctx.strokeStyle = TICK_SHORT_STROKE_STYLE;\r\n                ctx.stroke();\r\n            }\r\n\r\n            ctx.restore();\r\n        }\r\n    }\r\n    drawDegreeInnerDial() { //  刻度盘内层圆环\r\n        let { shape, ctx, DEGREE_RING_MARGIN, TICK_WIDTH } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radius + DEGREE_RING_MARGIN - TICK_WIDTH, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    drawOutMostDial() {    //  最外层圆环\r\n        let { shape, ctx, TRACKING_RING_STROKING_STYLE, TRACKING_RING_MARGIN } = this;\r\n        ctx.save();\r\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\r\n        ctx.shadowOffsetX = 3,\r\n            ctx.shadowOffsetY = 3,\r\n            ctx.shadowBlur = 6,\r\n            ctx.strokeStyle = TRACKING_RING_STROKING_STYLE;\r\n        // ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radius +\r\n            TRACKING_RING_MARGIN, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    draw() {\r\n        let { ctx } = this;\r\n        this.drawCentroid();\r\n        this.drawCentroidGuidewire();\r\n        ctx.beginPath();\r\n        this.drawOutMostDial();\r\n        this.drawDegreeOuterDial();\r\n        ctx.fillStyle = 'rgba(100, 140, 230, 0.1)';\r\n        ctx.fill();\r\n\r\n        ctx.beginPath();\r\n        this.drawDegreeOuterDial();\r\n        ctx.stroke();\r\n\r\n        this.drawDegreeDialTicks();\r\n        this.drawDegreeInnerDial();\r\n        this.drawDegreeAnnotations();\r\n    }\r\n}","import { drawGrid } from './appFunc'\r\nexport class Eraser {\r\n    constructor({ type, width, ctx }) {\r\n        this.ctx = ctx;\r\n        this.type = type;\r\n        this.width = width;\r\n        this.ERASER_LINE_WIDTH = 1;\r\n\r\n        this.ERASER_SHADOW_COLOR = 'rgb(0,0,0)';\r\n        this.ERASER_SHADOW_STYLE = 'blue';\r\n        this.ERASER_STROKE_STYLE = 'rgb(0,0,255)';\r\n        this.ERASER_SHADOW_OFFSET = -5;\r\n        this.ERASER_SHADOW_BLUR = 20;\r\n    }\r\n    setDrawPath(loc) {\r\n        let { width, ctx, type } = this;\r\n        let eraserWidth = parseFloat(width);\r\n\r\n        ctx.beginPath();\r\n\r\n        if (type === 'circle') {\r\n            ctx.arc(loc.x, loc.y, eraserWidth/2, 0, Math.PI*2, false);\r\n        }\r\n        else {\r\n            ctx.rect(loc.x - eraserWidth/2,\r\n                loc.y - eraserWidth/2,\r\n                eraserWidth, eraserWidth);\r\n        }\r\n        ctx.clip();\r\n    }\r\n    setErasePath(loc) {\r\n        let { width, ctx, type, ERASER_LINE_WIDTH } = this;\r\n\r\n        ctx.beginPath();\r\n        if (type === 'circle') {\r\n            ctx.arc(loc.x, loc.y, width/2 + ERASER_LINE_WIDTH, 0, Math.PI*2, false);\r\n        }\r\n        else {\r\n            ctx.rect(loc.x - width/2 - ERASER_LINE_WIDTH,\r\n                loc.y - width/2 - ERASER_LINE_WIDTH,\r\n                width + ERASER_LINE_WIDTH*2,\r\n                width + ERASER_LINE_WIDTH*2);\r\n        }\r\n        ctx.clip();\r\n    }\r\n    setEraserAttributes() {\r\n        let { ctx, ERASER_LINE_WIDTH, ERASER_SHADOW_BLUR, ERASER_SHADOW_OFFSET, ERASER_SHADOW_STYLE, ERASER_STROKE_STYLE } = this;\r\n        ctx.lineWidth     = ERASER_LINE_WIDTH;\r\n        ctx.shadowColor   = ERASER_SHADOW_STYLE;\r\n        ctx.shadowOffsetX = ERASER_SHADOW_OFFSET;\r\n        ctx.shadowOffsetY = ERASER_SHADOW_OFFSET;\r\n        ctx.shadowBlur    = ERASER_SHADOW_BLUR;\r\n        ctx.strokeStyle   = ERASER_STROKE_STYLE;\r\n    }\r\n    eraseLast(loc) {\r\n        let { ctx } = this;\r\n        let GRID_HORIZONTAL_SPACING = 10,\r\n            GRID_VERTICAL_SPACING = 10,\r\n            GRID_LINE_COLOR = 'lightblue';\r\n        ctx.save();\r\n\r\n        this.setErasePath(loc);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fill();\r\n        drawGrid({ctx, color: GRID_LINE_COLOR, stepx: GRID_HORIZONTAL_SPACING, stepy: GRID_VERTICAL_SPACING});\r\n\r\n        ctx.restore();\r\n    }\r\n    drawEraser(loc) {\r\n        let { ctx } = this;\r\n        ctx.save();\r\n\r\n        this.setEraserAttributes();\r\n        this.setDrawPath(loc);\r\n        ctx.stroke();\r\n\r\n        ctx.restore();\r\n    }\r\n}","<template>\r\n    <div>\r\n        <canvas\r\n                @mousedown=\"onMouseDown\"\r\n                @mousemove=\"onMouseMove\"\r\n                @mouseup=\"onMouseUp\"\r\n                id=\"canvas\" width='600' height='600'>Canvas not supported</canvas>\r\n        <ul id='controls'>\r\n            <li>\r\n                <label for=\"color\">颜色</label>\r\n                <select id=\"color\" v-model=\"color\">\r\n                    <option value='red'>red</option>\r\n                    <option value='green'>green</option>\r\n                    <option value='blue'>blue</option>\r\n                    <option value='orange'>orange</option>\r\n                    <option value='cornflowerblue' selected>cornflowerblue</option>\r\n                    <option value='goldenrod'>goldenrod</option>\r\n                    <option value='navy'>navy</option>\r\n                    <option value='purple'>purple</option>\r\n                </select>\r\n            </li>\r\n            <li>\r\n                <label for=\"shape\">形状</label>\r\n                <select id=\"shape\" v-model=\"shape\" @change=\"mode='normal'\">\r\n                    <option value='Circle'>circle</option>\r\n                    <option value='Line'>line</option>\r\n                    <option value='RoundedRect'>RoundedRect</option>\r\n                    <option value='Polygon'>Polygon</option>\r\n                    <option value='BezierCurve'>BezierCurve</option>\r\n                </select>\r\n            </li>\r\n            <li v-show=\"shape === 'Polygon'\">\r\n                <label for=\"sides\">边数</label>\r\n                <input type=\"text\" id=\"sides\" v-model=\"sides\">\r\n            </li>\r\n            <li>\r\n                <label for=\"normal-radio\">画图</label>\r\n                <input type=\"radio\" id=\"normal-radio\" v-model=\"mode\" value=\"normal\">\r\n                <label for=\"drag-radio\">拖拽</label>\r\n                <input type=\"radio\" id=\"drag-radio\" v-model=\"mode\" value=\"drag\">\r\n                <label for=\"edit-radio\">编辑</label>\r\n                <input type=\"radio\" id=\"edit-radio\" v-model=\"mode\" value=\"edit\">\r\n                <label for=\"rotate-radio\">旋转</label>\r\n                <input type=\"radio\" id=\"rotate-radio\" v-model=\"mode\" value=\"rotate\">\r\n                <label for=\"eraser-radio\">橡皮擦</label>\r\n                <input type=\"radio\" id=\"eraser-radio\" v-model=\"mode\" value=\"erase\">\r\n                <label for=\"guidewireCheckbox\">导线</label>\r\n                <input id='guidewireCheckbox' v-model=\"guidewires\" type='checkbox' checked/>\r\n                <label for=\"checkbox\">填充:</label>\r\n                <input type=\"checkbox\" id=\"checkbox\" v-model=\"isFillColor\">\r\n                <input @click=\"erase\" id='eraseAllButton' type='button' value='擦除所有'/>\r\n\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n    body {\r\n        background: #eeeeee;\r\n    }\r\n    #controls {\r\n        position: absolute;\r\n        left: -25px;\r\n        top: 0;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        list-style: none;\r\n        align-items: center;\r\n        li {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n    #canvas {\r\n        background: #ffffff;\r\n        cursor: pointer;\r\n        margin-left: 10px;\r\n        margin-top: 10px;\r\n        -webkit-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\r\n        -moz-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import { copyObj, drawGuidewires, drawGrid, windowToCanvas, saveDrawingSurface, restoreDrawingSurface } from \"./appFunc\";\r\n    import { Circle, RoundRect, Polygon, Line, BezierCurve } from \"./shape\";\r\n    import { Protractor } from './Protractor'\r\n    import { Eraser } from './Eraser'\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                eraserWidth: 25,\r\n                eraserType: 'circle',\r\n                shapes: [],\r\n                sides: 3,\r\n                startRadians: 0,\r\n                shape: 'Line',\r\n                isFillColor: false,\r\n                ctx: null,\r\n                canvas: null,\r\n                guidewires: true,\r\n                color: 'cornflowerblue',\r\n                rubberbandLine: {\r\n                    drawingSurfaceImageData: null,\r\n                    mousedown: {},  // x,y\r\n                    rubberbandRect: {}, // width, height, left, top\r\n                    dragging: false,\r\n                },\r\n                mode: 'normal',\r\n                selectedShape: null,\r\n                draggingPoint: false, // End- or control point user is dragging\r\n                rotatingLockEngaged: false,\r\n                rotatingLockRadians: 0,\r\n                rotatingShape: null,\r\n                protractor: null,\r\n                eraser: null\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getContext();\r\n            this.setCanvasSize();\r\n            this.drawRubberbandLines();\r\n            window.shapes = this.shapes;\r\n        },\r\n        watch: {\r\n            mode() {\r\n                let { canvas, mode } = this;\r\n                switch (mode) {\r\n                    case 'drag':\r\n                    case 'edit':\r\n                    case 'rotate':\r\n                    case 'erase':\r\n                        canvas.style.cursor = 'pointer';\r\n                        break;\r\n                    case 'normal':\r\n                        canvas.style.cursor = 'crosshair';\r\n                        break;\r\n                }\r\n                this.inactiveEditing();\r\n                this.redraw();\r\n            }\r\n        },\r\n        methods: {\r\n            setCanvasSize() {\r\n                let { canvas } = this;\r\n                canvas.width = window.innerWidth;\r\n                canvas.height = window.innerHeight;\r\n            },\r\n            stopRotatingShape(loc) {\r\n                let { selectedShape, rotatingLockRadians } = this;\r\n                let radians = Math.atan((loc.y - selectedShape.y) /\r\n                    (loc.x - selectedShape.x))\r\n                    - rotatingLockRadians;\r\n                selectedShape.startRadians += radians;\r\n                selectedShape.isRotated = true;\r\n                selectedShape.updatePointAfterRotated();\r\n                this.rotatingShape = undefined;\r\n                this.rotatingLockEngaged = false;\r\n                this.rotatingLockRadians = 0;\r\n                this.redraw();\r\n            },\r\n            saveCanvasInfo(loc) {\r\n                let { rubberbandLine: { mousedown }, rubberbandLine, ctx, canvas } = this;\r\n                rubberbandLine.drawingSurfaceImageData = saveDrawingSurface({ ctx, canvas });\r\n                mousedown.x = loc.x;\r\n                mousedown.y = loc.y;\r\n                rubberbandLine.dragging = true;\r\n            },\r\n            drawShapes() {\r\n                let { shapes } = this;\r\n                shapes.forEach( shape => {\r\n                    shape.draw();\r\n                });\r\n            },\r\n            drawBezierCurve() {\r\n                let { endPoints, controlPoints } = this.getEndAndControlPoints();\r\n                let { ctx, shapes, rubberbandLine: { dragging }, color } = this;\r\n                let curve = new BezierCurve({ ctx, strokeStyle: color, fillStyle: color, endPoints, controlPoints });\r\n                curve.draw();\r\n                if (!dragging) shapes.push(curve);\r\n            },\r\n            getEndAndControlPoints() {\r\n                let endPoints = [ {}, {} ], // Endpoint locations (x, y)\r\n                    controlPoints =  [ {}, {} ]; // Control point locations (x, y)\r\n                let { rubberbandLine: { rubberbandRect } } = this;\r\n                let { left, top, width, height } = rubberbandRect;\r\n                endPoints[0].x = left;\r\n                endPoints[0].y = top;\r\n                endPoints[1].x = left + width;\r\n                endPoints[1].y = top + height;\r\n                controlPoints[0].x = left;\r\n                controlPoints[0].y = top + height;\r\n                controlPoints[1].x = left + width;\r\n                controlPoints[1].y = top;\r\n                return {\r\n                    endPoints,\r\n                    controlPoints\r\n                }\r\n            },\r\n            drawPolygon() {\r\n                let {\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: {\r\n                            width\r\n                        },\r\n                        mousedown: {\r\n                            x,\r\n                            y\r\n                        }\r\n                    },\r\n                    ctx,\r\n                    sides,\r\n                    startRadians,\r\n                    isFillColor,\r\n                    color,\r\n                    shapes\r\n                } = this;\r\n                let polygon = new Polygon({\r\n                    centerX: x,\r\n                    centerY: y,\r\n                    radius: width,\r\n                    sides,\r\n                    startRadians,\r\n                    strokeStyle: color,\r\n                    fillStyle: color,\r\n                    filled: isFillColor,\r\n                    ctx\r\n                });\r\n                polygon.draw();\r\n                if (!dragging) shapes.push(polygon);\r\n            },\r\n            getContext() {\r\n                this.canvas = document.getElementById('canvas');\r\n                this.ctx = this.canvas.getContext('2d');\r\n            },\r\n            erase() {\r\n                let { ctx, canvas } = this;\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n                saveDrawingSurface({ ctx, canvas });\r\n            },\r\n            drawRubberbandLines() {\r\n                let { ctx, color } = this;\r\n                ctx.strokeStyle = color;\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n            },\r\n            updateRubberbandRect({ loc }) {\r\n                let {\r\n                    rubberbandLine: {\r\n                        rubberbandRect,\r\n                        mousedown\r\n                    },\r\n                } = this;\r\n                rubberbandRect.width = Math.abs(loc.x - mousedown.x);\r\n                rubberbandRect.height = Math.abs(loc.y - mousedown.y);\r\n                if (loc.x > mousedown.x) rubberbandRect.left = mousedown.x;\r\n                else rubberbandRect.left = loc.x;\r\n                if (loc.y > mousedown.y) rubberbandRect.top = mousedown.y;\r\n                else rubberbandRect.top = loc.y;\r\n            },\r\n            drawRubberbandShape({ loc }) {\r\n                let { shape } = this;\r\n                this[`draw${ shape }`]({ loc });\r\n            },\r\n            drawRoundedRect({ cornerRadius = 10 } = {}) {\r\n                let {\r\n                    ctx,\r\n                    color,\r\n                    isFillColor,\r\n                    shapes,\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: { width, height },\r\n                        mousedown: { x: cornerX, y: cornerY }\r\n                    },\r\n                } = this;\r\n                let roundRect = new RoundRect({\r\n                    ctx,\r\n                    filled: isFillColor,\r\n                    strokeStyle: color,\r\n                    fillStyle: color,\r\n                    width,\r\n                    height,\r\n                    cornerX,\r\n                    cornerY,\r\n                    cornerRadius\r\n                });\r\n                roundRect.draw();\r\n                if (!dragging) shapes.push(roundRect);\r\n            },\r\n            drawCircle({ loc }) {\r\n                let {\r\n                    ctx,\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: { width, height },\r\n                        mousedown: {\r\n                            x,\r\n                            y\r\n                        }\r\n                    },\r\n                    color,\r\n                    isFillColor,\r\n                    shapes\r\n                } = this;\r\n                let radius;\r\n                if (y === loc.y) {\r\n                    radius = Math.abs(loc.x - x);\r\n                } else {\r\n                    radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n                }\r\n                let circle = new Circle({ centerX: x, centerY: y, radius, ctx, filled: isFillColor, strokeStyle: color, fillStyle: color });\r\n                circle.draw();\r\n                if (!dragging) shapes.push(circle);\r\n            },\r\n            drawLine({ loc }) {\r\n                let {\r\n                    ctx,\r\n                    rubberbandLine: {\r\n                        mousedown: {\r\n                            x: beginX,\r\n                            y: beginY\r\n                        },\r\n                        dragging\r\n                    },\r\n                    color,\r\n                    shapes\r\n                } = this;\r\n                let { x: endX, y: endY } = loc;\r\n                let line = new Line({ ctx, strokeStyle: color, fillStyle: color, beginX, beginY, endX, endY, filled: false });\r\n                line.draw();\r\n                if (!dragging) shapes.push(line);\r\n            },\r\n            updateRubberband({ loc }) {\r\n                this.updateRubberbandRect({ loc });\r\n                this.drawRubberbandShape({ loc });\r\n            },\r\n            inactiveEditing() {\r\n                let { shapes } = this;\r\n                shapes.forEach( shape => {\r\n                    shape.isEditing = false;\r\n                });\r\n            },\r\n            activeEditing({ shape }) {\r\n                this.inactiveEditing();\r\n                shape.isEditing = true;\r\n            },\r\n            getSelectedShape({ loc }) {\r\n                let { shapes, ctx, mode } = this;\r\n                for (let shape of shapes) {\r\n                    let draggingPoint = shape.getDraggingPoint(loc);\r\n                    shape.createPath();\r\n                    if (ctx.isPointInPath(loc.x, loc.y) || (mode === 'edit' && draggingPoint)) {\r\n                        this.selectedShape = shape;\r\n                        switch (mode) {\r\n                            case 'edit':\r\n                                this.activeEditing({ shape });\r\n                                this.redraw();\r\n                                shape.savePointOffset(loc);\r\n                                break;\r\n                            case 'drag':\r\n                                shape.savePointOffset(loc);\r\n                                break;\r\n                            case 'rotate':\r\n                                this.rotatingShape = copyObj({ obj: shape, exclusiveKey: ['ctx'] });\r\n                                break;\r\n                        }\r\n                        break;\r\n                    } else {\r\n                        this.selectedShape = null;\r\n                        if (mode === 'edit') {\r\n                            this.inactiveEditing();\r\n                            this.redraw();\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            initProtractor(loc) {\r\n                let { ctx, rotatingLockRadians, rotatingLockEngaged } = this;\r\n                let { rotatingShape } = this;\r\n                if (this.rotatingShape) {\r\n                    let protractor = new Protractor({ ctx, shape: rotatingShape, loc, rotatingLockRadians });\r\n                    protractor.draw();\r\n\r\n                    if (!rotatingLockEngaged) {\r\n                        this.rotatingLockEngaged = true;\r\n                        this.rotatingLockRadians = Math.atan((loc.y - rotatingShape.y) /\r\n                            (loc.x - rotatingShape.x));\r\n                    }\r\n                    this.protractor = protractor;\r\n                }\r\n            },\r\n            rotateShape(loc) {\r\n                let { rotatingLockEngaged, rotatingLockRadians, protractor } = this;\r\n                let {rotatingShape } = this;\r\n                if (rotatingLockEngaged) {\r\n                    let y = loc.y - rotatingShape.y;\r\n                    let x = loc.x - rotatingShape.x;\r\n                    let radians = Math.atan( y / x) - rotatingLockRadians;\r\n                    if (x < 0 && y > 0 || x < 0 && y <= 0) {\r\n                        radians = Math.PI + radians;\r\n                    }\r\n                    this.redraw();\r\n                    rotatingShape.rotate(radians);\r\n                    protractor.loc = loc;\r\n                    protractor.draw();\r\n\r\n                }\r\n            },\r\n            onMouseDown(e) {\r\n                let {\r\n                    canvas,\r\n                    mode,\r\n                    rotatingShape,\r\n                    ctx,\r\n                    eraser\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                e.preventDefault(); // Prevent cursor change\r\n                this.saveCanvasInfo(loc);\r\n                switch (mode) {\r\n                    case 'drag':\r\n                        this.getSelectedShape({ loc });\r\n                        break;\r\n                    case 'edit':\r\n                        this.getSelectedShape({ loc });\r\n                        break;\r\n                    case 'rotate':\r\n                        if (rotatingShape) {\r\n                            this.stopRotatingShape(loc);\r\n                        } else {\r\n                            this.getSelectedShape({ loc });\r\n                            this.initProtractor(loc);\r\n                        }\r\n                        break;\r\n                    case 'erase':\r\n                        if (!eraser) {\r\n                            let { eraserType, eraserWidth } = this;\r\n                            this.eraser = new Eraser({ ctx, type: eraserType, width: eraserWidth });\r\n                        }\r\n                        break;\r\n                }\r\n                if (mode !== 'edit' && this.existEditingShap()) {\r\n                    this.inactiveEditing();\r\n                    this.redraw();\r\n                }\r\n            },\r\n            existEditingShap() {\r\n                let { shapes } = this;\r\n                return shapes.some(shape => shape.isEditing);\r\n            },\r\n            onMouseMove(e) {\r\n                let {\r\n                    canvas,\r\n                    ctx,\r\n                    guidewires,\r\n                    shape,\r\n                    rubberbandLine: {\r\n                        mousedown,\r\n                        dragging,\r\n                        drawingSurfaceImageData\r\n                    },\r\n                    mode,\r\n                    selectedShape,\r\n                    rotatingShape,\r\n                    eraser\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                e.preventDefault(); // Prevent selections\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                if (dragging) {\r\n                    switch (mode) {\r\n                        case 'drag':\r\n                            selectedShape && selectedShape.updatePointsOnMoving(loc);\r\n                            break;\r\n                        case 'edit':\r\n                            selectedShape && selectedShape.draggingPoint && selectedShape.updatePointOnEditing(loc);\r\n                            break;\r\n                        case 'erase':\r\n                            eraser.eraseLast({ x: mousedown.x, y: mousedown.y });\r\n                            eraser.drawEraser(loc);\r\n                            this.rubberbandLine.mousedown = loc;\r\n                            break;\r\n                        case 'normal':\r\n                            restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\r\n                            this.updateRubberband({ loc });\r\n                            if(guidewires) {\r\n                                let pos = shape === 'Line' ? loc : mousedown;\r\n                                drawGuidewires({ ctx, x: pos.x, y: pos.y });\r\n                            }\r\n                            break;\r\n                    }\r\n                    if (mode === 'drag' || mode === 'edit') {\r\n                        this.redraw();\r\n                    }\r\n                }\r\n                if (mode === 'rotate') {\r\n                    rotatingShape && this.rotateShape(loc);\r\n                }\r\n            },\r\n            onMouseUp(e) {\r\n                let {\r\n                    ctx,\r\n                    canvas,\r\n                    rubberbandLine,\r\n                    rubberbandLine: {\r\n                        drawingSurfaceImageData,\r\n                        mousedown\r\n                    },\r\n                    mode,\r\n                    eraser,\r\n                    selectedShape\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                rubberbandLine.dragging = false;\r\n                switch (mode) {\r\n                    case 'normal':\r\n                        restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\r\n                        this.updateRubberband({ loc });\r\n                        break;\r\n                    case 'erase':\r\n                        eraser.eraseLast(mousedown);\r\n                        break;\r\n                    case 'edit':\r\n                    case 'drag':\r\n                        if (selectedShape) {\r\n                            let { type } = selectedShape;\r\n                            switch (type) {\r\n                                case 'BezierCurve':\r\n                                    selectedShape.setCenter();\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            },\r\n            redraw() {\r\n                let { ctx, canvas } = this;\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n                this.drawShapes();\r\n            }\r\n        },\r\n    }\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=fcb2d3bc&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=fcb2d3bc&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fcb2d3bc\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":\"screen\",\"width\":\"640\",\"height\":\"640\"}},[_vm._v(\"canvas not supported\")])])}]\n\nexport { render, staticRenderFns }","export class Compositor {\r\n    constructor() {\r\n        this.layers = [];\r\n    }\r\n    draw(ctx, camera) {\r\n        this.layers.forEach(layer => {\r\n            layer(ctx, camera);\r\n        })\r\n    }\r\n}","export class Matrix {\r\n    constructor() {\r\n        this.grid = [];\r\n    }\r\n\r\n    forEach(callback) {\r\n        this.grid.forEach((column, x) => {\r\n           column.forEach((value, y) => {\r\n              callback(value, x, y);\r\n           });\r\n        });\r\n    }\r\n\r\n    get(x, y) {\r\n        const col = this.grid[x];\r\n        if (col) {\r\n            return col[y];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    set(x, y, value) {\r\n        if (!this.grid[x]) {\r\n            this.grid[x] = [];\r\n        }\r\n\r\n        this.grid[x][y] = value;\r\n    }\r\n}\r\nexport class Vec2 {\r\n    constructor(x, y) {\r\n        this.set(x, y);\r\n    }\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","export default class TileResolver {\r\n    constructor(matrix, tileSize = 16) {\r\n        this.matrix = matrix;\r\n        this.tileSize = tileSize;\r\n    }\r\n\r\n    toIndex(pos) {\r\n        return Math.floor(pos / this.tileSize);\r\n    }\r\n\r\n    toIndexRange(pos1, pos2) {\r\n        const pMax = Math.ceil(pos2 / this.tileSize) * this.tileSize;\r\n        const range = [];\r\n        let pos = pos1;\r\n        do {\r\n            range.push(this.toIndex(pos));\r\n            pos += this.tileSize;\r\n        } while (pos < pMax);\r\n        return range;\r\n    }\r\n\r\n    getByIndex(indexX, indexY) {\r\n        const tile = this.matrix.get(indexX, indexY);\r\n        if (tile) {\r\n            const x1 = indexX * this.tileSize;\r\n            const x2 = x1 + this.tileSize;\r\n            const y1 = indexY * this.tileSize;\r\n            const y2 = y1 + this.tileSize;\r\n            return {\r\n                tile,\r\n                x1,\r\n                x2,\r\n                y1,\r\n                y2\r\n            }\r\n        }\r\n    }\r\n\r\n    searchByPosition(posX, posY) {\r\n        return this.getByIndex(\r\n            this.toIndex(posX),\r\n            this.toIndex(posY)\r\n        )\r\n    }\r\n\r\n    searchByRange(x1, x2, y1, y2) {\r\n        const matches = [];\r\n        this.toIndexRange(x1, x2).forEach(indexX => {\r\n            this.toIndexRange(y1, y2).forEach(indexY => {\r\n                const match = this.getByIndex(indexX, indexY);\r\n                if (match) {\r\n                    matches.push(match);\r\n                }\r\n            });\r\n        });\r\n        return matches;\r\n    }\r\n\r\n}\r\n","import { Vec2 } from \"./math\";\r\n\r\nexport const Sides = {\r\n    TOP: Symbol('top'),\r\n    BOTTOM: Symbol('bottom')\r\n};\r\n\r\nexport class Trait {\r\n    constructor(name) {\r\n        this.NAME = name;\r\n    }\r\n\r\n    obstruct() {\r\n\r\n    }\r\n\r\n    update() {\r\n        console.warn('Unhandled call');\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    constructor() {\r\n        this.pos = new Vec2(0, 0);\r\n        this.vel = new Vec2(0, 0);\r\n        this.size = new Vec2(0, 0);\r\n        this.traits = [];\r\n    }\r\n\r\n    obstruct(side) {\r\n        this.traits.forEach(trait => {\r\n            trait.obstruct(this, side);\r\n        })\r\n    }\r\n\r\n    addTrait(trait) {\r\n        this.traits.push(trait);\r\n        this[trait.NAME] = trait;\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.traits.forEach(trait => {\r\n            trait.update(this, deltaTime);\r\n        })\r\n    }\r\n}","import TileResolver from './TileResolver'\r\nimport { Sides } from \"./Entity\";\r\n\r\nexport default class TileCollider {\r\n    constructor(tileMatrix) {\r\n        this.tiles = new TileResolver(tileMatrix);\r\n    }\r\n\r\n    check(entity, dir) {\r\n        let x, y, matches;\r\n        if (dir === 'x') {\r\n            if (entity.vel.x > 0) {\r\n                x = entity.pos.x + entity.size.x;\r\n            } else if (entity.vel.x < 0) {\r\n                x = entity.pos.x\r\n            } else {\r\n                return;\r\n            }\r\n            matches = this.tiles.searchByRange(\r\n                x, x,\r\n                entity.pos.y, entity.pos.y + entity.size.y\r\n            );\r\n        } else if (dir === 'y') {\r\n            if (entity.vel.y > 0) {\r\n                y = entity.pos.y + entity.size.y;\r\n            } else if (entity.vel.y < 0) {\r\n                y = entity.pos.y\r\n            } else {\r\n                return;\r\n            }\r\n            matches = this.tiles.searchByRange(\r\n                entity.pos.x, entity.pos.x + entity.size.x,\r\n                y, y\r\n            );\r\n        }\r\n\r\n        matches.forEach(match => {\r\n            if (match.tile.type !== 'ground') return;\r\n\r\n            if (entity.vel[dir] > 0) {\r\n                if (entity.pos[dir] + entity.size[dir] > match[`${dir}1`]) {\r\n                    entity.pos[dir] = match[`${dir}1`] - entity.size[dir];\r\n                    entity.vel[dir] = 0;\r\n\r\n                    entity.obstruct(Sides.BOTTOM);\r\n                }\r\n            } else if (entity.vel[dir] < 0) {\r\n                if (entity.pos[dir] < match[`${dir}2`]) {\r\n                    entity.pos[dir] = match[`${dir}2`];\r\n                    entity.vel[dir] = 0;\r\n                    entity.obstruct(Sides.TOP);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    test(entity) {\r\n        this.check(entity, 'y');\r\n        this.check(entity, 'x');\r\n/*        const match = this.tiles.searchByPosition(entity.pos.x, entity.pos.y);\r\n        if (match) {\r\n            console.log('Matched tile', match, match.tile);\r\n        }*/\r\n    }\r\n}","import { Compositor } from './Compositor'\r\nimport { Matrix } from \"./math\";\r\nimport TileCollider from './TileCollider'\r\n\r\nexport default class Level {\r\n    constructor() {\r\n        this.comp = new Compositor();\r\n        this.entities = new Set();\r\n        this.tiles = new Matrix();\r\n        this.gravity = 2000;\r\n        this.totalTime = 0;\r\n\r\n        this.tileCollider = new TileCollider(this.tiles);\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.entities.forEach(entity => {\r\n            entity.update(deltaTime);\r\n\r\n            entity.pos.x += entity.vel.x * deltaTime;\r\n            this.tileCollider.check(entity, 'x');\r\n            entity.pos.y += entity.vel.y * deltaTime;\r\n            this.tileCollider.check(entity, 'y');\r\n            entity.vel.y += this.gravity * deltaTime;\r\n        });\r\n\r\n        this.totalTime += deltaTime;\r\n    }\r\n}","export  function createBackgroundLayer(level, sprites) {\r\n    const tiles = level.tiles;\r\n    const resolver = level.tileCollider.tiles;\r\n    const buffer = document.createElement('canvas');\r\n    const ctx = buffer.getContext('2d');\r\n    buffer.width = 256 + 16;\r\n    buffer.height = 240;\r\n\r\n    let startIndex, endIndex;\r\n    function redraw(drawFrom, drawTo) {\r\n/*        if (drawFrom === startIndex && drawTo === endIndex) {\r\n            return;\r\n        }*/\r\n        startIndex = drawFrom;\r\n        endIndex = drawTo;\r\n        for (let x = startIndex; x < endIndex; ++x) {\r\n            const col = tiles.grid[x];\r\n            if (col) {\r\n                col.forEach((tile, y) => {\r\n                    if (sprites.animations.has(tile.name)) {\r\n                        sprites.drawAnim(tile.name, ctx, x - startIndex, y, level.totalTime);\r\n                    } else {\r\n                        sprites.drawTile(tile.name, ctx, x - startIndex, y);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return function drawBackgroundLayer(ctx, camera) {\r\n        const drawWidth = resolver.toIndex(camera.size.x);\r\n        const drawFrom = resolver.toIndex(camera.pos.x);\r\n        const drawTo = drawFrom + drawWidth;\r\n        redraw(drawFrom, drawTo);\r\n\r\n        ctx.drawImage(buffer, -camera.pos.x % 16, camera.pos.y);\r\n    }\r\n}\r\n\r\nexport function createSpriteLayer(entities, width=16, height=16) {\r\n    const spriteBuffer = document.createElement('canvas');\r\n    spriteBuffer.width = width;\r\n    spriteBuffer.height = height;\r\n    const spriteBufferContext = spriteBuffer.getContext('2d');\r\n    return function drawSpriteLayer(ctx, camera) {\r\n        entities.forEach(entity => {\r\n            spriteBufferContext.clearRect(0, 0, width, height);\r\n            entity.draw(spriteBufferContext);\r\n\r\n            ctx.drawImage(\r\n                spriteBuffer,\r\n                entity.pos.x - camera.pos.x,\r\n                entity.pos.y - camera.pos.y\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport function createCollisionLayer(level) {\r\n    const resolvedTiles = [];\r\n    const tileResolver = level.tileCollider.tiles;\r\n    const tileSize = tileResolver.tileSize;\r\n\r\n    const getByIndexOriginal = tileResolver.getByIndex;\r\n    tileResolver.getByIndex = function getByIndexFake(x, y) {\r\n        resolvedTiles.push({ x, y });\r\n        return getByIndexOriginal.call(tileResolver, x, y);\r\n    }\r\n\r\n    return function drawCollision(ctx, camera) {\r\n        ctx.strokeStyle = 'blue';\r\n        resolvedTiles.forEach(({ x, y }) => {\r\n            ctx.beginPath();\r\n            ctx.rect(\r\n                x * tileSize - camera.pos.x,\r\n                y * tileSize - camera.pos.y,\r\n                tileSize,\r\n                tileSize);\r\n            ctx.stroke();\r\n        });\r\n\r\n\r\n        ctx.strokeStyle = 'red';\r\n        level.entities.forEach(entity => {\r\n            let { pos: { x, y }, size } = entity;\r\n            ctx.beginPath();\r\n            ctx.rect(\r\n                x - camera.pos.x,\r\n                y - camera.pos.y,\r\n                size.x,\r\n                size.y);\r\n            ctx.stroke();\r\n        });\r\n\r\n        resolvedTiles.length = 0;\r\n    }\r\n}\r\n\r\nexport function createCameraLayer(cameraToDraw) {\r\n    return function drawCameraRect(ctx, fromCamera) {\r\n        let { size } = cameraToDraw;\r\n        ctx.strokeStyle = 'purple';\r\n        ctx.beginPath();\r\n        ctx.rect(\r\n            cameraToDraw.pos.x - fromCamera.pos.x,\r\n            cameraToDraw.pos.y - fromCamera.pos.y,\r\n            size.x,\r\n            size.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\n","export class SpriteSheet {\r\n    constructor(image, width, height) {\r\n        this.image = image;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.tiles = new Map();\r\n        this.animations = new Map();\r\n    }\r\n\r\n    defineAnim(name, animation) {\r\n        this.animations.set(name, animation);\r\n    }\r\n\r\n    define(name, x, y, width, height) {\r\n        const buffers = [false, true].map(flip => {\r\n            let { image } = this;\r\n            const buffer = document.createElement('canvas');\r\n            buffer.width = width;\r\n            buffer.height = height;\r\n            const ctx = buffer.getContext('2d');\r\n            if (flip) {\r\n                ctx.scale(-1, 1);\r\n                ctx.translate(-width, 0);\r\n            }\r\n            ctx.drawImage(\r\n                image,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                0,\r\n                0,\r\n                width,\r\n                height\r\n            );\r\n            return buffer;\r\n        });\r\n        this.tiles.set(name, buffers);\r\n    }\r\n    defineTile(name, x, y) {\r\n        let { width, height } = this;\r\n        this.define(name, x * width, y * height, width, height);\r\n\r\n    }\r\n    draw(name, ctx, x, y, flip = false) {\r\n        const buffer = this.tiles.get(name)[Number(flip)];\r\n        ctx.drawImage(buffer, x, y);\r\n    }\r\n\r\n    drawAnim(name, ctx, x, y, distance) {\r\n        const animation = this.animations.get(name);\r\n        this.drawTile(animation(distance), ctx, x, y);\r\n    }\r\n\r\n    drawTile(name, ctx, x, y) {\r\n        let { width, height } = this;\r\n        this.draw(name, ctx, x * width, y * height);\r\n    }\r\n}","export function createAnim(frames, frameLen) {\r\n    return function resolveFrame(distance) {\r\n        const frameIndex = Math.floor(distance / frameLen) % frames.length;\r\n        const frameName = frames[frameIndex];\r\n        return frameName;\r\n    }\r\n}\r\n","import Level from './Class/Level'\r\nimport { createBackgroundLayer, createSpriteLayer } from \"./layers\";\r\nimport {SpriteSheet} from \"./Class/SpriteSheet\";\r\nimport {createAnim} from \"./anim\";\r\n\r\nexport function loadImage(src) {\r\n    return new Promise(resolve => {\r\n        let image = new Image();\r\n        image.src = src;\r\n        image.onload = () => {\r\n            resolve(image);\r\n        }\r\n    });\r\n}\r\n\r\nfunction createTiles(level, backgrounds) {\r\n    function applyRange(background, xStart, xLen, yStart, yLen) {\r\n        const xEnd = xStart + xLen;\r\n        const yEnd = yStart + yLen;\r\n\r\n        for(let x=xStart; x<xEnd; ++x) {\r\n            for (let y=yStart; y<yEnd; ++y) {\r\n                level.tiles.set(x, y, {\r\n                    name: background.tile,\r\n                    type: background.type\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    backgrounds.forEach(background => {\r\n        background.ranges.forEach(range => {\r\n            if (range.length === 4) {\r\n                const [xStart, xLen, yStart, yLen] = range;\r\n                applyRange(background, xStart, xLen, yStart, yLen)\r\n            } else if (range.length === 3){\r\n                const [xStart, xLen, yStart] = range;\r\n                applyRange(background, xStart, xLen, yStart, 1);\r\n            } else if (range.length === 2) {\r\n                const [xStart, yStart] = range;\r\n                applyRange(background, xStart, 1, yStart, 1);\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nasync function loadJson(url) {\r\n    return new Promise(resolve => {\r\n        fetch(url).then(r => {\r\n            resolve(r.json());\r\n        });\r\n    });\r\n}\r\n\r\nexport async function loadSpriteSheet(name) {\r\n    let sheetSpec = await loadJson(`sprites/${name}.json`)\r\n    let image = await loadImage(sheetSpec.imageUrl);\r\n    const sprites = new SpriteSheet(\r\n        image,\r\n        sheetSpec.tileW,\r\n        sheetSpec.tileH,\r\n    );\r\n\r\n    if (sheetSpec.tiles) {\r\n        sheetSpec.tiles.forEach(tileSpec => {\r\n            sprites.defineTile(\r\n                tileSpec.name,\r\n                tileSpec.index[0],\r\n                tileSpec.index[1]\r\n            )\r\n        });\r\n    }\r\n\r\n    if (sheetSpec.frames) {\r\n        sheetSpec.frames.forEach(frameSpec => {\r\n            sprites.define(frameSpec.name, ...frameSpec.rect);\r\n        });\r\n    }\r\n\r\n    if (sheetSpec.animations) {\r\n        sheetSpec.animations.forEach(animSpec => {\r\n            const animation = createAnim(animSpec.frames, animSpec.frameLen)\r\n            sprites.defineAnim(animSpec.name, animation);\r\n        });\r\n    }\r\n    return sprites;\r\n}\r\n\r\nexport async function loadLevel(name, ctx) {\r\n    let levelSpec = await loadJson(`levels/${name}.json`)\r\n    const level = new Level();\r\n    createTiles(level, levelSpec.backgrounds);\r\n    let backgroundSprite = await loadSpriteSheet(levelSpec.spriteSheet);\r\n    const backgroundLayer = createBackgroundLayer(level, backgroundSprite);\r\n    level.comp.layers.push(backgroundLayer);\r\n    const spriteLayer = createSpriteLayer(level.entities);\r\n    level.comp.layers.push(spriteLayer);\r\n    return level;\r\n}\r\n","export default class Timer {\r\n    constructor(deltaTime = 1/60) {\r\n        let accumulatedTime = 0;\r\n        let lastTime = 0;\r\n        this.updateProxy = time => {\r\n            accumulatedTime += (time - lastTime) / 3000;\r\n            if (accumulatedTime > 1) {\r\n                accumulatedTime = 1;\r\n            }\r\n            while (accumulatedTime > deltaTime) {\r\n                this.update(deltaTime);\r\n                accumulatedTime -= deltaTime;\r\n            }\r\n            lastTime = time;\r\n            this.enqueue();\r\n        }\r\n    }\r\n    enqueue() {\r\n        requestAnimationFrame(this.updateProxy);\r\n        // setTimeout(this.updateProxy, 1000/5000, performance.now());\r\n    }\r\n    start() {\r\n        this.enqueue();\r\n    }\r\n}","import { Trait, Sides } from \"../Class/Entity\";\r\n\r\nexport default class Jump extends Trait{\r\n    constructor() {\r\n        super('jump');\r\n\r\n        this.ready = 0;\r\n        this.duration = 0.1;\r\n        this.velocity = 400;\r\n        this.engageTime = 0;\r\n        this.speedBoost = 0.3;\r\n        // grace time\r\n        this.requestTime = 0;\r\n        this.gracePeriod = 0.5;\r\n    }\r\n\r\n    get falling() {\r\n        return this.ready < 0;\r\n    }\r\n\r\n    start() {\r\n        this.requestTime = this.gracePeriod;\r\n    }\r\n\r\n    cancel() {\r\n        this.engageTime = 0;\r\n        this.requestTime = 0;\r\n    }\r\n\r\n    obstruct(entity, side) {\r\n        if (side === Sides.BOTTOM) {\r\n            this.ready = 1;\r\n        } if (side === Sides.TOP) {\r\n            this.cancel();\r\n        }\r\n    }\r\n\r\n    update(entity, deltaTime) {\r\n        if (this.requestTime > 0) {\r\n            if (this.ready > 0) {\r\n                this.engageTime = this.duration;\r\n                this.requestTime = 0;\r\n            }\r\n            this.requestTime -= deltaTime;\r\n        }\r\n        if (this.engageTime > 0) {\r\n            entity.vel.y = -(this.velocity + Math.abs(entity.vel.x) * this.speedBoost);\r\n            this.engageTime -= deltaTime;\r\n        }\r\n        this.ready--;\r\n    }\r\n}\r\n","import { Trait } from \"../Class/Entity\";\r\n\r\nexport default class Go extends Trait{\r\n    constructor() {\r\n        super('go');\r\n\r\n        this.dir = 0;\r\n        this.acceleration = 800;\r\n        this.deceleration = 300;\r\n        this.dragFactor = 1/5000;\r\n        this.distance = 0;\r\n        this.heading = 1;\r\n    }\r\n\r\n    update(entity, deltaTime) {\r\n        const absX = Math.abs(entity.vel.x);\r\n        if (this.dir !== 0) {\r\n            entity.vel.x += this.acceleration * this.dir * deltaTime;\r\n            if (entity.jump) {\r\n                if (entity.jump.falling === false) {\r\n                    this.heading = this.dir;\r\n                }\r\n            } else {\r\n                this.heading = this.dir;\r\n            }\r\n        } else if (entity.vel.x !== 0) {\r\n            const decel = Math.min(absX, this.deceleration * deltaTime);\r\n            entity.vel.x += entity.vel.x > 0 ? -decel : decel;\r\n        } else {\r\n            this.distance = 0;\r\n        }\r\n        const drag = this.dragFactor * entity.vel.x * absX;\r\n        entity.vel.x -= drag;\r\n        this.distance += absX * deltaTime;\r\n    }\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport { loadSpriteSheet } from \"../loaders\";\r\nimport Jump from '../traits/Jump'\r\nimport Go from '../traits/Go'\r\nimport { createAnim } from \"../anim\";\r\n\r\nexport async function createMario() {\r\n    let marioSprite = await loadSpriteSheet('mario');\r\n    const mario = new Entity();\r\n    const SLOW_DRAG = 1/2000;\r\n    const FAST_DRAG = 1/5000;\r\n    mario.size.set(16, 16);\r\n\r\n    mario.addTrait(new Go());\r\n    mario.addTrait(new Jump());\r\n\r\n    mario.go.dragFactor = SLOW_DRAG;\r\n\r\n    const runAnim = createAnim(['run-1', 'run-2', 'run-3'], 8);\r\n    function routeFrame(mario) {\r\n        if (mario.jump.falling) {\r\n            return 'jump';\r\n        }\r\n\r\n        if (mario.go.distance > 0) {\r\n            if (mario.vel.x > 0 && mario.go.dir < 0 || mario.vel.x < 0 && mario.go.dir > 0) {\r\n                return 'break';\r\n            }\r\n            return runAnim(mario.go.distance);\r\n        }\r\n        return 'idle';\r\n    }\r\n    mario.draw = function drawMario(ctx) {\r\n        marioSprite.draw(routeFrame(this), ctx, 0, 0, mario.go.heading < 0);\r\n    }\r\n\r\n    mario.turbo = function setTurboState(turboOn) {\r\n        this.go.dragFactor = turboOn ? FAST_DRAG : SLOW_DRAG;\r\n    }\r\n\r\n    return mario;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const PRESSED = 1;\r\nconst RELEASED = 0;\r\n\r\nexport default class KeyBoardState {\r\n    constructor() {\r\n        // Holds the current state of a given key\r\n        this.keyStates = new Map();\r\n\r\n        // Holds the callback functions fro a key code\r\n        this.keyMap = new Map();\r\n    }\r\n\r\n    addMapping(code, callback) {\r\n        this.keyMap.set(code, callback);\r\n    }\r\n\r\n    handleEvent(event) {\r\n        const { code } = event;\r\n        if (!this.keyMap.has(code)) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        const keyState = event.type === 'keydown' ? PRESSED : RELEASED;\r\n\r\n        if (this.keyStates.get(code) === keyState) {\r\n            return;\r\n        }\r\n        this.keyStates.set(code, keyState);\r\n        this.keyMap.get(code)(keyState);\r\n    }\r\n\r\n    listenTo(window) {\r\n        ['keydown', 'keyup'].forEach(eventName => {\r\n            window.addEventListener(eventName, event=> {\r\n                this.handleEvent(event);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Keyboard from './Class/KeyBoardState'\r\n\r\nexport function setupKeyboard(mario) {\r\n    const SPACE = 'Space';\r\n    const RIGHT = 'ArrowRight';\r\n    const LEFT = 'ArrowLeft';\r\n    const UP = 'ArrowUp';\r\n    const input = new Keyboard();\r\n    input.addMapping(SPACE, keyState => {\r\n        if (keyState) {\r\n            mario.jump.start();\r\n        } else {\r\n            mario.jump.cancel();\r\n        }\r\n    });\r\n    input.addMapping(RIGHT, keyState => {\r\n        mario.go.dir += keyState ? 1 : -1;\r\n    });\r\n    input.addMapping(LEFT, keyState => {\r\n        mario.go.dir += -keyState ? -1 : 1;\r\n    });\r\n    input.addMapping(UP, keyState => {\r\n        mario.turbo(keyState);\r\n    });\r\n    return input;\r\n}","import {Vec2} from \"./math\";\r\n\r\nexport default class Camera {\r\n    constructor() {\r\n        this.pos = new Vec2(0, 0);\r\n        this.size = new Vec2(256, 224);\r\n    }\r\n}","export function setupMouseControl(canvas, entity, camera) {\r\n    let lastEvent;\r\n\r\n    ['mousedown', 'mousemove'].forEach(eventName => {\r\n        canvas.addEventListener(eventName, event => {\r\n            if (event.buttons === 1) {\r\n                entity.vel.set(0, 0);\r\n                entity.pos.set(\r\n                    event.offsetX + camera.pos.x,\r\n                    event.offsetY + camera.pos.y);\r\n            } else if (\r\n                event.buttons === 2 &&\r\n                lastEvent &&\r\n                lastEvent.buttons === 2 &&\r\n                lastEvent.type === 'mousemove'\r\n            ) {\r\n                camera.pos.x -= event.offsetX - lastEvent.offsetX;\r\n            }\r\n            lastEvent = event;\r\n        })\r\n    });\r\n\r\n    canvas.addEventListener('contextmenu', event => {\r\n       event.preventDefault();\r\n    });\r\n}","<template>\r\n    <div>\r\n        <canvas id=\"screen\" width=\"640\" height=\"640\">canvas not supported</canvas>\r\n<!--        <div class=\"test-img\">\r\n            <div></div>\r\n        </div>-->\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n    canvas {\r\n        border: 1px solid #ccc;\r\n    }\r\n    .test-img {\r\n        position: relative;\r\n        border: 1px solid red;\r\n        width: 513px;\r\n        height: 401px;\r\n        background: url(\"../../../public/img/characters.gif\") center center no-repeat;\r\n        div {\r\n            width: 16px;\r\n            height: 16px;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            border: 1px solid green;\r\n        }\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import { loadLevel } from \"./loaders\";\r\n    import Timer from './Timer'\r\n    import { createMario } from \"./Class/entities\";\r\n    import { createCollisionLayer, createCameraLayer } from \"./layers\";\r\n    import { setupKeyboard } from \"./input\";\r\n    import Camera from './Class/Camera'\r\n    import { setupMouseControl } from \"./debugger\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                canvas: null,\r\n                ctx: null\r\n            }\r\n        },\r\n        methods: {\r\n            async draw() {\r\n                let { ctx, canvas } = this;\r\n                const camera = new Camera();\r\n                const mario = await createMario(ctx);\r\n                const level = await loadLevel('1-1', ctx);\r\n                window.camera = camera;\r\n                mario.pos.set(14, 64);\r\n                level.entities.add(mario);\r\n                level.comp.layers.push(\r\n                    // createCollisionLayer(level),\r\n                    createCameraLayer(camera)\r\n                );\r\n\r\n                const input = setupKeyboard(mario);\r\n                input.listenTo(window);\r\n\r\n                setupMouseControl(canvas, mario, camera);\r\n                const timer = new Timer(1/60);\r\n                timer.update = function update(deltaTime) {\r\n                    level.update(deltaTime);\r\n\r\n                    if (mario.pos.x > 100) {\r\n                        camera.pos.x = mario.pos.x - 100;\r\n                    }\r\n\r\n                    level.comp.draw(ctx, camera);\r\n                };\r\n                timer.start();\r\n            },\r\n            init() {\r\n                this.canvas = document.getElementById('screen');\r\n                this.ctx = this.canvas.getContext('2d');\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init();\r\n            this.draw();\r\n\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=9945e8ba&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=9945e8ba&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9945e8ba\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './views/drawingBoard/index.vue'\r\nimport SuperMario from './views/superMario/index'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/mario',\r\n      name: 'mario',\r\n      // route level code-splitting\r\n      // this generates a separate chunk (about.[hash].js) for this route\r\n      // which is lazy-loaded when the route is visited.\r\n      // component: () => import(/* webpackChunkName: \"about\" */ './views/superMario/index.vue')\r\n      component: SuperMario\r\n    }\r\n  ]\r\n})\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n\r\n  },\r\n  mutations: {\r\n\r\n  },\r\n  actions: {\r\n\r\n  }\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport './assets/scss/style.scss'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=9945e8ba&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=9945e8ba&lang=scss&scoped=true&\""],"sourceRoot":""}