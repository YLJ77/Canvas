{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?6853","webpack:///./src/App.vue","webpack:///./src/views/drawingBoard/index.vue?ecfa","webpack:///./src/views/drawingBoard/appFunc.js","webpack:///./src/views/drawingBoard/shape.js","webpack:///./src/views/drawingBoard/Protractor.js","webpack:///./src/views/drawingBoard/Eraser.js","webpack:///src/views/drawingBoard/index.vue","webpack:///./src/views/drawingBoard/index.vue?76b4","webpack:///./src/views/drawingBoard/index.vue","webpack:///./src/views/superMario/index.vue?ea6b","webpack:///./src/views/superMario/Class/Compositor.js","webpack:///./src/views/superMario/Class/math.js","webpack:///./src/views/superMario/Class/TileResolver.js","webpack:///./src/views/superMario/Class/TileCollider.js","webpack:///./src/views/superMario/Class/Level.js","webpack:///./src/views/superMario/layers.js","webpack:///./src/views/superMario/Class/SpriteSheet.js","webpack:///./src/views/superMario/anim.js","webpack:///./src/views/superMario/loaders.js","webpack:///./src/views/superMario/Timer.js","webpack:///./src/views/superMario/Class/Entity.js","webpack:///./src/views/superMario/traits/Jump.js","webpack:///./src/views/superMario/traits/Go.js","webpack:///./src/views/superMario/Class/entities.js","webpack:///./src/views/superMario/Class/KeyBoardState.js","webpack:///./src/views/superMario/input.js","webpack:///./src/views/superMario/Class/Camera.js","webpack:///./src/views/superMario/debugger.js","webpack:///src/views/superMario/index.vue","webpack:///./src/views/superMario/index.vue?9e7a","webpack:///./src/views/superMario/index.vue","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/views/drawingBoard/index.vue?415d","webpack:///./src/views/superMario/index.vue?8d69"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_0a449b12_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","drawingBoardvue_type_template_id_6315fbde_scoped_true_render","on","click","$event","$router","_v","width","height","mousedown","onMouseDown","mousemove","onMouseMove","mouseup","onMouseUp","for","directives","rawName","expression","change","$$selectedVal","Array","filter","target","options","selected","map","val","_value","color","multiple","shape","type","domProps","input","composing","sides","checked","_q","isArray","guidewires","_i","$$a","$$el","$$c","$$v","$$i","concat","isFillColor","erase","drawingBoardvue_type_template_id_6315fbde_scoped_true_staticRenderFns","copyObj","_ref","obj","exclusiveKey","assign_default","create_default","get_prototype_of_default","keys_default","forEach","includes","esm_typeof","JSON","parse","stringify_default","drawPoint","_ref2","x","y","_ref2$radius","radius","ctx","_ref2$color","save","beginPath","fillStyle","arc","Math","PI","fill","restore","restoreDrawingSurface","_ref4","imgData","putImageData","saveDrawingSurface","_ref5","canvas","getImageData","windowToCanvas","_ref6","bbox","getBoundingClientRect","left","top","drawHorizontalLine","_ref7","moveTo","lineTo","stroke","drawVerticalLine","_ref8","drawGuidewires","_ref9","strokeStyle","lineWidth","drawGrid","_ref10","stepx","stepy","Point","classCallCheck","Shape","filled","startRadians","constructor","offsets","pointRadius","isEditing","draggingPoint","points","isRotated","loc","_this","point","offsetX","offsetY","index","setCenter","minX","minY","maxX","maxY","Number","MAX_VALUE","MIN_VALUE","min","max","center","_this2","drawPath","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","isPointInPath","err","return","_debugger","drawDebuggerPoint","drawControlPoint","createPath","radians","tx","ty","sin","cos","currentTransform","a","e","b","f","transform","_ref3","_ctx$currentTransform","arguments","_ref4$filled","BezierCurve","_Shape","_this3","endPoints","controlPoints","possibleConstructorReturn","getPrototypeOf","toConsumableArray","inherits","createClass","_this$getRectInfo","getRectInfo","sqrt","pow","tPoint","setShapeTransform","draw","_this4","centerX","centerY","getTransformPointToScreenPoint","createCurvePath","_this$points","slicedToArray","e1","e2","c1","c2","bezierCurveTo","_this$getRectInfo2","rect","closePath","createRectPath","drawCurve","Line","_Shape2","_this5","beginX","beginY","endX","endY","abs","_this$points2","beginPoint","_this$points3","endPoint","_this$points4","tPoints","_this$points5","_this$points6","createLinePath","drawLine","Circle","_Shape3","_this6","setPoints","isCenter","_this$draggingPoint","_this$points7","_this$points7$","_this$points8","_this$points8$","createCirclePath","RoundRect","_Shape4","_this7","_ref8$cornerRadius","cornerRadius","cornerX","cornerY","setControlPoint","basePointX","controlPointX","controlPointY","controlPoint","cx1","cy1","cx2","cy2","tCornerX","tCornerY","_this8","tBasePointX","tControlPointX","tControlPointY","entry","basePoint","controlPoint1","controlPoint2","_this9","offset","updatePointAfterRotated","_controlPoint","toArray","cPoint","arcTo","_controlPoint2","Polygon","_Shape5","_this10","getPoints","_this$getRectInfo3","_this$getRectInfo3$ce","createPolygonPath","drawPolygon","_this11","Protractor","rotatingLockRadians","RADIUS","STROKE_STYLE","FILL_STYLE","SHADOW_COLOR","DEGREE_RING_MARGIN","TRACKING_RING_MARGIN","DEGREE_ANNOTATIONS_FILL_STYLE","DEGREE_ANNOTATIONS_TEXT_SIZE","DEGREE_OUTER_RING_MARGIN","TICK_WIDTH","TICK_LONG_STROKE_STYLE","TICK_SHORT_STROKE_STYLE","TRACKING_RING_STROKING_STYLE","_this$shape","shadowColor","endpt","atan","font","textAlign","textBaseline","fillText","toFixed","ANGLE_MAX","ANGLE_DELTA","cnt","shadowOffsetX","shadowOffsetY","shadowBlur","drawCentroid","drawCentroidGuidewire","drawOutMostDial","drawDegreeOuterDial","drawDegreeDialTicks","drawDegreeInnerDial","drawDegreeAnnotations","Eraser","ERASER_LINE_WIDTH","ERASER_SHADOW_COLOR","ERASER_SHADOW_STYLE","ERASER_STROKE_STYLE","ERASER_SHADOW_OFFSET","ERASER_SHADOW_BLUR","eraserWidth","parse_float_default","clip","GRID_HORIZONTAL_SPACING","GRID_VERTICAL_SPACING","GRID_LINE_COLOR","setErasePath","setEraserAttributes","setDrawPath","drawingBoardvue_type_script_lang_js_","eraserType","shapes","rubberbandLine","drawingSurfaceImageData","rubberbandRect","dragging","selectedShape","rotatingLockEngaged","rotatingShape","protractor","eraser","mounted","getContext","setCanvasSize","drawRubberbandLines","watch","style","cursor","inactiveEditing","redraw","methods","innerWidth","innerHeight","stopRotatingShape","saveCanvasInfo","drawShapes","drawBezierCurve","_this$getEndAndContro","getEndAndControlPoints","curve","shape_BezierCurve","_this$rubberbandLine","_this$rubberbandLine$","polygon","shape_Polygon","document","getElementById","clearRect","updateRubberbandRect","_this$rubberbandLine2","drawRubberbandShape","drawRoundedRect","_ref3$cornerRadius","_this$rubberbandLine3","_this$rubberbandLine4","_this$rubberbandLine5","roundRect","shape_RoundRect","drawCircle","_this$rubberbandLine6","_this$rubberbandLine7","_this$rubberbandLine8","circle","shape_Circle","_this$rubberbandLine9","_this$rubberbandLine10","line","shape_Line","updateRubberband","activeEditing","getSelectedShape","getDraggingPoint","savePointOffset","initProtractor","Protractor_Protractor","rotateShape","rotate","clientX","clientY","preventDefault","Eraser_Eraser","existEditingShap","some","_this$rubberbandLine11","updatePointsOnMoving","updatePointOnEditing","eraseLast","drawEraser","pos","_this$rubberbandLine12","views_drawingBoardvue_type_script_lang_js_","drawingBoard_component","drawingBoard","superMariovue_type_template_id_7305c416_scoped_true_render","_m","superMariovue_type_template_id_7305c416_scoped_true_staticRenderFns","Compositor","layers","camera","layer","Matrix","grid","callback","column","col","Vec2","set","TileResolver","matrix","tileSize","floor","pos1","pos2","pMax","ceil","range","toIndex","indexX","indexY","tile","x1","x2","y1","y2","posX","posY","getByIndex","matches","toIndexRange","match","TileCollider","tileMatrix","tiles","entity","dir","vel","size","searchByRange","check","Level","comp","entities","set_default","gravity","totalTime","tileCollider","deltaTime","update","createBackgroundLayer","level","sprites","startIndex","endIndex","resolver","buffer","createElement","drawFrom","drawTo","_loop","animations","has","drawAnim","drawTile","drawWidth","drawImage","createSpriteLayer","spriteBuffer","spriteBufferContext","createCollisionLayer","resolvedTiles","tileResolver","getByIndexOriginal","_entity$pos","createCameraLayer","cameraToDraw","fromCamera","SpriteSheet","image","map_default","animation","buffers","flip","scale","translate","define","distance","createAnim","frames","frameLen","frameIndex","frameName","loadImage","src","promise_default","resolve","Image","onload","createTiles","backgrounds","applyRange","background","xStart","xLen","yStart","yLen","xEnd","yEnd","ranges","_range","_range2","_range3","loadJson","_callee","url","regeneratorRuntime","wrap","_context","prev","abrupt","fetch","then","json","stop","loadSpriteSheet","_x2","_loadSpriteSheet","_callee2","sheetSpec","_context2","sent","imageUrl","tileW","tileH","tileSpec","defineTile","frameSpec","animSpec","defineAnim","loadLevel","_x3","_x4","_loadLevel","_callee3","levelSpec","backgroundSprite","backgroundLayer","spriteLayer","_context3","spriteSheet","Timer","accumulatedTime","lastTime","updateProxy","time","enqueue","requestAnimationFrame","Trait","NAME","console","warn","Entity","traits","trait","Jump","duration","velocity","engageTime","Go","speed","heading","createMario","_createMario","marioSprite","mario","runAnim","routeFrame","go","addTrait","PRESSED","RELEASED","KeyBoardState","keyStates","keyMap","code","event","keyState","eventName","addEventListener","handleEvent","setupKeyboard","SPACE","RIGHT","LEFT","Keyboard","addMapping","jump","start","cancel","Camera","setupMouseControl","lastEvent","buttons","superMariovue_type_script_lang_js_","_draw","asyncToGenerator","mark","timer","Camera_Camera","add","listenTo","Timer_Timer","init","views_superMariovue_type_script_lang_js_","superMario_component","superMario","Vue","use","Router","router","routes","path","Home","SuperMario","Vuex","store","Store","state","mutations","actions","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6315fbde_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_6315fbde_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_7305c416_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_7305c416_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.37e0585c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0a449b12&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{on:{\"click\":function($event){return _vm.$router.push('/mario')}}},[_vm._v(\"go to mario\")]),_c('canvas',{attrs:{\"id\":\"canvas\",\"width\":\"600\",\"height\":\"600\"},on:{\"mousedown\":_vm.onMouseDown,\"mousemove\":_vm.onMouseMove,\"mouseup\":_vm.onMouseUp}},[_vm._v(\"Canvas not supported\")]),_c('ul',{attrs:{\"id\":\"controls\"}},[_c('li',[_c('label',{attrs:{\"for\":\"color\"}},[_vm._v(\"颜色\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.color),expression:\"color\"}],attrs:{\"id\":\"color\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.color=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"red\"}},[_vm._v(\"red\")]),_c('option',{attrs:{\"value\":\"green\"}},[_vm._v(\"green\")]),_c('option',{attrs:{\"value\":\"blue\"}},[_vm._v(\"blue\")]),_c('option',{attrs:{\"value\":\"orange\"}},[_vm._v(\"orange\")]),_c('option',{attrs:{\"value\":\"cornflowerblue\",\"selected\":\"\"}},[_vm._v(\"cornflowerblue\")]),_c('option',{attrs:{\"value\":\"goldenrod\"}},[_vm._v(\"goldenrod\")]),_c('option',{attrs:{\"value\":\"navy\"}},[_vm._v(\"navy\")]),_c('option',{attrs:{\"value\":\"purple\"}},[_vm._v(\"purple\")])])]),_c('li',[_c('label',{attrs:{\"for\":\"shape\"}},[_vm._v(\"形状\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.shape),expression:\"shape\"}],attrs:{\"id\":\"shape\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.shape=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.mode='normal'}]}},[_c('option',{attrs:{\"value\":\"Circle\"}},[_vm._v(\"circle\")]),_c('option',{attrs:{\"value\":\"Line\"}},[_vm._v(\"line\")]),_c('option',{attrs:{\"value\":\"RoundedRect\"}},[_vm._v(\"RoundedRect\")]),_c('option',{attrs:{\"value\":\"Polygon\"}},[_vm._v(\"Polygon\")]),_c('option',{attrs:{\"value\":\"BezierCurve\"}},[_vm._v(\"BezierCurve\")])])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.shape === 'Polygon'),expression:\"shape === 'Polygon'\"}]},[_c('label',{attrs:{\"for\":\"sides\"}},[_vm._v(\"边数\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sides),expression:\"sides\"}],attrs:{\"type\":\"text\",\"id\":\"sides\"},domProps:{\"value\":(_vm.sides)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.sides=$event.target.value}}})]),_c('li',[_c('label',{attrs:{\"for\":\"normal-radio\"}},[_vm._v(\"画图\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"normal-radio\",\"value\":\"normal\"},domProps:{\"checked\":_vm._q(_vm.mode,\"normal\")},on:{\"change\":function($event){_vm.mode=\"normal\"}}}),_c('label',{attrs:{\"for\":\"drag-radio\"}},[_vm._v(\"拖拽\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"drag-radio\",\"value\":\"drag\"},domProps:{\"checked\":_vm._q(_vm.mode,\"drag\")},on:{\"change\":function($event){_vm.mode=\"drag\"}}}),_c('label',{attrs:{\"for\":\"edit-radio\"}},[_vm._v(\"编辑\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"edit-radio\",\"value\":\"edit\"},domProps:{\"checked\":_vm._q(_vm.mode,\"edit\")},on:{\"change\":function($event){_vm.mode=\"edit\"}}}),_c('label',{attrs:{\"for\":\"rotate-radio\"}},[_vm._v(\"旋转\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"rotate-radio\",\"value\":\"rotate\"},domProps:{\"checked\":_vm._q(_vm.mode,\"rotate\")},on:{\"change\":function($event){_vm.mode=\"rotate\"}}}),_c('label',{attrs:{\"for\":\"eraser-radio\"}},[_vm._v(\"橡皮擦\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mode),expression:\"mode\"}],attrs:{\"type\":\"radio\",\"id\":\"eraser-radio\",\"value\":\"erase\"},domProps:{\"checked\":_vm._q(_vm.mode,\"erase\")},on:{\"change\":function($event){_vm.mode=\"erase\"}}}),_c('label',{attrs:{\"for\":\"guidewireCheckbox\"}},[_vm._v(\"导线\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.guidewires),expression:\"guidewires\"}],attrs:{\"id\":\"guidewireCheckbox\",\"type\":\"checkbox\",\"checked\":\"\"},domProps:{\"checked\":Array.isArray(_vm.guidewires)?_vm._i(_vm.guidewires,null)>-1:(_vm.guidewires)},on:{\"change\":function($event){var $$a=_vm.guidewires,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.guidewires=$$a.concat([$$v]))}else{$$i>-1&&(_vm.guidewires=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.guidewires=$$c}}}}),_c('label',{attrs:{\"for\":\"checkbox\"}},[_vm._v(\"填充:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isFillColor),expression:\"isFillColor\"}],attrs:{\"type\":\"checkbox\",\"id\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isFillColor)?_vm._i(_vm.isFillColor,null)>-1:(_vm.isFillColor)},on:{\"change\":function($event){var $$a=_vm.isFillColor,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isFillColor=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isFillColor=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isFillColor=$$c}}}}),_c('input',{attrs:{\"id\":\"eraseAllButton\",\"type\":\"button\",\"value\":\"擦除所有\"},on:{\"click\":_vm.erase}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export function copyObj({ obj, exclusiveKey }) {\r\n    obj = Object.assign( Object.create( Object.getPrototypeOf(obj)), obj);\r\n    Object.keys(obj).forEach(key => {\r\n        if (!exclusiveKey.includes(key) && typeof obj[key] === 'object') {\r\n            obj[key] = JSON.parse(JSON.stringify(obj[key]));\r\n        }\r\n    });\r\n    return obj;\r\n}\r\nexport function drawPoint({ x, y, radius = 5, ctx, color = 'red' }) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = color;\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.restore();\r\n}\r\nexport function drawBatchPoint({ points, ctx }) {\r\n    points.forEach((x, index) => {\r\n        if ((index < points.length - 1) && (index + 1) % 2 !== 0) {\r\n            let y = points[index + 1];\r\n            drawPoint({ x, y, ctx });\r\n        }\r\n    });\r\n}\r\nexport function restoreDrawingSurface({ ctx, imgData }) {\r\n    ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\nexport function saveDrawingSurface({ ctx, canvas }) {\r\n    return ctx.getImageData(0, 0,\r\n        canvas.width,\r\n        canvas.height);\r\n}\r\n\r\nexport function windowToCanvas({x, y, canvas}) {\r\n    var bbox = canvas.getBoundingClientRect();\r\n    return { x: x - bbox.left * (canvas.width / bbox.width),\r\n        y: y - bbox.top * (canvas.height / bbox.height) };\r\n}\r\n\r\nfunction drawHorizontalLine ({ y, ctx }) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(0,y+0.5);\r\n    ctx.lineTo(ctx.canvas.width, y+0.5);\r\n    ctx.stroke();\r\n}\r\nfunction drawVerticalLine ({ x, ctx }) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(x+0.5,0);\r\n    ctx.lineTo(x+0.5, ctx.canvas.height);\r\n    ctx.stroke();\r\n}\r\nexport function drawGuidewires({ x, y, ctx }) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'rgba(0,0,230,0.4)';\r\n    ctx.lineWidth = 0.5;\r\n    drawVerticalLine({ x, ctx });\r\n    drawHorizontalLine({ y, ctx });\r\n    ctx.restore();\r\n}\r\nexport function drawGrid({ ctx, color, stepx, stepy }) {\r\n    ctx.save();\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = 0.5;\r\n    for (let i = stepx + 0.5; i < ctx.canvas.width; i += stepx) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(i, 0);\r\n        ctx.lineTo(i, ctx.canvas.height);\r\n        ctx.stroke();\r\n    }\r\n    for (let i = stepy + 0.5; i < ctx.canvas.height; i += stepy) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, i);\r\n        ctx.lineTo(ctx.canvas.width, i);\r\n        ctx.stroke();\r\n    }\r\n    ctx.restore();\r\n}\r\n\r\nexport function drawAxes({ctx, canvas}) {\r\n    var AXIS_MARGIN = 40,\r\n        AXIS_ORIGIN = { x: AXIS_MARGIN, y: canvas.height-AXIS_MARGIN },\r\n        AXIS_TOP = AXIS_MARGIN,\r\n        AXIS_RIGHT = canvas.width-AXIS_MARGIN,\r\n        HORIZONTAL_TICK_SPACING = 10,\r\n        VERTICAL_TICK_SPACING = 10,\r\n        AXIS_WIDTH = AXIS_RIGHT - AXIS_ORIGIN.x,\r\n        AXIS_HEIGHT = AXIS_ORIGIN.y - AXIS_TOP,\r\n        NUM_VERTICAL_TICKS = AXIS_HEIGHT / VERTICAL_TICK_SPACING,\r\n        NUM_HORIZONTAL_TICKS = AXIS_WIDTH / HORIZONTAL_TICK_SPACING,\r\n        TICK_WIDTH = 10,\r\n        TICKS_LINEWIDTH = 0.5,\r\n        TICKS_COLOR = 'navy',\r\n        AXIS_LINEWIDTH = 1.0,\r\n        AXIS_COLOR = 'blue';\r\n\r\n    function drawHorizontalAxis() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\r\n        ctx.lineTo(AXIS_RIGHT, AXIS_ORIGIN.y);\r\n        ctx.stroke();\r\n    }\r\n    function drawVerticalAxis() {\r\n        ctx.beginPath();\r\n        ctx.moveTo(AXIS_ORIGIN.x, AXIS_ORIGIN.y);\r\n        ctx.lineTo(AXIS_ORIGIN.x, AXIS_TOP);\r\n        ctx.stroke();\r\n    }\r\n    function drawVerticalAxisTicks() {\r\n        var deltaX;\r\n        for (var i=1; i < NUM_VERTICAL_TICKS; ++i) {\r\n            ctx.beginPath();\r\n            if (i % 5 === 0) deltaX = TICK_WIDTH;\r\n            else deltaX = TICK_WIDTH/2;\r\n            ctx.moveTo(AXIS_ORIGIN.x - deltaX,\r\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\r\n            ctx.lineTo(AXIS_ORIGIN.x + deltaX,\r\n                AXIS_ORIGIN.y - i * VERTICAL_TICK_SPACING);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    function drawHorizontalAxisTicks() {\r\n        var deltaY;\r\n        for (var i=1; i < NUM_HORIZONTAL_TICKS; ++i) {\r\n            ctx.beginPath();\r\n            if (i % 5 === 0) deltaY = TICK_WIDTH;\r\n            else deltaY = TICK_WIDTH/2;\r\n            ctx.moveTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\r\n                AXIS_ORIGIN.y - deltaY);\r\n            ctx.lineTo(AXIS_ORIGIN.x + i * HORIZONTAL_TICK_SPACING,\r\n                AXIS_ORIGIN.y + deltaY);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    ctx.save();\r\n    ctx.strokeStyle = AXIS_COLOR;\r\n    ctx.lineWidth = AXIS_LINEWIDTH;\r\n    drawHorizontalAxis();\r\n    drawVerticalAxis();\r\n    ctx.lineWidth = 0.5;\r\n    ctx.lineWidth = TICKS_LINEWIDTH;\r\n    ctx.strokeStyle = TICKS_COLOR;\r\n    drawVerticalAxisTicks();\r\n    drawHorizontalAxisTicks();\r\n    ctx.restore();\r\n}\r\n\r\n","import { drawPoint } from \"./appFunc\";\r\n\r\nexport class Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nclass Shape {\r\n    constructor({ ctx, strokeStyle, fillStyle, filled, startRadians }) {\r\n        this.ctx = ctx;\r\n        this.strokeStyle = strokeStyle;\r\n        this.fillStyle = fillStyle;\r\n        this.filled = filled;\r\n        this.type = new.target.name;\r\n        this.offsets = null;\r\n        this.startRadians = startRadians || 0;\r\n        this.pointRadius = 5;\r\n        this.isEditing = false;\r\n        this.draggingPoint = null;\r\n        this.points = [];\r\n        this.isRotated = false;\r\n    }\r\n    savePointOffset(loc) {\r\n        let { points } = this;\r\n        this.offsets = [];\r\n        points.forEach(point => {\r\n            let offsetX = loc.x -point.x;\r\n            let offsetY = loc.y - point.y;\r\n            this.offsets.push({ offsetX, offsetY });\r\n        });\r\n    }\r\n    updatePointsOnMoving(loc) {\r\n        let { points, offsets } = this;\r\n        points.forEach((point, index) => {\r\n            point.x = loc.x - offsets[index].offsetX;\r\n            point.y = loc.y - offsets[index].offsetY;\r\n        });\r\n        this.setCenter(loc);\r\n    }\r\n    getRectInfo() {\r\n        let minX, minY, maxX, maxY, width, height;\r\n        let { points } = this;\r\n        minX = minY = Number.MAX_VALUE;\r\n        maxX = maxY = Number.MIN_VALUE;\r\n        points.forEach( point => {\r\n            let { x, y } = point;\r\n            minX = Math.min(minX, x);\r\n            minY = Math.min(minY, y);\r\n            maxX = Math.max(maxX, x);\r\n            maxY = Math.max(maxY, y);\r\n        });\r\n        width = maxX - minX;\r\n        height = maxY - minY;\r\n        return {\r\n            x: minX,\r\n            y: minY,\r\n            width,\r\n            height,\r\n            radius: Math.max(width, height) / 2,\r\n            center: {\r\n                x: minX + width / 2,\r\n                y: minY + height / 2\r\n            }\r\n        }\r\n    }\r\n    drawControlPoint() {\r\n        let { ctx, pointRadius, points } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, pointRadius, 0, 2 * Math.PI, false);\r\n            this.drawPath({ filled: true });\r\n        });\r\n    }\r\n    getDraggingPoint(loc) {\r\n        let { points, ctx, pointRadius } = this;\r\n        this.draggingPoint = null;\r\n        for (let point of points) {\r\n            ctx.beginPath();\r\n            ctx.arc(point.x, point.y,\r\n                pointRadius, 0, Math.PI * 2, false);\r\n            if (ctx.isPointInPath(loc.x, loc.y)) {\r\n                this.draggingPoint = point;\r\n                break;\r\n            }\r\n        }\r\n        return this.draggingPoint;\r\n    }\r\n    updatePointOnEditing(loc) {\r\n        let { draggingPoint } = this;\r\n        draggingPoint.x = loc.x;\r\n        draggingPoint.y = loc.y;\r\n        this.setCenter(loc);\r\n    }\r\n    draw() {\r\n        let { ctx, filled, _debugger, drawDebuggerPoint } = this;\r\n        this.isEditing && this.drawControlPoint();\r\n        this.createPath(ctx);\r\n        this.drawPath({ filled });\r\n        if (drawDebuggerPoint && _debugger) {\r\n            this.drawDebuggerPoint();\r\n        }\r\n    }\r\n    setShapeTransform({ radians, tx, ty }) {\r\n        let { ctx } = this;\r\n        /*        ctx.translate(tx, ty);\r\n                ctx.rotate(radians);*/\r\n        let sin = Math.sin(radians),\r\n            cos = Math.cos(radians);\r\n        let currentTransform = {\r\n            a: cos,  c: -sin, e: tx,\r\n            b: sin, d: cos, f: ty\r\n        };\r\n        let { a, b, c, d, e, f } = currentTransform;\r\n        ctx.transform(a,b,c,d,e,f);\r\n        ctx.currentTransform = currentTransform;\r\n    }\r\n    getTransformPointToScreenPoint({ x, y, tx, ty }) {\r\n        let { ctx } = this;\r\n        let { currentTransform: { a, b, c, d, e, f } } = ctx;\r\n        if (tx !== undefined) e = tx;\r\n        if (ty !== undefined) f = ty;\r\n        return {\r\n            x: x * a + y * c + e,\r\n            y: x * b + y * d + f\r\n        };\r\n    }\r\n    drawPath({ filled = false } = {}) {\r\n        let { ctx, strokeStyle, fillStyle } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.stroke();\r\n        if (filled) {\r\n            ctx.fillStyle = fillStyle;\r\n            ctx.fill();\r\n        }\r\n        ctx.restore();\r\n    }\r\n    updatePointAfterRotated() {}\r\n    createPath() {}\r\n    setCenter() {}\r\n    rotate() {}\r\n}\r\nexport class BezierCurve extends Shape {\r\n    constructor({ ctx, startRadians, fillStyle, strokeStyle, endPoints, controlPoints }) {\r\n        super({ ctx, strokeStyle, fillStyle, startRadians, filled: false });\r\n        this.endPoints = endPoints;\r\n        this.controlPoints = controlPoints;\r\n        this.points = [...this.endPoints, ...this.controlPoints];\r\n        this.setCenter();\r\n    }\r\n    setCenter() {\r\n        let { width, height, x: minX, y: minY } = this.getRectInfo();\r\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this.x = width / 2 + minX;\r\n        this.y = height / 2 + minY;\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, x, y, points } = this;\r\n        let tPoint = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n        this.startRadians = radians;\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n        this.x = 0;\r\n        this.y = 0;\r\n        points.forEach(point => {\r\n           point.x -= x;\r\n           point.y -= y;\r\n        });\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.points = tPoint;\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points, x: centerX, y: centerY } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            x -= centerX;\r\n            y -= centerY;\r\n            let tPoint = this.getTransformPointToScreenPoint({ x, y });\r\n            point.x = tPoint.x;\r\n            point.y = tPoint.y;\r\n        });\r\n    }\r\n    drawCurve() {\r\n        this.createCurvePath();\r\n        this.drawPath();\r\n    }\r\n    createCurvePath() {\r\n        let { points: [ e1, e2, c1, c2 ], ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(e1.x, e1.y);\r\n        ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, e2.x, e2.y);\r\n    }\r\n    createRectPath() {\r\n        let { x, y, width, height } = this.getRectInfo();\r\n        let { ctx, pointRadius } = this;\r\n        ctx.beginPath();\r\n        ctx.rect(x - pointRadius, y - pointRadius, width + pointRadius * 2, height + pointRadius * 2);\r\n        ctx.closePath();\r\n    }\r\n    createPath() {\r\n        this.createRectPath();\r\n    }\r\n    draw() {\r\n        this.isEditing && this.drawControlPoint();\r\n        this.drawCurve();\r\n    }\r\n}\r\nexport class Line extends Shape {\r\n    constructor({ ctx, filled, fillStyle, strokeStyle, beginX, beginY, endX, endY, startRadians }) {\r\n        super({ ctx, strokeStyle, filled, fillStyle, startRadians });\r\n        this.radius = Math.sqrt(Math.pow(Math.abs(beginX - endX), 2) + Math.pow(Math.abs(beginY-endY), 2));\r\n        this.points = [{ x: beginX, y: beginY }, { x: endX, y: endY } ];\r\n        this.setCenter();\r\n    }\r\n    setCenter() {\r\n        let { points: [ beginPoint ] } = this;\r\n        this.x = beginPoint.x;\r\n        this.y = beginPoint.y;\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points: [ beginPoint, endPoint ] } = this;\r\n        endPoint.x -= beginPoint.x;\r\n        endPoint.y -= beginPoint.y;\r\n        let point = this.getTransformPointToScreenPoint({ x: endPoint.x, y: endPoint.y });\r\n        endPoint.x = point.x;\r\n        endPoint.y = point.y;\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, points: [ beginPoint, endPoint ], points } = this;\r\n        let { x, y } = beginPoint;\r\n        let tPoints = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n\r\n        beginPoint.x = 0;\r\n        beginPoint.y = 0;\r\n        endPoint.x -= x;\r\n        endPoint.y -= y;\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.points = tPoints;\r\n    }\r\n    createRectPath() {\r\n        let { points: [ beginPoint, endPoint ], ctx, pointRadius } = this;\r\n        ctx.beginPath();\r\n        let minX = Math.min(beginPoint.x, endPoint.x) - pointRadius,\r\n            minY = Math.min(beginPoint.y, endPoint.y) - pointRadius,\r\n            width = Math.abs(beginPoint.x - endPoint.x) + 2 * pointRadius,\r\n            height = Math.abs(beginPoint.y - endPoint.y) + 2 * pointRadius;\r\n        ctx.rect(minX, minY, width, height);\r\n    }\r\n    createPath() {\r\n        this.createRectPath();\r\n    }\r\n    createLinePath() {\r\n        let { points: [ beginPoint, endPoint ], ctx } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(beginPoint.x, beginPoint.y);\r\n        ctx.lineTo(endPoint.x, endPoint.y);\r\n    }\r\n    drawLine() {\r\n        this.createLinePath();\r\n        this.drawPath();\r\n    }\r\n    draw() {\r\n        let { isEditing } = this;\r\n        isEditing && this.drawControlPoint();\r\n        this.drawLine();\r\n    }\r\n}\r\nexport class Circle extends Shape{\r\n    constructor({ centerX, centerY, radius, ctx, filled, strokeStyle, fillStyle }) {\r\n        super({ ctx, strokeStyle, fillStyle, filled });\r\n        this.x = centerX;\r\n        this.y = centerY;\r\n        this.radius = radius;\r\n        this.setPoints();\r\n    }\r\n    setPoints() {\r\n        let { x, y, radius } = this;\r\n        this.points = [\r\n            {\r\n                x,\r\n                y,\r\n                isCenter: true\r\n            },\r\n            {\r\n                x,\r\n                y: y - radius\r\n            },\r\n            {\r\n                x: x + radius,\r\n                y\r\n            },\r\n            {\r\n                x: x,\r\n                y: y + radius\r\n            },\r\n            {\r\n                x: x - radius,\r\n                y: y\r\n            }\r\n        ];\r\n    }\r\n    setCenter(loc) {\r\n        let { draggingPoint } = this;\r\n        if (draggingPoint) {\r\n            let { draggingPoint: { isCenter } } = this;\r\n            if (!isCenter) {\r\n                let { x, y } = this;\r\n                let offsetX = loc.x - x;\r\n                let offsetY = loc.y - y;\r\n                this.radius = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2));\r\n            } else {\r\n                let { draggingPoint: { x, y } } = this;\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n            this.setPoints();\r\n        } else {\r\n            let { points: [ { x, y } ] } = this;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n    createCirclePath() {\r\n        let { ctx, points: [ { x, y } ], radius } = this;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, Math.PI*2, false);\r\n    }\r\n    createPath() {\r\n        this.createCirclePath();\r\n    }\r\n}\r\nexport class RoundRect extends Shape {\r\n    constructor({ ctx, width, height, startRadians, cornerRadius = 10, cornerX, cornerY, fillStyle, strokeStyle, filled }) {\r\n        super({ fillStyle, filled, strokeStyle, startRadians, ctx });\r\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\r\n        this.y = height / 2 + cornerY;  // rotate center y\r\n        this.cornerX = cornerX;\r\n        this.cornerY = cornerY;\r\n        this.cornerRadius = cornerRadius;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n        this._debugger = false;\r\n        this.setControlPoint();\r\n    }\r\n    setControlPoint() {\r\n        let { cornerX, cornerY, cornerRadius, width, height } = this;\r\n        let basePointX = cornerX + cornerRadius;\r\n        let controlPointX = cornerX + width;\r\n        let controlPointY = cornerY + height;\r\n        this.controlPoint = [\r\n            {\r\n                x: basePointX,\r\n                y: cornerY\r\n            },\r\n            {\r\n                cx1: controlPointX,\r\n                cy1: cornerY,\r\n                cx2: controlPointX,\r\n                cy2: controlPointY,\r\n            },\r\n            {\r\n                cx1: controlPointX,\r\n                cy1: controlPointY,\r\n                cx2: cornerX,\r\n                cy2: controlPointY,\r\n            },\r\n            {\r\n                cx1: cornerX,\r\n                cy1: controlPointY,\r\n                cx2: cornerX,\r\n                cy2: cornerY,\r\n            },\r\n            {\r\n                cx1: cornerX,\r\n                cy1: cornerY,\r\n                cx2: basePointX,\r\n                cy2: cornerY,\r\n            },\r\n        ];\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, width, height, cornerX, cornerY, x, y } = this;\r\n        let tCornerX = -width / 2,\r\n            tCornerY = -height / 2;\r\n        this.isRotated = true;\r\n        this.startRadians = radians;\r\n        ctx.save();\r\n\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.cornerX = tCornerX;\r\n        this.cornerY = tCornerY;\r\n        this.setControlPoint();\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.cornerX = cornerX;\r\n        this.cornerY = cornerY;\r\n    }\r\n    updatePointAfterRotated({ tx, ty } = {}) {\r\n        let { cornerRadius, width, height, controlPoint } = this;\r\n        let tCornerX = -width / 2,\r\n            tCornerY = -height / 2;\r\n        let tBasePointX = tCornerX + cornerRadius;\r\n        let tControlPointX = tCornerX + width;\r\n        let tControlPointY = tCornerY + height;\r\n        let tPoints = [];\r\n        controlPoint.forEach((entry, index) => {\r\n            let basePoint, controlPoint1, controlPoint2;\r\n            switch (index) {\r\n                case 0:\r\n                    basePoint = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\r\n                    break;\r\n                case 1:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tCornerY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\r\n                    break;\r\n                case 2:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tControlPointX, y: tControlPointY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\r\n                    break;\r\n                case 3:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tControlPointY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\r\n                    break;\r\n                case 4:\r\n                    controlPoint1 = this.getTransformPointToScreenPoint({ x: tCornerX, y: tCornerY, tx, ty });\r\n                    controlPoint2 = this.getTransformPointToScreenPoint({ x: tBasePointX, y: tCornerY, tx, ty });\r\n                    break;\r\n            }\r\n            if (index === 0) {\r\n                tPoints.push({ x: basePoint.x, y: basePoint.y });\r\n            } else {\r\n                tPoints.push({\r\n                    cx1: controlPoint1.x,\r\n                    cy1: controlPoint1.y,\r\n                    cx2: controlPoint2.x,\r\n                    cy2: controlPoint2.y,\r\n                });\r\n            }\r\n            this.controlPoint = tPoints;\r\n        });\r\n    }\r\n    savePointOffset(loc) {\r\n        let { cornerX, cornerY } = this;\r\n        let offsetX = loc.x -cornerX;\r\n        let offsetY = loc.y - cornerY;\r\n        this.offsets = [{ offsetX, offsetY }];\r\n    }\r\n    updatePointsOnMoving(loc) {\r\n        this.offsets.forEach(offset => {\r\n            this.cornerX = loc.x - offset.offsetX;\r\n            this.cornerY = loc.y - offset.offsetY;\r\n        });\r\n        let { width, height, cornerX, cornerY, isRotated } = this;\r\n        this.x = width / 2 + cornerX;   // rotate center x | protractor center\r\n        this.y = height / 2 + cornerY;  // rotate center y\r\n        if (isRotated) {\r\n            this.updatePointAfterRotated({ tx: this.x, ty: this.y });\r\n        } else {\r\n            this.setControlPoint({ cornerX, cornerY });\r\n        }\r\n    }\r\n    updatePointOnEditing() {\r\n\r\n    }\r\n    createPath() {\r\n        let { ctx, controlPoint, cornerRadius } = this;\r\n        let [ basePoint, ...cPoint ] = controlPoint;\r\n        ctx.beginPath();\r\n        ctx.moveTo(basePoint.x, basePoint.y);\r\n        cPoint.forEach(point => {\r\n            let { cx1, cy1, cx2, cy2 } = point;\r\n            ctx.arcTo(cx1, cy1, cx2, cy2, cornerRadius);\r\n        });\r\n        ctx.closePath();\r\n    }\r\n    drawDebuggerPoint() {\r\n        let { ctx, controlPoint } = this;\r\n        let [ basePoint, ...cPoint ] = controlPoint;\r\n        let radius = 4;\r\n        drawPoint({ x: basePoint.x, y: basePoint.y, ctx, radius });\r\n        cPoint.forEach(point => {\r\n            let { cx1, cy1, cx2, cy2 } = point;\r\n            drawPoint({ x: cx1, y: cy1, ctx, color: 'green', radius });\r\n            drawPoint({ x: cx2, y: cy2, ctx, color: 'yellow', radius });\r\n        });\r\n    }\r\n\r\n}\r\nexport class Polygon extends Shape {\r\n    constructor({ centerX, centerY, radius,\r\n                    sides, startRadians, strokeStyle, fillStyle, filled, ctx }) {\r\n        super({ ctx, filled, fillStyle, strokeStyle, startRadians });\r\n        this.x = centerX;\r\n        this.y = centerY;\r\n        this.radius = radius;\r\n        this.sides = sides;\r\n        this.points = this.getPoints();\r\n    }\r\n    rotate(radians = 0) {\r\n        let { ctx, x, y, points } = this;\r\n        let tPoints = JSON.parse(JSON.stringify(points));\r\n        ctx.save();\r\n        this.setShapeTransform({ radians, tx: x, ty: y });\r\n        this.x = 0;\r\n        this.y = 0;\r\n        points.forEach(point => {\r\n            point.x -= x;\r\n            point.y -= y;\r\n        });\r\n\r\n        this.draw();\r\n        ctx.restore();\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.points = tPoints;\r\n    }\r\n    setCenter() {\r\n        let { center: { x, y }, radius } = this.getRectInfo();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    getPoints() {\r\n        let points = [],\r\n            radians = this.startRadians || 0;\r\n        for (let i=0; i < this.sides; ++i) {\r\n            points.push(new Point(this.x + this.radius * Math.sin(radians),\r\n                this.y - this.radius * Math.cos(radians)));\r\n            radians += 2*Math.PI/this.sides;\r\n        }\r\n        return points;\r\n    }\r\n    createPolygonPath() {\r\n        let { ctx, points } = this;\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[0].x, points[0].y);\r\n        for (let i=1; i < this.sides; ++i) {\r\n            ctx.lineTo(points[i].x, points[i].y);\r\n        }\r\n        ctx.closePath();\r\n    }\r\n    createPath() {\r\n        this.createPolygonPath();\r\n    }\r\n    drawPolygon() {\r\n        let { filled } = this;\r\n        this.createPolygonPath();\r\n        this.drawPath({ filled });\r\n    }\r\n    draw() {\r\n        this.isEditing && this.drawControlPoint();\r\n        this.drawPolygon();\r\n    }\r\n    updatePointAfterRotated() {\r\n        let { points, x: centerX, y: centerY } = this;\r\n        points.forEach(point => {\r\n            let { x, y } = point;\r\n            x -= centerX;\r\n            y -= centerY;\r\n            let tPoint = this.getTransformPointToScreenPoint({ x, y });\r\n            point.x = tPoint.x;\r\n            point.y = tPoint.y;\r\n        });\r\n    }\r\n}\r\n","export class Protractor {\r\n    constructor({ ctx, shape, loc, rotatingLockRadians }) {\r\n        this.ctx = ctx;\r\n        this.shape = shape;\r\n        this.loc = loc;\r\n        this.rotatingLockRadians = rotatingLockRadians;\r\n\r\n        this.RADIUS = 10;\r\n        this.STROKE_STYLE = 'rgba(0, 0, 0, 0.8)';\r\n        this.FILL_STYLE ='rgba(255, 255, 255, 0.2)';\r\n        this.SHADOW_COLOR = 'rgba(255, 255, 255, 0.4)';\r\n\r\n        this.DEGREE_RING_MARGIN = 35;\r\n        this.TRACKING_RING_MARGIN = 55;\r\n        this.DEGREE_ANNOTATIONS_FILL_STYLE = 'rgba(0, 0, 230, 0.8)';\r\n        this.DEGREE_ANNOTATIONS_TEXT_SIZE = 11;\r\n        this.DEGREE_OUTER_RING_MARGIN = this.DEGREE_RING_MARGIN;\r\n        this.TICK_WIDTH = 10;\r\n        this.TICK_LONG_STROKE_STYLE = 'rgba(100, 140, 230, 0.9)';\r\n        this.TICK_SHORT_STROKE_STYLE = 'rgba(100, 140, 230, 0.7)';\r\n\r\n        this.TRACKING_RING_STROKING_STYLE = 'rgba(100, 140, 230, 0.3)';\r\n    }\r\n    drawCentroid() {  // 量角器圆心\r\n        let { ctx, shape: { x, y }, STROKE_STYLE, FILL_STYLE, SHADOW_COLOR, RADIUS } = this;\r\n        ctx.beginPath();\r\n        ctx.save();\r\n        ctx.strokeStyle = STROKE_STYLE;\r\n        ctx.fillStyle = FILL_STYLE;\r\n        ctx.shadowColor = SHADOW_COLOR;\r\n        ctx.arc(x, y, RADIUS, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n    drawCentroidGuidewire() {  //  导线\r\n        let { loc, shape, ctx, FILL_STYLE, TRACKING_RING_MARGIN, rotatingLockRadians } = this;\r\n        let radians = Math.atan( (loc.y - shape.y) / (loc.x - shape.x) ),\r\n            radius, endpt;\r\n\r\n        radius = shape.radius + TRACKING_RING_MARGIN;\r\n        radians = radians - rotatingLockRadians;\r\n\r\n        if (loc.x >= shape.x) {\r\n            endpt = {\r\n                x: shape.x + radius * Math.cos(radians),\r\n                y: shape.y + radius * Math.sin(radians)\r\n            };\r\n        }\r\n        else {\r\n            endpt = {\r\n                x: shape.x - radius * Math.cos(radians),\r\n                y: shape.y - radius * Math.sin(radians)\r\n            };\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y);\r\n        ctx.lineTo(endpt.x, endpt.y);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(endpt.x, endpt.y, 5, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.fillStyle = FILL_STYLE;\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n    }\r\n    drawDegreeOuterDial() { // 刻度盘外层圆环\r\n        let { ctx, shape, DEGREE_OUTER_RING_MARGIN } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\r\n        // ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y,\r\n            shape.radius + DEGREE_OUTER_RING_MARGIN,\r\n            0, Math.PI*2, true);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    drawDegreeAnnotations() {   // 度数数字\r\n        let { shape, TICK_WIDTH, DEGREE_RING_MARGIN, ctx, DEGREE_ANNOTATIONS_FILL_STYLE, DEGREE_ANNOTATIONS_TEXT_SIZE } = this;\r\n        let radius = shape.radius + DEGREE_RING_MARGIN;\r\n        ctx.save();\r\n        ctx.fillStyle = DEGREE_ANNOTATIONS_FILL_STYLE;\r\n        ctx.font = DEGREE_ANNOTATIONS_TEXT_SIZE + 'px Helvetica';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n\r\n        for (let radians=0; radians < 2*Math.PI; radians += Math.PI/8) {\r\n            ctx.beginPath();\r\n            ctx.fillText((radians * 180 / Math.PI).toFixed(0),\r\n                shape.x + Math.cos(radians) * (radius - TICK_WIDTH*2),\r\n                shape.y + Math.sin(radians) * (radius - TICK_WIDTH*2));\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n    drawDegreeDialTicks() { // 刻度线\r\n        let { shape, DEGREE_RING_MARGIN, ctx, TICK_WIDTH, TICK_LONG_STROKE_STYLE, TICK_SHORT_STROKE_STYLE } = this;\r\n        let radius = shape.radius + DEGREE_RING_MARGIN,\r\n            ANGLE_MAX = 2*Math.PI,\r\n            ANGLE_DELTA = Math.PI/64;\r\n\r\n        ctx.save();\r\n\r\n        for (let radians = 0, cnt = 0; radians < ANGLE_MAX; radians += ANGLE_DELTA, ++cnt) {\r\n            ctx.beginPath();\r\n\r\n            if (cnt % 4 === 0) {\r\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH),\r\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH));\r\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\r\n                    shape.y + Math.sin(radians) * (radius));\r\n                ctx.strokeStyle = TICK_LONG_STROKE_STYLE;\r\n                ctx.stroke();\r\n            }\r\n            else {\r\n                ctx.moveTo(shape.x + Math.cos(radians) * (radius - TICK_WIDTH/2),\r\n                    shape.y + Math.sin(radians) * (radius - TICK_WIDTH/2));\r\n                ctx.lineTo(shape.x + Math.cos(radians) * (radius),\r\n                    shape.y + Math.sin(radians) * (radius));\r\n                ctx.strokeStyle = TICK_SHORT_STROKE_STYLE;\r\n                ctx.stroke();\r\n            }\r\n\r\n            ctx.restore();\r\n        }\r\n    }\r\n    drawDegreeInnerDial() { //  刻度盘内层圆环\r\n        let { shape, ctx, DEGREE_RING_MARGIN, TICK_WIDTH } = this;\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radius + DEGREE_RING_MARGIN - TICK_WIDTH, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    drawOutMostDial() {    //  最外层圆环\r\n        let { shape, ctx, TRACKING_RING_STROKING_STYLE, TRACKING_RING_MARGIN } = this;\r\n        ctx.save();\r\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\r\n        ctx.shadowOffsetX = 3,\r\n            ctx.shadowOffsetY = 3,\r\n            ctx.shadowBlur = 6,\r\n            ctx.strokeStyle = TRACKING_RING_STROKING_STYLE;\r\n        // ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radius +\r\n            TRACKING_RING_MARGIN, 0, Math.PI*2, false);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n    draw() {\r\n        let { ctx } = this;\r\n        this.drawCentroid();\r\n        this.drawCentroidGuidewire();\r\n        ctx.beginPath();\r\n        this.drawOutMostDial();\r\n        this.drawDegreeOuterDial();\r\n        ctx.fillStyle = 'rgba(100, 140, 230, 0.1)';\r\n        ctx.fill();\r\n\r\n        ctx.beginPath();\r\n        this.drawDegreeOuterDial();\r\n        ctx.stroke();\r\n\r\n        this.drawDegreeDialTicks();\r\n        this.drawDegreeInnerDial();\r\n        this.drawDegreeAnnotations();\r\n    }\r\n}","import { drawGrid } from './appFunc'\r\nexport class Eraser {\r\n    constructor({ type, width, ctx }) {\r\n        this.ctx = ctx;\r\n        this.type = type;\r\n        this.width = width;\r\n        this.ERASER_LINE_WIDTH = 1;\r\n\r\n        this.ERASER_SHADOW_COLOR = 'rgb(0,0,0)';\r\n        this.ERASER_SHADOW_STYLE = 'blue';\r\n        this.ERASER_STROKE_STYLE = 'rgb(0,0,255)';\r\n        this.ERASER_SHADOW_OFFSET = -5;\r\n        this.ERASER_SHADOW_BLUR = 20;\r\n    }\r\n    setDrawPath(loc) {\r\n        let { width, ctx, type } = this;\r\n        let eraserWidth = parseFloat(width);\r\n\r\n        ctx.beginPath();\r\n\r\n        if (type === 'circle') {\r\n            ctx.arc(loc.x, loc.y, eraserWidth/2, 0, Math.PI*2, false);\r\n        }\r\n        else {\r\n            ctx.rect(loc.x - eraserWidth/2,\r\n                loc.y - eraserWidth/2,\r\n                eraserWidth, eraserWidth);\r\n        }\r\n        ctx.clip();\r\n    }\r\n    setErasePath(loc) {\r\n        let { width, ctx, type, ERASER_LINE_WIDTH } = this;\r\n\r\n        ctx.beginPath();\r\n        if (type === 'circle') {\r\n            ctx.arc(loc.x, loc.y, width/2 + ERASER_LINE_WIDTH, 0, Math.PI*2, false);\r\n        }\r\n        else {\r\n            ctx.rect(loc.x - width/2 - ERASER_LINE_WIDTH,\r\n                loc.y - width/2 - ERASER_LINE_WIDTH,\r\n                width + ERASER_LINE_WIDTH*2,\r\n                width + ERASER_LINE_WIDTH*2);\r\n        }\r\n        ctx.clip();\r\n    }\r\n    setEraserAttributes() {\r\n        let { ctx, ERASER_LINE_WIDTH, ERASER_SHADOW_BLUR, ERASER_SHADOW_OFFSET, ERASER_SHADOW_STYLE, ERASER_STROKE_STYLE } = this;\r\n        ctx.lineWidth     = ERASER_LINE_WIDTH;\r\n        ctx.shadowColor   = ERASER_SHADOW_STYLE;\r\n        ctx.shadowOffsetX = ERASER_SHADOW_OFFSET;\r\n        ctx.shadowOffsetY = ERASER_SHADOW_OFFSET;\r\n        ctx.shadowBlur    = ERASER_SHADOW_BLUR;\r\n        ctx.strokeStyle   = ERASER_STROKE_STYLE;\r\n    }\r\n    eraseLast(loc) {\r\n        let { ctx } = this;\r\n        let GRID_HORIZONTAL_SPACING = 10,\r\n            GRID_VERTICAL_SPACING = 10,\r\n            GRID_LINE_COLOR = 'lightblue';\r\n        ctx.save();\r\n\r\n        this.setErasePath(loc);\r\n        ctx.fillStyle = 'white';\r\n        ctx.fill();\r\n        drawGrid({ctx, color: GRID_LINE_COLOR, stepx: GRID_HORIZONTAL_SPACING, stepy: GRID_VERTICAL_SPACING});\r\n\r\n        ctx.restore();\r\n    }\r\n    drawEraser(loc) {\r\n        let { ctx } = this;\r\n        ctx.save();\r\n\r\n        this.setEraserAttributes();\r\n        this.setDrawPath(loc);\r\n        ctx.stroke();\r\n\r\n        ctx.restore();\r\n    }\r\n}","<template>\r\n    <div>\r\n        <div @click=\"$router.push('/mario')\">go to mario</div>\r\n        <canvas\r\n                @mousedown=\"onMouseDown\"\r\n                @mousemove=\"onMouseMove\"\r\n                @mouseup=\"onMouseUp\"\r\n                id=\"canvas\" width='600' height='600'>Canvas not supported</canvas>\r\n        <ul id='controls'>\r\n            <li>\r\n                <label for=\"color\">颜色</label>\r\n                <select id=\"color\" v-model=\"color\">\r\n                    <option value='red'>red</option>\r\n                    <option value='green'>green</option>\r\n                    <option value='blue'>blue</option>\r\n                    <option value='orange'>orange</option>\r\n                    <option value='cornflowerblue' selected>cornflowerblue</option>\r\n                    <option value='goldenrod'>goldenrod</option>\r\n                    <option value='navy'>navy</option>\r\n                    <option value='purple'>purple</option>\r\n                </select>\r\n            </li>\r\n            <li>\r\n                <label for=\"shape\">形状</label>\r\n                <select id=\"shape\" v-model=\"shape\" @change=\"mode='normal'\">\r\n                    <option value='Circle'>circle</option>\r\n                    <option value='Line'>line</option>\r\n                    <option value='RoundedRect'>RoundedRect</option>\r\n                    <option value='Polygon'>Polygon</option>\r\n                    <option value='BezierCurve'>BezierCurve</option>\r\n                </select>\r\n            </li>\r\n            <li v-show=\"shape === 'Polygon'\">\r\n                <label for=\"sides\">边数</label>\r\n                <input type=\"text\" id=\"sides\" v-model=\"sides\">\r\n            </li>\r\n            <li>\r\n                <label for=\"normal-radio\">画图</label>\r\n                <input type=\"radio\" id=\"normal-radio\" v-model=\"mode\" value=\"normal\">\r\n                <label for=\"drag-radio\">拖拽</label>\r\n                <input type=\"radio\" id=\"drag-radio\" v-model=\"mode\" value=\"drag\">\r\n                <label for=\"edit-radio\">编辑</label>\r\n                <input type=\"radio\" id=\"edit-radio\" v-model=\"mode\" value=\"edit\">\r\n                <label for=\"rotate-radio\">旋转</label>\r\n                <input type=\"radio\" id=\"rotate-radio\" v-model=\"mode\" value=\"rotate\">\r\n                <label for=\"eraser-radio\">橡皮擦</label>\r\n                <input type=\"radio\" id=\"eraser-radio\" v-model=\"mode\" value=\"erase\">\r\n                <label for=\"guidewireCheckbox\">导线</label>\r\n                <input id='guidewireCheckbox' v-model=\"guidewires\" type='checkbox' checked/>\r\n                <label for=\"checkbox\">填充:</label>\r\n                <input type=\"checkbox\" id=\"checkbox\" v-model=\"isFillColor\">\r\n                <input @click=\"erase\" id='eraseAllButton' type='button' value='擦除所有'/>\r\n\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n    body {\r\n        background: #eeeeee;\r\n    }\r\n    #controls {\r\n        position: absolute;\r\n        left: -25px;\r\n        top: 0;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        list-style: none;\r\n        align-items: center;\r\n        li {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n    #canvas {\r\n        background: #ffffff;\r\n        cursor: pointer;\r\n        margin-left: 10px;\r\n        margin-top: 10px;\r\n        -webkit-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\r\n        -moz-box-shadow: 4px 4px 8px rgba(0,0,0,0.5);\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import { copyObj, drawGuidewires, drawGrid, windowToCanvas, saveDrawingSurface, restoreDrawingSurface } from \"./appFunc\";\r\n    import { Circle, RoundRect, Polygon, Line, BezierCurve } from \"./shape\";\r\n    import { Protractor } from './Protractor'\r\n    import { Eraser } from './Eraser'\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                eraserWidth: 25,\r\n                eraserType: 'circle',\r\n                shapes: [],\r\n                sides: 3,\r\n                startRadians: 0,\r\n                shape: 'Line',\r\n                isFillColor: false,\r\n                ctx: null,\r\n                canvas: null,\r\n                guidewires: true,\r\n                color: 'cornflowerblue',\r\n                rubberbandLine: {\r\n                    drawingSurfaceImageData: null,\r\n                    mousedown: {},  // x,y\r\n                    rubberbandRect: {}, // width, height, left, top\r\n                    dragging: false,\r\n                },\r\n                mode: 'normal',\r\n                selectedShape: null,\r\n                draggingPoint: false, // End- or control point user is dragging\r\n                rotatingLockEngaged: false,\r\n                rotatingLockRadians: 0,\r\n                rotatingShape: null,\r\n                protractor: null,\r\n                eraser: null\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getContext();\r\n            this.setCanvasSize();\r\n            this.drawRubberbandLines();\r\n            window.shapes = this.shapes;\r\n        },\r\n        watch: {\r\n            mode() {\r\n                let { canvas, mode } = this;\r\n                switch (mode) {\r\n                    case 'drag':\r\n                    case 'edit':\r\n                    case 'rotate':\r\n                    case 'erase':\r\n                        canvas.style.cursor = 'pointer';\r\n                        break;\r\n                    case 'normal':\r\n                        canvas.style.cursor = 'crosshair';\r\n                        break;\r\n                }\r\n                this.inactiveEditing();\r\n                this.redraw();\r\n            }\r\n        },\r\n        methods: {\r\n            setCanvasSize() {\r\n                let { canvas } = this;\r\n                canvas.width = window.innerWidth;\r\n                canvas.height = window.innerHeight;\r\n            },\r\n            stopRotatingShape(loc) {\r\n                let { selectedShape, rotatingLockRadians } = this;\r\n                let radians = Math.atan((loc.y - selectedShape.y) /\r\n                    (loc.x - selectedShape.x))\r\n                    - rotatingLockRadians;\r\n                selectedShape.startRadians += radians;\r\n                selectedShape.isRotated = true;\r\n                selectedShape.updatePointAfterRotated();\r\n                this.rotatingShape = undefined;\r\n                this.rotatingLockEngaged = false;\r\n                this.rotatingLockRadians = 0;\r\n                this.redraw();\r\n            },\r\n            saveCanvasInfo(loc) {\r\n                let { rubberbandLine: { mousedown }, rubberbandLine, ctx, canvas } = this;\r\n                rubberbandLine.drawingSurfaceImageData = saveDrawingSurface({ ctx, canvas });\r\n                mousedown.x = loc.x;\r\n                mousedown.y = loc.y;\r\n                rubberbandLine.dragging = true;\r\n            },\r\n            drawShapes() {\r\n                let { shapes } = this;\r\n                shapes.forEach( shape => {\r\n                    shape.draw();\r\n                });\r\n            },\r\n            drawBezierCurve() {\r\n                let { endPoints, controlPoints } = this.getEndAndControlPoints();\r\n                let { ctx, shapes, rubberbandLine: { dragging }, color } = this;\r\n                let curve = new BezierCurve({ ctx, strokeStyle: color, fillStyle: color, endPoints, controlPoints });\r\n                curve.draw();\r\n                if (!dragging) shapes.push(curve);\r\n            },\r\n            getEndAndControlPoints() {\r\n                let endPoints = [ {}, {} ], // Endpoint locations (x, y)\r\n                    controlPoints =  [ {}, {} ]; // Control point locations (x, y)\r\n                let { rubberbandLine: { rubberbandRect } } = this;\r\n                let { left, top, width, height } = rubberbandRect;\r\n                endPoints[0].x = left;\r\n                endPoints[0].y = top;\r\n                endPoints[1].x = left + width;\r\n                endPoints[1].y = top + height;\r\n                controlPoints[0].x = left;\r\n                controlPoints[0].y = top + height;\r\n                controlPoints[1].x = left + width;\r\n                controlPoints[1].y = top;\r\n                return {\r\n                    endPoints,\r\n                    controlPoints\r\n                }\r\n            },\r\n            drawPolygon() {\r\n                let {\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: {\r\n                            width\r\n                        },\r\n                        mousedown: {\r\n                            x,\r\n                            y\r\n                        }\r\n                    },\r\n                    ctx,\r\n                    sides,\r\n                    startRadians,\r\n                    isFillColor,\r\n                    color,\r\n                    shapes\r\n                } = this;\r\n                let polygon = new Polygon({\r\n                    centerX: x,\r\n                    centerY: y,\r\n                    radius: width,\r\n                    sides,\r\n                    startRadians,\r\n                    strokeStyle: color,\r\n                    fillStyle: color,\r\n                    filled: isFillColor,\r\n                    ctx\r\n                });\r\n                polygon.draw();\r\n                if (!dragging) shapes.push(polygon);\r\n            },\r\n            getContext() {\r\n                this.canvas = document.getElementById('canvas');\r\n                this.ctx = this.canvas.getContext('2d');\r\n            },\r\n            erase() {\r\n                let { ctx, canvas } = this;\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n                saveDrawingSurface({ ctx, canvas });\r\n            },\r\n            drawRubberbandLines() {\r\n                let { ctx, color } = this;\r\n                ctx.strokeStyle = color;\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n            },\r\n            updateRubberbandRect({ loc }) {\r\n                let {\r\n                    rubberbandLine: {\r\n                        rubberbandRect,\r\n                        mousedown\r\n                    },\r\n                } = this;\r\n                rubberbandRect.width = Math.abs(loc.x - mousedown.x);\r\n                rubberbandRect.height = Math.abs(loc.y - mousedown.y);\r\n                if (loc.x > mousedown.x) rubberbandRect.left = mousedown.x;\r\n                else rubberbandRect.left = loc.x;\r\n                if (loc.y > mousedown.y) rubberbandRect.top = mousedown.y;\r\n                else rubberbandRect.top = loc.y;\r\n            },\r\n            drawRubberbandShape({ loc }) {\r\n                let { shape } = this;\r\n                this[`draw${ shape }`]({ loc });\r\n            },\r\n            drawRoundedRect({ cornerRadius = 10 } = {}) {\r\n                let {\r\n                    ctx,\r\n                    color,\r\n                    isFillColor,\r\n                    shapes,\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: { width, height },\r\n                        mousedown: { x: cornerX, y: cornerY }\r\n                    },\r\n                } = this;\r\n                let roundRect = new RoundRect({\r\n                    ctx,\r\n                    filled: isFillColor,\r\n                    strokeStyle: color,\r\n                    fillStyle: color,\r\n                    width,\r\n                    height,\r\n                    cornerX,\r\n                    cornerY,\r\n                    cornerRadius\r\n                });\r\n                roundRect.draw();\r\n                if (!dragging) shapes.push(roundRect);\r\n            },\r\n            drawCircle({ loc }) {\r\n                let {\r\n                    ctx,\r\n                    rubberbandLine: {\r\n                        dragging,\r\n                        rubberbandRect: { width, height },\r\n                        mousedown: {\r\n                            x,\r\n                            y\r\n                        }\r\n                    },\r\n                    color,\r\n                    isFillColor,\r\n                    shapes\r\n                } = this;\r\n                let radius;\r\n                if (y === loc.y) {\r\n                    radius = Math.abs(loc.x - x);\r\n                } else {\r\n                    radius = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n                }\r\n                let circle = new Circle({ centerX: x, centerY: y, radius, ctx, filled: isFillColor, strokeStyle: color, fillStyle: color });\r\n                circle.draw();\r\n                if (!dragging) shapes.push(circle);\r\n            },\r\n            drawLine({ loc }) {\r\n                let {\r\n                    ctx,\r\n                    rubberbandLine: {\r\n                        mousedown: {\r\n                            x: beginX,\r\n                            y: beginY\r\n                        },\r\n                        dragging\r\n                    },\r\n                    color,\r\n                    shapes\r\n                } = this;\r\n                let { x: endX, y: endY } = loc;\r\n                let line = new Line({ ctx, strokeStyle: color, fillStyle: color, beginX, beginY, endX, endY, filled: false });\r\n                line.draw();\r\n                if (!dragging) shapes.push(line);\r\n            },\r\n            updateRubberband({ loc }) {\r\n                this.updateRubberbandRect({ loc });\r\n                this.drawRubberbandShape({ loc });\r\n            },\r\n            inactiveEditing() {\r\n                let { shapes } = this;\r\n                shapes.forEach( shape => {\r\n                    shape.isEditing = false;\r\n                });\r\n            },\r\n            activeEditing({ shape }) {\r\n                this.inactiveEditing();\r\n                shape.isEditing = true;\r\n            },\r\n            getSelectedShape({ loc }) {\r\n                let { shapes, ctx, mode } = this;\r\n                for (let shape of shapes) {\r\n                    let draggingPoint = shape.getDraggingPoint(loc);\r\n                    shape.createPath();\r\n                    if (ctx.isPointInPath(loc.x, loc.y) || (mode === 'edit' && draggingPoint)) {\r\n                        this.selectedShape = shape;\r\n                        switch (mode) {\r\n                            case 'edit':\r\n                                this.activeEditing({ shape });\r\n                                this.redraw();\r\n                                shape.savePointOffset(loc);\r\n                                break;\r\n                            case 'drag':\r\n                                shape.savePointOffset(loc);\r\n                                break;\r\n                            case 'rotate':\r\n                                this.rotatingShape = copyObj({ obj: shape, exclusiveKey: ['ctx'] });\r\n                                break;\r\n                        }\r\n                        break;\r\n                    } else {\r\n                        this.selectedShape = null;\r\n                        if (mode === 'edit') {\r\n                            this.inactiveEditing();\r\n                            this.redraw();\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            initProtractor(loc) {\r\n                let { ctx, rotatingLockRadians, rotatingLockEngaged } = this;\r\n                let { rotatingShape } = this;\r\n                if (this.rotatingShape) {\r\n                    let protractor = new Protractor({ ctx, shape: rotatingShape, loc, rotatingLockRadians });\r\n                    protractor.draw();\r\n\r\n                    if (!rotatingLockEngaged) {\r\n                        this.rotatingLockEngaged = true;\r\n                        this.rotatingLockRadians = Math.atan((loc.y - rotatingShape.y) /\r\n                            (loc.x - rotatingShape.x));\r\n                    }\r\n                    this.protractor = protractor;\r\n                }\r\n            },\r\n            rotateShape(loc) {\r\n                let { rotatingLockEngaged, rotatingLockRadians, protractor } = this;\r\n                let {rotatingShape } = this;\r\n                if (rotatingLockEngaged) {\r\n                    let y = loc.y - rotatingShape.y;\r\n                    let x = loc.x - rotatingShape.x;\r\n                    let radians = Math.atan( y / x) - rotatingLockRadians;\r\n                    if (x < 0 && y > 0 || x < 0 && y <= 0) {\r\n                        radians = Math.PI + radians;\r\n                    }\r\n                    this.redraw();\r\n                    rotatingShape.rotate(radians);\r\n                    protractor.loc = loc;\r\n                    protractor.draw();\r\n\r\n                }\r\n            },\r\n            onMouseDown(e) {\r\n                let {\r\n                    canvas,\r\n                    mode,\r\n                    rotatingShape,\r\n                    ctx,\r\n                    eraser\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                e.preventDefault(); // Prevent cursor change\r\n                this.saveCanvasInfo(loc);\r\n                switch (mode) {\r\n                    case 'drag':\r\n                        this.getSelectedShape({ loc });\r\n                        break;\r\n                    case 'edit':\r\n                        this.getSelectedShape({ loc });\r\n                        break;\r\n                    case 'rotate':\r\n                        if (rotatingShape) {\r\n                            this.stopRotatingShape(loc);\r\n                        } else {\r\n                            this.getSelectedShape({ loc });\r\n                            this.initProtractor(loc);\r\n                        }\r\n                        break;\r\n                    case 'erase':\r\n                        if (!eraser) {\r\n                            let { eraserType, eraserWidth } = this;\r\n                            this.eraser = new Eraser({ ctx, type: eraserType, width: eraserWidth });\r\n                        }\r\n                        break;\r\n                }\r\n                if (mode !== 'edit' && this.existEditingShap()) {\r\n                    this.inactiveEditing();\r\n                    this.redraw();\r\n                }\r\n            },\r\n            existEditingShap() {\r\n                let { shapes } = this;\r\n                return shapes.some(shape => shape.isEditing);\r\n            },\r\n            onMouseMove(e) {\r\n                let {\r\n                    canvas,\r\n                    ctx,\r\n                    guidewires,\r\n                    shape,\r\n                    rubberbandLine: {\r\n                        mousedown,\r\n                        dragging,\r\n                        drawingSurfaceImageData\r\n                    },\r\n                    mode,\r\n                    selectedShape,\r\n                    rotatingShape,\r\n                    eraser\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                e.preventDefault(); // Prevent selections\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                if (dragging) {\r\n                    switch (mode) {\r\n                        case 'drag':\r\n                            selectedShape && selectedShape.updatePointsOnMoving(loc);\r\n                            break;\r\n                        case 'edit':\r\n                            selectedShape && selectedShape.draggingPoint && selectedShape.updatePointOnEditing(loc);\r\n                            break;\r\n                        case 'erase':\r\n                            eraser.eraseLast({ x: mousedown.x, y: mousedown.y });\r\n                            eraser.drawEraser(loc);\r\n                            this.rubberbandLine.mousedown = loc;\r\n                            break;\r\n                        case 'normal':\r\n                            restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\r\n                            this.updateRubberband({ loc });\r\n                            if(guidewires) {\r\n                                let pos = shape === 'Line' ? loc : mousedown;\r\n                                drawGuidewires({ ctx, x: pos.x, y: pos.y });\r\n                            }\r\n                            break;\r\n                    }\r\n                    if (mode === 'drag' || mode === 'edit') {\r\n                        this.redraw();\r\n                    }\r\n                }\r\n                if (mode === 'rotate') {\r\n                    rotatingShape && this.rotateShape(loc);\r\n                }\r\n            },\r\n            onMouseUp(e) {\r\n                let {\r\n                    ctx,\r\n                    canvas,\r\n                    rubberbandLine,\r\n                    rubberbandLine: {\r\n                        drawingSurfaceImageData,\r\n                        mousedown\r\n                    },\r\n                    mode,\r\n                    eraser,\r\n                    selectedShape\r\n                } = this;\r\n                let { clientX: x, clientY: y } = e;\r\n                let loc = windowToCanvas({ x, y, canvas });\r\n                rubberbandLine.dragging = false;\r\n                switch (mode) {\r\n                    case 'normal':\r\n                        restoreDrawingSurface({ ctx, imgData: drawingSurfaceImageData });\r\n                        this.updateRubberband({ loc });\r\n                        break;\r\n                    case 'erase':\r\n                        eraser.eraseLast(mousedown);\r\n                        break;\r\n                    case 'edit':\r\n                    case 'drag':\r\n                        if (selectedShape) {\r\n                            let { type } = selectedShape;\r\n                            switch (type) {\r\n                                case 'BezierCurve':\r\n                                    selectedShape.setCenter();\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            },\r\n            redraw() {\r\n                let { ctx, canvas } = this;\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                drawGrid({ ctx, color: 'lightblue', stepx: 10, stepy: 10 });\r\n                this.drawShapes();\r\n            }\r\n        },\r\n    }\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6315fbde&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=6315fbde&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6315fbde\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"id\":\"screen\",\"width\":\"640\",\"height\":\"640\"}},[_vm._v(\"canvas not supported\")])])}]\n\nexport { render, staticRenderFns }","export class Compositor {\r\n    constructor() {\r\n        this.layers = [];\r\n    }\r\n    draw(ctx, camera) {\r\n        this.layers.forEach(layer => {\r\n            layer(ctx, camera);\r\n        })\r\n    }\r\n}","export class Matrix {\r\n    constructor() {\r\n        this.grid = [];\r\n    }\r\n\r\n    forEach(callback) {\r\n        this.grid.forEach((column, x) => {\r\n           column.forEach((value, y) => {\r\n              callback(value, x, y);\r\n           });\r\n        });\r\n    }\r\n\r\n    get(x, y) {\r\n        const col = this.grid[x];\r\n        if (col) {\r\n            return col[y];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    set(x, y, value) {\r\n        if (!this.grid[x]) {\r\n            this.grid[x] = [];\r\n        }\r\n\r\n        this.grid[x][y] = value;\r\n    }\r\n}\r\nexport class Vec2 {\r\n    constructor(x, y) {\r\n        this.set(x, y);\r\n    }\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","export default class TileResolver {\r\n    constructor(matrix, tileSize = 16) {\r\n        this.matrix = matrix;\r\n        this.tileSize = tileSize;\r\n    }\r\n\r\n    toIndex(pos) {\r\n        return Math.floor(pos / this.tileSize);\r\n    }\r\n\r\n    toIndexRange(pos1, pos2) {\r\n        const pMax = Math.ceil(pos2 / this.tileSize) * this.tileSize;\r\n        const range = [];\r\n        let pos = pos1;\r\n        do {\r\n            range.push(this.toIndex(pos));\r\n            pos += this.tileSize;\r\n        } while (pos < pMax);\r\n        return range;\r\n    }\r\n\r\n    getByIndex(indexX, indexY) {\r\n        const tile = this.matrix.get(indexX, indexY);\r\n        if (tile) {\r\n            const x1 = indexX * this.tileSize;\r\n            const x2 = x1 + this.tileSize;\r\n            const y1 = indexY * this.tileSize;\r\n            const y2 = y1 + this.tileSize;\r\n            return {\r\n                tile,\r\n                x1,\r\n                x2,\r\n                y1,\r\n                y2\r\n            }\r\n        }\r\n    }\r\n\r\n    searchByPosition(posX, posY) {\r\n        return this.getByIndex(\r\n            this.toIndex(posX),\r\n            this.toIndex(posY)\r\n        )\r\n    }\r\n\r\n    searchByRange(x1, x2, y1, y2) {\r\n        const matches = [];\r\n        this.toIndexRange(x1, x2).forEach(indexX => {\r\n            this.toIndexRange(y1, y2).forEach(indexY => {\r\n                const match = this.getByIndex(indexX, indexY);\r\n                if (match) {\r\n                    matches.push(match);\r\n                }\r\n            });\r\n        });\r\n        return matches;\r\n    }\r\n\r\n}\r\n","import TileResolver from './TileResolver'\r\nexport default class TileCollider {\r\n    constructor(tileMatrix) {\r\n        this.tiles = new TileResolver(tileMatrix);\r\n    }\r\n\r\n    check(entity, dir) {\r\n        let x, y, matches;\r\n        if (dir === 'x') {\r\n            if (entity.vel.x > 0) {\r\n                x = entity.pos.x + entity.size.x;\r\n            } else if (entity.vel.x < 0) {\r\n                x = entity.pos.x\r\n            } else {\r\n                return;\r\n            }\r\n            matches = this.tiles.searchByRange(\r\n                x, x,\r\n                entity.pos.y, entity.pos.y + entity.size.y\r\n            );\r\n        } else if (dir === 'y') {\r\n            if (entity.vel.y > 0) {\r\n                y = entity.pos.y + entity.size.y;\r\n            } else if (entity.vel.y < 0) {\r\n                y = entity.pos.y\r\n            } else {\r\n                return;\r\n            }\r\n            matches = this.tiles.searchByRange(\r\n                entity.pos.x, entity.pos.x + entity.size.x,\r\n                y, y\r\n            );\r\n        }\r\n\r\n        matches.forEach(match => {\r\n            if (match.tile.type !== 'ground') return;\r\n\r\n            if (entity.vel[dir] > 0) {\r\n                if (entity.pos[dir] + entity.size[dir] > match[`${dir}1`]) {\r\n                    entity.pos[dir] = match[`${dir}1`] - entity.size[dir];\r\n                    entity.vel[dir] = 0;\r\n                }\r\n            } else if (entity.vel[dir] < 0) {\r\n                if (entity.pos[dir] < match[`${dir}2`]) {\r\n                    entity.pos[dir] = match[`${dir}2`];\r\n                    entity.vel[dir] = 0;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    test(entity) {\r\n        this.check(entity, 'y');\r\n        this.check(entity, 'x');\r\n/*        const match = this.tiles.searchByPosition(entity.pos.x, entity.pos.y);\r\n        if (match) {\r\n            console.log('Matched tile', match, match.tile);\r\n        }*/\r\n    }\r\n}","import { Compositor } from './Compositor'\r\nimport { Matrix } from \"./math\";\r\nimport TileCollider from './TileCollider'\r\n\r\nexport default class Level {\r\n    constructor() {\r\n        this.comp = new Compositor();\r\n        this.entities = new Set();\r\n        this.tiles = new Matrix();\r\n        this.gravity = 2000;\r\n        this.totalTime = 0;\r\n\r\n        this.tileCollider = new TileCollider(this.tiles);\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.entities.forEach(entity => {\r\n            entity.update(deltaTime);\r\n\r\n            entity.pos.x += entity.vel.x * deltaTime;\r\n            this.tileCollider.check(entity, 'x');\r\n            entity.pos.y += entity.vel.y * deltaTime;\r\n            this.tileCollider.check(entity, 'y');\r\n            entity.vel.y += this.gravity * deltaTime;\r\n        });\r\n\r\n        this.totalTime += deltaTime;\r\n    }\r\n}","export  function createBackgroundLayer(level, sprites) {\r\n    const tiles = level.tiles;\r\n    const resolver = level.tileCollider.tiles;\r\n    const buffer = document.createElement('canvas');\r\n    const ctx = buffer.getContext('2d');\r\n    buffer.width = 256 + 16;\r\n    buffer.height = 240;\r\n\r\n    let startIndex, endIndex;\r\n    function redraw(drawFrom, drawTo) {\r\n/*        if (drawFrom === startIndex && drawTo === endIndex) {\r\n            return;\r\n        }*/\r\n        startIndex = drawFrom;\r\n        endIndex = drawTo;\r\n        for (let x = startIndex; x < endIndex; ++x) {\r\n            const col = tiles.grid[x];\r\n            if (col) {\r\n                col.forEach((tile, y) => {\r\n                    if (sprites.animations.has(tile.name)) {\r\n                        sprites.drawAnim(tile.name, ctx, x - startIndex, y, level.totalTime);\r\n                    } else {\r\n                        sprites.drawTile(tile.name, ctx, x - startIndex, y);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return function drawBackgroundLayer(ctx, camera) {\r\n        const drawWidth = resolver.toIndex(camera.size.x);\r\n        const drawFrom = resolver.toIndex(camera.pos.x);\r\n        const drawTo = drawFrom + drawWidth;\r\n        redraw(drawFrom, drawTo);\r\n\r\n        ctx.drawImage(buffer, -camera.pos.x % 16, camera.pos.y);\r\n    }\r\n}\r\n\r\nexport function createSpriteLayer(entities, width=16, height=16) {\r\n    const spriteBuffer = document.createElement('canvas');\r\n    spriteBuffer.width = width;\r\n    spriteBuffer.height = height;\r\n    const spriteBufferContext = spriteBuffer.getContext('2d');\r\n    return function drawSpriteLayer(ctx, camera) {\r\n        entities.forEach(entity => {\r\n            spriteBufferContext.clearRect(0, 0, width, height);\r\n            entity.draw(spriteBufferContext);\r\n\r\n            ctx.drawImage(\r\n                spriteBuffer,\r\n                entity.pos.x - camera.pos.x,\r\n                entity.pos.y - camera.pos.y\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport function createCollisionLayer(level) {\r\n    const resolvedTiles = [];\r\n    const tileResolver = level.tileCollider.tiles;\r\n    const tileSize = tileResolver.tileSize;\r\n\r\n    const getByIndexOriginal = tileResolver.getByIndex;\r\n    tileResolver.getByIndex = function getByIndexFake(x, y) {\r\n        resolvedTiles.push({ x, y });\r\n        return getByIndexOriginal.call(tileResolver, x, y);\r\n    }\r\n\r\n    return function drawCollision(ctx, camera) {\r\n        ctx.strokeStyle = 'blue';\r\n        resolvedTiles.forEach(({ x, y }) => {\r\n            ctx.beginPath();\r\n            ctx.rect(\r\n                x * tileSize - camera.pos.x,\r\n                y * tileSize - camera.pos.y,\r\n                tileSize,\r\n                tileSize);\r\n            ctx.stroke();\r\n        });\r\n\r\n\r\n        ctx.strokeStyle = 'red';\r\n        level.entities.forEach(entity => {\r\n            let { pos: { x, y }, size } = entity;\r\n            ctx.beginPath();\r\n            ctx.rect(\r\n                x - camera.pos.x,\r\n                y - camera.pos.y,\r\n                size.x,\r\n                size.y);\r\n            ctx.stroke();\r\n        });\r\n\r\n        resolvedTiles.length = 0;\r\n    }\r\n}\r\n\r\nexport function createCameraLayer(cameraToDraw) {\r\n    return function drawCameraRect(ctx, fromCamera) {\r\n        let { size } = cameraToDraw;\r\n        ctx.strokeStyle = 'purple';\r\n        ctx.beginPath();\r\n        ctx.rect(\r\n            cameraToDraw.pos.x - fromCamera.pos.x,\r\n            cameraToDraw.pos.y - fromCamera.pos.y,\r\n            size.x,\r\n            size.y);\r\n        ctx.stroke();\r\n    }\r\n}\r\n","export class SpriteSheet {\r\n    constructor(image, width, height) {\r\n        this.image = image;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.tiles = new Map();\r\n        this.animations = new Map();\r\n    }\r\n\r\n    defineAnim(name, animation) {\r\n        this.animations.set(name, animation);\r\n    }\r\n\r\n    define(name, x, y, width, height) {\r\n        const buffers = [false, true].map(flip => {\r\n            let { image } = this;\r\n            const buffer = document.createElement('canvas');\r\n            buffer.width = width;\r\n            buffer.height = height;\r\n            const ctx = buffer.getContext('2d');\r\n            if (flip) {\r\n                ctx.scale(-1, 1);\r\n                ctx.translate(-width, 0);\r\n            }\r\n            ctx.drawImage(\r\n                image,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                0,\r\n                0,\r\n                width,\r\n                height\r\n            );\r\n            return buffer;\r\n        });\r\n        this.tiles.set(name, buffers);\r\n    }\r\n    defineTile(name, x, y) {\r\n        let { width, height } = this;\r\n        this.define(name, x * width, y * height, width, height);\r\n\r\n    }\r\n    draw(name, ctx, x, y, flip = false) {\r\n        const buffer = this.tiles.get(name)[Number(flip)];\r\n        ctx.drawImage(buffer, x, y);\r\n    }\r\n\r\n    drawAnim(name, ctx, x, y, distance) {\r\n        const animation = this.animations.get(name);\r\n        this.drawTile(animation(distance), ctx, x, y);\r\n    }\r\n\r\n    drawTile(name, ctx, x, y) {\r\n        let { width, height } = this;\r\n        this.draw(name, ctx, x * width, y * height);\r\n    }\r\n}","export function createAnim(frames, frameLen) {\r\n    return function resolveFrame(distance) {\r\n        const frameIndex = Math.floor(distance / frameLen) % frames.length;\r\n        const frameName = frames[frameIndex];\r\n        return frameName;\r\n    }\r\n}\r\n","import Level from './Class/Level'\r\nimport { createBackgroundLayer, createSpriteLayer } from \"./layers\";\r\nimport {SpriteSheet} from \"./Class/SpriteSheet\";\r\nimport {createAnim} from \"./anim\";\r\n\r\nexport function loadImage(src) {\r\n    return new Promise(resolve => {\r\n        let image = new Image();\r\n        image.src = src;\r\n        image.onload = () => {\r\n            resolve(image);\r\n        }\r\n    });\r\n}\r\n\r\nfunction createTiles(level, backgrounds) {\r\n    function applyRange(background, xStart, xLen, yStart, yLen) {\r\n        const xEnd = xStart + xLen;\r\n        const yEnd = yStart + yLen;\r\n\r\n        for(let x=xStart; x<xEnd; ++x) {\r\n            for (let y=yStart; y<yEnd; ++y) {\r\n                level.tiles.set(x, y, {\r\n                    name: background.tile,\r\n                    type: background.type\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    backgrounds.forEach(background => {\r\n        background.ranges.forEach(range => {\r\n            if (range.length === 4) {\r\n                const [xStart, xLen, yStart, yLen] = range;\r\n                applyRange(background, xStart, xLen, yStart, yLen)\r\n            } else if (range.length === 3){\r\n                const [xStart, xLen, yStart] = range;\r\n                applyRange(background, xStart, xLen, yStart, 1);\r\n            } else if (range.length === 2) {\r\n                const [xStart, yStart] = range;\r\n                applyRange(background, xStart, 1, yStart, 1);\r\n            }\r\n        })\r\n    });\r\n}\r\n\r\nasync function loadJson(url) {\r\n    return new Promise(resolve => {\r\n        fetch(url).then(r => {\r\n            resolve(r.json());\r\n        });\r\n    });\r\n}\r\n\r\nexport async function loadSpriteSheet(name) {\r\n    let sheetSpec = await loadJson(`sprites/${name}.json`)\r\n    let image = await loadImage(sheetSpec.imageUrl);\r\n    const sprites = new SpriteSheet(\r\n        image,\r\n        sheetSpec.tileW,\r\n        sheetSpec.tileH,\r\n    );\r\n\r\n    if (sheetSpec.tiles) {\r\n        sheetSpec.tiles.forEach(tileSpec => {\r\n            sprites.defineTile(\r\n                tileSpec.name,\r\n                tileSpec.index[0],\r\n                tileSpec.index[1]\r\n            )\r\n        });\r\n    }\r\n\r\n    if (sheetSpec.frames) {\r\n        sheetSpec.frames.forEach(frameSpec => {\r\n            sprites.define(frameSpec.name, ...frameSpec.rect);\r\n        });\r\n    }\r\n\r\n    if (sheetSpec.animations) {\r\n        sheetSpec.animations.forEach(animSpec => {\r\n            const animation = createAnim(animSpec.frames, animSpec.frameLen)\r\n            sprites.defineAnim(animSpec.name, animation);\r\n        });\r\n    }\r\n    return sprites;\r\n}\r\n\r\nexport async function loadLevel(name, ctx) {\r\n    let levelSpec = await loadJson(`levels/${name}.json`)\r\n    const level = new Level();\r\n    createTiles(level, levelSpec.backgrounds);\r\n    let backgroundSprite = await loadSpriteSheet(levelSpec.spriteSheet);\r\n    const backgroundLayer = createBackgroundLayer(level, backgroundSprite);\r\n    level.comp.layers.push(backgroundLayer);\r\n    const spriteLayer = createSpriteLayer(level.entities);\r\n    level.comp.layers.push(spriteLayer);\r\n    return level;\r\n}\r\n","export default class Timer {\r\n    constructor(deltaTime = 1/60) {\r\n        let accumulatedTime = 0;\r\n        let lastTime = 0;\r\n        this.updateProxy = time => {\r\n            accumulatedTime += (time - lastTime) / 3000;\r\n            if (accumulatedTime > 1) {\r\n                accumulatedTime = 1;\r\n            }\r\n            while (accumulatedTime > deltaTime) {\r\n                this.update(deltaTime);\r\n                accumulatedTime -= deltaTime;\r\n            }\r\n            lastTime = time;\r\n            this.enqueue();\r\n        }\r\n    }\r\n    enqueue() {\r\n        requestAnimationFrame(this.updateProxy);\r\n        // setTimeout(this.updateProxy, 1000/5000, performance.now());\r\n    }\r\n    start() {\r\n        this.enqueue();\r\n    }\r\n}","import { Vec2 } from \"./math\";\r\n\r\nexport class Trait {\r\n    constructor(name) {\r\n        this.NAME = name;\r\n    }\r\n\r\n    update() {\r\n        console.warn('Unhandled call');\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    constructor() {\r\n        this.pos = new Vec2(0, 0);\r\n        this.vel = new Vec2(0, 0);\r\n        this.size = new Vec2(0, 0);\r\n        this.traits = [];\r\n    }\r\n\r\n    addTrait(trait) {\r\n        this.traits.push(trait);\r\n        this[trait.NAME] = trait;\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.traits.forEach(trait => {\r\n            trait.update(this, deltaTime);\r\n        })\r\n    }\r\n}","import { Trait } from \"../Class/Entity\";\r\n\r\nexport default class Jump extends Trait{\r\n    constructor() {\r\n        super('jump');\r\n\r\n        this.duration = 0.5;\r\n        this.velocity = 400;\r\n        this.engageTime = 0;\r\n    }\r\n\r\n    start() {\r\n        this.engageTime = this.duration;\r\n    }\r\n\r\n    cancel() {\r\n        this.engageTime = 0;\r\n    }\r\n\r\n    update(entity, deltaTime) {\r\n        if (this.engageTime > 0) {\r\n            entity.vel.y = -this.velocity;\r\n            this.engageTime -= deltaTime;\r\n        }\r\n    }\r\n}\r\n","import { Trait } from \"../Class/Entity\";\r\n\r\nexport default class Go extends Trait{\r\n    constructor() {\r\n        super('go');\r\n\r\n        this.dir = 0;\r\n        this.speed = 12000;\r\n        this.distance = 0;\r\n        this.heading = 1;\r\n    }\r\n\r\n    update(entity, deltaTime) {\r\n        entity.vel.x = this.speed * this.dir * deltaTime;\r\n        if (this.dir) {\r\n            this.heading = this.dir;\r\n            this.distance += Math.abs(entity.vel.x) * deltaTime;\r\n        } else {\r\n            this.distance = 0;\r\n        }\r\n    }\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport { loadSpriteSheet } from \"../loaders\";\r\nimport Jump from '../traits/Jump'\r\nimport Go from '../traits/Go'\r\nimport { createAnim } from \"../anim\";\r\n\r\nexport async function createMario() {\r\n    let marioSprite = await loadSpriteSheet('mario');\r\n    const mario = new Entity();\r\n    mario.size.set(16, 16);\r\n\r\n    mario.addTrait(new Go());\r\n    mario.addTrait(new Jump());\r\n\r\n    const runAnim = createAnim(['run-1', 'run-2', 'run-3'], 10);\r\n    function routeFrame(mario) {\r\n        if (mario.go.dir !== 0) {\r\n            return runAnim(mario.go.distance);\r\n        }\r\n        return 'idle';\r\n    }\r\n    mario.draw = function drawMario(ctx) {\r\n        marioSprite.draw(routeFrame(this), ctx, 0, 0, mario.go.heading < 0);\r\n    }\r\n\r\n    return mario;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const PRESSED = 1;\r\nconst RELEASED = 0;\r\n\r\nexport default class KeyBoardState {\r\n    constructor() {\r\n        // Holds the current state of a given key\r\n        this.keyStates = new Map();\r\n\r\n        // Holds the callback functions fro a key code\r\n        this.keyMap = new Map();\r\n    }\r\n\r\n    addMapping(code, callback) {\r\n        this.keyMap.set(code, callback);\r\n    }\r\n\r\n    handleEvent(event) {\r\n        const { code } = event;\r\n        if (!this.keyMap.has(code)) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        const keyState = event.type === 'keydown' ? PRESSED : RELEASED;\r\n\r\n        if (this.keyStates.get(code) === keyState) {\r\n            return;\r\n        }\r\n        this.keyStates.set(code, keyState);\r\n        this.keyMap.get(code)(keyState);\r\n    }\r\n\r\n    listenTo(window) {\r\n        ['keydown', 'keyup'].forEach(eventName => {\r\n            window.addEventListener(eventName, event=> {\r\n                this.handleEvent(event);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Keyboard from './Class/KeyBoardState'\r\n\r\nexport function setupKeyboard(entity) {\r\n    const SPACE = 'Space';\r\n    const RIGHT = 'ArrowRight';\r\n    const LEFT = 'ArrowLeft';\r\n    const input = new Keyboard();\r\n    input.addMapping(SPACE, keyState => {\r\n        if (keyState) {\r\n            entity.jump.start();\r\n        } else {\r\n            entity.jump.cancel();\r\n        }\r\n    });\r\n    input.addMapping(RIGHT, keyState => {\r\n        entity.go.dir = keyState;\r\n    });\r\n    input.addMapping(LEFT, keyState => {\r\n        entity.go.dir = -keyState;\r\n    });\r\n    return input;\r\n}","import {Vec2} from \"./math\";\r\n\r\nexport default class Camera {\r\n    constructor() {\r\n        this.pos = new Vec2(0, 0);\r\n        this.size = new Vec2(256, 224);\r\n    }\r\n}","export function setupMouseControl(canvas, entity, camera) {\r\n    let lastEvent;\r\n\r\n    ['mousedown', 'mousemove'].forEach(eventName => {\r\n        canvas.addEventListener(eventName, event => {\r\n            if (event.buttons === 1) {\r\n                entity.vel.set(0, 0);\r\n                entity.pos.set(\r\n                    event.offsetX + camera.pos.x,\r\n                    event.offsetY + camera.pos.y);\r\n            } else if (\r\n                event.buttons === 2 &&\r\n                lastEvent &&\r\n                lastEvent.buttons === 2 &&\r\n                lastEvent.type === 'mousemove'\r\n            ) {\r\n                camera.pos.x -= event.offsetX - lastEvent.offsetX;\r\n            }\r\n            lastEvent = event;\r\n        })\r\n    });\r\n\r\n    canvas.addEventListener('contextmenu', event => {\r\n       event.preventDefault();\r\n    });\r\n}","<template>\r\n    <div>\r\n        <canvas id=\"screen\" width=\"640\" height=\"640\">canvas not supported</canvas>\r\n<!--        <div class=\"test-img\">\r\n            <div></div>\r\n        </div>-->\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n    canvas {\r\n        border: 1px solid #ccc;\r\n    }\r\n    .test-img {\r\n        position: relative;\r\n        border: 1px solid red;\r\n        width: 513px;\r\n        height: 401px;\r\n        background: url(\"../../../public/img/characters.gif\") center center no-repeat;\r\n        div {\r\n            width: 16px;\r\n            height: 16px;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            border: 1px solid green;\r\n        }\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import { loadLevel } from \"./loaders\";\r\n    import Timer from './Timer'\r\n    import { createMario } from \"./Class/entities\";\r\n    import { createCollisionLayer, createCameraLayer } from \"./layers\";\r\n    import { setupKeyboard } from \"./input\";\r\n    import Camera from './Class/Camera'\r\n    import { setupMouseControl } from \"./debugger\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                canvas: null,\r\n                ctx: null\r\n            }\r\n        },\r\n        methods: {\r\n            async draw() {\r\n                let { ctx, canvas } = this;\r\n                const camera = new Camera();\r\n                const mario = await createMario(ctx);\r\n                const level = await loadLevel('1-1', ctx);\r\n                window.camera = camera;\r\n                mario.pos.set(14, 64);\r\n                level.entities.add(mario);\r\n                level.comp.layers.push(\r\n                    createCollisionLayer(level),\r\n                    createCameraLayer(camera)\r\n                );\r\n\r\n                const input = setupKeyboard(mario);\r\n                input.listenTo(window);\r\n\r\n                setupMouseControl(canvas, mario, camera);\r\n                const timer = new Timer(1/60);\r\n                timer.update = function update(deltaTime) {\r\n                    // mario.update(deltaTime);\r\n                    level.update(deltaTime);\r\n                    level.comp.draw(ctx, camera);\r\n                };\r\n                timer.start();\r\n            },\r\n            init() {\r\n                this.canvas = document.getElementById('screen');\r\n                this.ctx = this.canvas.getContext('2d');\r\n            }\r\n        },\r\n        mounted() {\r\n            this.init();\r\n            this.draw();\r\n\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7305c416&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=7305c416&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7305c416\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './views/drawingBoard/index.vue'\r\nimport SuperMario from './views/superMario/index'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/mario',\r\n      name: 'mario',\r\n      // route level code-splitting\r\n      // this generates a separate chunk (about.[hash].js) for this route\r\n      // which is lazy-loaded when the route is visited.\r\n      // component: () => import(/* webpackChunkName: \"about\" */ './views/superMario/index.vue')\r\n      component: SuperMario\r\n    }\r\n  ]\r\n})\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n\r\n  },\r\n  mutations: {\r\n\r\n  },\r\n  actions: {\r\n\r\n  }\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport './assets/scss/style.scss'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6315fbde&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=6315fbde&scoped=true&lang=scss&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=7305c416&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=7305c416&lang=scss&scoped=true&\""],"sourceRoot":""}